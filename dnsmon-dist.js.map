{"version":3,"file":"dnsmon-dist.js","sources":["dnsmon/lib/atlas.traceroute.js","dnsmon/lib/dateFormat.js","dnsmon/environment/utils.js","dnsmon/environment/languages/lang-en.js","dnsmon/environment/ParamsManager.js","dnsmon/lib/d3.v3.amd.js","dnsmon/view/TemplateManagerView.js","dnsmon/view/TimeOverviewView.js","dnsmon/view/svg/SvgChartView.js","dnsmon/view/svg/SvgContainerView.js","dnsmon/view/PopUpView.js","dnsmon/view/BreadcrumbsView.js","dnsmon/view/FullScreenView.js","dnsmon/lib/jquery.min.js","dnsmon/lib/jquery-ui.min.js","dnsmon/lib/jquery-ui.timepicker.js","dnsmon/view/ControlPanelView.js","dnsmon/controller/GesturesManager.js","dnsmon/controller/TimeController.js","dnsmon/view/svg/SvgTimeAxisView.js","dnsmon/view/svg/SvgOrdinalAxisView.js","dnsmon/view/MainView.js","dnsmon/model/Cell.js","dnsmon/model/Row.js","dnsmon/connector/atlas/RestConnectorAtlas.js","dnsmon/connector/atlas/ErrorsHandlerConnectorAtlas.js","dnsmon/connector/atlas/CacheConnectorAtlas.js","dnsmon/connector/atlas/IsolationLevelConnectorAtlas.js","dnsmon/connector/AggregationLevelConnector.js","dnsmon/connector/AntiFloodConnector.js","dnsmon/connector/log/LogRestConnector.js","dnsmon/connector/ConnectorFacade.js","dnsmon/lib/jquery.cookie.js","dnsmon/session/SessionManager.js","dnsmon/environment/HistoryManager.js","dnsmon/dnsmon-loader.js"],"names":[],"mappings":"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,WACA,MAAA,IAAA,GAAA,KAAA,GAAA,GAAA,KAAA,GAAA,GAAA,KAAA,GAoEA,IAAA,IAAA,GAAA,KACA,UAAA,SACA,aAAA,SACA,KAAA,MACA,WAAA,QACA,MAAA,SACA,MAAA,SACA,OAAA,SACA,MAAA,EACA,eAAA,SACA,KAAA,IACA,WAAA,QACA,MAAA,SACA,UAAA,SACA,UAAA,QACA,WAAA,QACA,UAAA,SACA,MAAA,SACA,eAAA,QACA,SAAA,SACA,QAAA,SACA,KAAA,MACA,SAAA,IACA,SAAA,MACA,cAAA,SACA,SAAA,SACA,UAAA,MACA,SAAA,SACA,UAAA,SACA,YAAA,QACA,eAAA,QACA,WAAA,SACA,WAAA,SACA,QAAA,QACA,WAAA,SACA,aAAA,QACA,cAAA,QACA,cAAA,QACA,cAAA,QACA,cAAA,MACA,WAAA,QACA,SAAA,SACA,YAAA,MACA,QAAA,QACA,QAAA,QACA,WAAA,QACA,UAAA,SACA,YAAA,SACA,YAAA,QACA,QAAA,SACA,UAAA,SACA,WAAA,SACA,KAAA,SACA,UAAA,SACA,KAAA,QACA,MAAA,MACA,YAAA,SACA,KAAA,QACA,SAAA,SACA,QAAA,SACA,UAAA,SACA,OAAA,QACA,MAAA,SACA,MAAA,SACA,SAAA,SACA,cAAA,SACA,UAAA,QACA,aAAA,SACA,UAAA,SACA,WAAA,SACA,UAAA,SACA,qBAAA,SACA,UAAA,SACA,WAAA,QACA,UAAA,SACA,UAAA,SACA,YAAA,SACA,cAAA,QACA,aAAA,QACA,eAAA,QACA,eAAA,QACA,eAAA,SACA,YAAA,SACA,KAAA,MACA,UAAA,QACA,MAAA,SACA,QAAA,SACA,OAAA,QACA,iBAAA,QACA,WAAA,IACA,aAAA,SACA,aAAA,QACA,eAAA,QACA,gBAAA,QACA,kBAAA,MACA,gBAAA,QACA,gBAAA,SACA,aAAA,QACA,UAAA,SACA,UAAA,SACA,SAAA,SACA,YAAA,SACA,KAAA,IACA,QAAA,SACA,MAAA,QACA,UAAA,QACA,OAAA,SACA,UAAA,SACA,OAAA,SACA,cAAA,SACA,UAAA,SACA,cAAA,SACA,cA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","sourcesContent":["function AtlasTraceroute(data) {\n    this.data = data;\n    this.reverseNames = data.reverse_names || {};\n\n    this.render = function() {\n        var output = [];\n        output.push(this.renderTimestamp(this.data.timestamp));\n        output.push(this.renderHeader(\n            this.data.dst_name, this.data.dst_addr, this.data.size));\n        for (var h=0; h < this.data.result.length; h++) {\n            var hop = this.data.result[h];\n            output.push(this.renderHop(hop));\n        }\n        return \"<div class='traceroute'>\" + output.join(\"\") + \"</div>\";\n    };\n\n    this.renderTimestring = function(timestamp) {\n        return timestamp;\n    };\n\n    this.renderTimestamp = function(timestamp) {\n        return \"<span class='traceroute-timestamp'>\" +\n            this.renderTimestring(timestamp) + \"</span>\";\n    };\n\n    this.renderHeader = function(dstName, dstAddr, packetSize) {\n        return \"<div class='traceroute-header'>traceroute to \" + dstName + \" (\" +\n            dstAddr + \"), \" + packetSize + \" byte packets</div>\";\n    };\n\n    this.renderHopNumber = function(hop) {\n        return \"<span class='traceroute-hop-number'>\" + hop + \"</span>\";\n    }\n\n    this.renderReply = function(reply, lastAddr) {\n        var output = [];\n        if (reply.x == \"*\") {\n            output.push(this.renderTimeout());\n        }\n        if (reply.hasOwnProperty(\"from\")) {\n            var addr = reply.from;\n            if (addr && addr != lastAddr) {\n                output.push(this.renderAddress(addr, this.reverseNames[addr]));\n            }\n        }\n\n        if (reply.hasOwnProperty(\"rtt\")) {\n            output.push(this.renderTime(reply.rtt));\n        }\n        if (reply.hasOwnProperty(\"err\")) {\n            output.push(this.renderError(reply.err));\n        }\n        return output.join(\" \");\n    };\n\n    this.renderHop = function(hop) {\n        var lastAddr = null;\n        var output = [];\n        output.push(this.renderHopNumber(hop.hop));\n        for (var r=0; r < hop.result.length; r++) {\n            var reply = hop.result[r];\n            output.push(this.renderReply(reply, lastAddr));\n            lastAddr = reply.from || lastAddr;\n\n        }\n        return \"<div class='traceroute-hop'>\" + output.join(\" \") + \"</div>\";\n    };\n\n    this.renderTimeout = function() {\n        return \"*\";\n    };\n\n    this.renderTime = function(time) {\n        return time + \" ms\";\n    };\n\n    this.renderError = function(error) {\n        return \"!\" + error;\n    };\n\n    this.renderAddress = function(addr, hostname) {\n        var label;\n        if (hostname) {\n            label = hostname + \" (\" + addr + \")\";\n        } else {\n            label = addr;\n        }\n        return \"<a target='_blank' href='https://stat.ripe.net/\" + addr +\n            \"' title='\" + label + \" [click to open in RIPEstat]'>\" + addr + \"</a>\";\n    };\n};\ndefine(\"lib.atlas-traceroute-printer\", function(){});\n\n","/*\r\n * Date Format 1.2.3\r\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n * MIT license\r\n *\r\n * Includes enhancements by Scott Trenda <scott.trenda.net>\r\n * and Kris Kowal <cixar.com/~kris.kowal/>\r\n *\r\n * Accepts a date, a mask, or a date and a mask.\r\n * Returns a formatted version of the given date.\r\n * The date defaults to the current date/time.\r\n * The mask defaults to dateFormat.masks.default.\r\n */\r\n\r\nvar dateFormat = function () {\r\n    var\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n        timezoneClip = /[^-+\\dA-Z]/g,\r\n        pad = function (val, len) {\r\n            val = String(val);\r\n            len = len || 2;\r\n            while (val.length < len) val = \"0\" + val;\r\n            return val;\r\n        };\r\n\r\n    // Regexes and supporting functions are cached through closure\r\n    return function (date, mask, utc) {\r\n        var dF = dateFormat;\r\n\r\n        // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\r\n        if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\r\n            mask = date;\r\n            date = undefined;\r\n        }\r\n\r\n        // Passing date through Date applies Date.parse, if necessary\r\n        date = date ? new Date(date) : new Date;\r\n        if (isNaN(date)) throw SyntaxError(\"invalid date\");\r\n\r\n        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n\r\n        // Allow setting the utc argument via the mask\r\n        if (mask.slice(0, 4) == \"UTC:\") {\r\n            mask = mask.slice(4);\r\n            utc = true;\r\n        }\r\n\r\n        var\t_ = utc ? \"getUTC\" : \"get\",\r\n            d = date[_ + \"Date\"](),\r\n            D = date[_ + \"Day\"](),\r\n            m = date[_ + \"Month\"](),\r\n            y = date[_ + \"FullYear\"](),\r\n            H = date[_ + \"Hours\"](),\r\n            M = date[_ + \"Minutes\"](),\r\n            s = date[_ + \"Seconds\"](),\r\n            L = date[_ + \"Milliseconds\"](),\r\n            o = utc ? 0 : date.getTimezoneOffset(),\r\n            flags = {\r\n                d:    d,\r\n                dd:   pad(d),\r\n                ddd:  dF.i18n.dayNames[D],\r\n                dddd: dF.i18n.dayNames[D + 7],\r\n                m:    m + 1,\r\n                mm:   pad(m + 1),\r\n                mmm:  dF.i18n.monthNames[m],\r\n                mmmm: dF.i18n.monthNames[m + 12],\r\n                yy:   String(y).slice(2),\r\n                yyyy: y,\r\n                h:    H % 12 || 12,\r\n                hh:   pad(H % 12 || 12),\r\n                H:    H,\r\n                HH:   pad(H),\r\n                M:    M,\r\n                MM:   pad(M),\r\n                s:    s,\r\n                ss:   pad(s),\r\n                l:    pad(L, 3),\r\n                L:    pad(L > 99 ? Math.round(L / 10) : L),\r\n                t:    H < 12 ? \"a\"  : \"p\",\r\n                tt:   H < 12 ? \"am\" : \"pm\",\r\n                T:    H < 12 ? \"A\"  : \"P\",\r\n                TT:   H < 12 ? \"AM\" : \"PM\",\r\n                Z:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\r\n                o:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                S:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n            };\r\n\r\n        return mask.replace(token, function ($0) {\r\n            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n        });\r\n    };\r\n}();\r\n\r\n// Some common format strings\r\ndateFormat.masks = {\r\n    \"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\r\n    shortDate:      \"m/d/yy\",\r\n    mediumDate:     \"mmm d, yyyy\",\r\n    longDate:       \"mmmm d, yyyy\",\r\n    fullDate:       \"dddd, mmmm d, yyyy\",\r\n    shortTime:      \"h:MM TT\",\r\n    mediumTime:     \"h:MM:ss TT\",\r\n    longTime:       \"h:MM:ss TT Z\",\r\n    isoDate:        \"yyyy-mm-dd\",\r\n    isoTime:        \"HH:MM:ss\",\r\n    isoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\r\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n};\r\n\r\n// Internationalization strings\r\ndateFormat.i18n = {\r\n    dayNames: [\r\n        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n    ],\r\n    monthNames: [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n};\r\n\r\n// For convenience...\r\nDate.prototype.format = function (mask, utc) {\r\n    return dateFormat(this, mask, utc);\r\n};\r\n\ndefine(\"lib.date-format\", function(){});\n\n","define('env.utils',[\n    \"lib.date-format\"\n], function(){\n    var locale;\n\n    locale = {};\n    /**\n     * A collection of utilities\n     */\n\n    return {\n\n        addMinutes: function (date, minutes) {\n            return new Date(date.getTime() + (minutes * 60 * 1000));\n        },\n\n        subMinutes: function (date, minutes) {\n            return new Date(date.getTime() - (minutes * 60 * 1000));\n        },\n\n        translate: function (pointsArray, vector) {\n            var item, translatedArray;\n\n            translatedArray = [];\n\n            for (var n = 0, length = pointsArray.length; n < length; n++) {\n                item = pointsArray[n];\n                translatedArray.push({x: item.x + vector.x, y: item.y + vector.y});\n            }\n            return translatedArray;\n        },\n\n        computeColorScale: function (legend) {\n            var mapOut, legendItem;\n\n            mapOut = {valueRange: [], colorRange: []};\n\n            for (var n = 0, length = legend.length; n < length; n++) {\n                legendItem = legend[n];\n\n                mapOut.valueRange = mapOut.valueRange.concat(legendItem.valueRange);\n                mapOut.colorRange = mapOut.colorRange.concat(legendItem.colorRange);\n            }\n            return mapOut;\n        },\n\n        getLongestString: function (arrayOfStrings) {\n            var maximum, item;\n\n            maximum = -Infinity;\n            for (var n = 0, length = arrayOfStrings.length; n < length; n++) {\n                item = arrayOfStrings[n].length;\n\n                if (maximum < item) {\n                    maximum = item;\n                }\n            }\n\n            return maximum;\n        },\n\n        writeSvgText: function (container, textArray, position, padding) {\n            var textItem, actualPosition, interline, text;\n\n            actualPosition = 0;\n            interline = 15;\n\n            container\n                .selectAll(\"text\")\n                .remove();\n\n            for (var n = 0, length = textArray.length; n < length; n++) {\n                textItem = textArray[n];\n\n                actualPosition = interline * n;\n\n                container\n                    .append(\"text\")\n                    .attr(\"class\", \"popup-text\")\n                    .attr(\"dx\", position.x + padding.left)\n                    .attr(\"dy\", position.y + actualPosition + padding.top)\n                    .text(textItem);\n            }\n\n            return text;\n        },\n\n        lightClone: function (toBeCloned) {\n            var cloned, isArray;\n\n            isArray = toBeCloned instanceof Array;\n\n            if (isArray) {\n                cloned = [];\n\n                for (var n = 0, length = toBeCloned.length; n < length; n++) {\n                    cloned.push(toBeCloned[n]);\n                }\n\n            } else {\n                cloned = {};\n\n                for (var item in toBeCloned) {\n                    cloned[item] = toBeCloned[item];\n                }\n            }\n\n            return cloned;\n        },\n\n        log: function (text, debug) {\n            if (debug) {\n                console.log(new Date(), text);\n            }\n        },\n\n        getUrlParam: function (key) {\n            var regex, result, match, url;\n            url = document.location.search;\n            regex = new RegExp('(?:\\\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');\n            result = [];\n\n            while ((match = regex.exec(url)) != null) {\n                result.push(match[1]);\n            }\n            return result;\n        },\n\n        indexOf: function (element, array) {\n            var index = -1;\n\n            if (array.indexOf) {\n                index = array.indexOf(element);\n            } else {\n\n                for (var n = 0, length = array.length; n < length; n++) {\n                    if (array[n] == element) {\n                        index = n;\n                        break;\n                    }\n                }\n            }\n            return index;\n        },\n\n        encapsulateDom: function (jQuerySelection) {\n            return {$: jQuerySelection, plain: jQuerySelection[0]};\n        },\n\n        loadStylesheets: function (cssFiles, callback) {\n            var cssRequested, stylesLoaded, cssListenerInterval, cssListenerTimeout, cssListener;\n\n            stylesLoaded = document.styleSheets.length; // Initial css loaded\n            cssRequested = cssFiles.length; // css to load\n\n            for (var n=0; n<cssRequested; n++){ // load css\n                this.loadCss(cssFiles[n]);\n            }\n\n            cssListenerInterval = 50; //50 ms\n            cssListenerTimeout = 10000; // 10 secs\n            cssListener = setInterval(function(){\n\n                if(document.styleSheets.length >= stylesLoaded + cssRequested){ // check if all the css are loaded\n                    clearInterval(cssListener);\n                    callback();\n                }else{\n                    if (cssListenerTimeout <= 0){\n                        clearInterval(cssListener);\n                        console.log(\"It is not possible to load stylesheets.\");\n                    }\n                    cssListenerTimeout -= cssListenerInterval;\n                }\n            }, cssListenerInterval);\n        },\n\n        loadCss: function (cssFile) {\n            var newLink;\n\n            newLink = document.createElement('link');\n            newLink.rel = 'stylesheet';\n            newLink.type = 'text/css';\n            newLink.href = cssFile;\n            newLink.async = true;\n            (document.head || document.getElementsByTagName(\"head\")[0]).appendChild(newLink);\n        },\n\n        getRectangularVertexPoints: function (x, y, width, height) {\n            var leftTop, leftBottom, rightTop, rightBottom;\n\n            leftTop = {x: x, y: y};\n            leftBottom = {x: x, y: y + height};\n\n            rightTop = {x: x + width, y: y};\n            rightBottom = {x: x + width, y: y + height};\n\n            return [leftTop, rightTop, rightBottom, leftBottom]; //returned clockwise\n        },\n\n        isThereAnIntersection: function (selectionVertices, cellVertices) {\n            var a, b, c, d, e, f, g, h, thereIsAnIntersection, cellCenter, isSelectionStartingInARect, isSelectionEndingInARect,\n                intersectionPoint;\n\n            a = selectionVertices[0];\n            b = selectionVertices[1];\n            c = selectionVertices[2];\n            d = selectionVertices[3];\n\n            e = cellVertices[0];\n            f = cellVertices[1];\n            g = cellVertices[2];\n            h = cellVertices[3];\n\n            intersectionPoint = this.getLinesIntersection(a, b, e, h);\n\n            function isPointInside(a, b, c, d, p) {\n                return p.x >= a.x && p.x <= b.x && p.y >= a.y && p.y <= d.y;\n            }\n\n            // Don't declare the single items in dedicated vars in order to calculate them only if needed\n            thereIsAnIntersection =\n                isPointInside(e, f, g, h, a) || //Is It starting in a rect?\n                isPointInside(a, b, c, d, this.getRectangleCenter(e, f, g, h)) ||\n                isPointInside(a, b, c, d, e) ||\n                isPointInside(a, b, c, d, h) ||\n                isPointInside(a, b, c, d, g) ||\n                isPointInside(a, b, c, d, f) ||\n                isPointInside(e, f, g, h, c) || //Is it ending in a rect?\n                (intersectionPoint != null);\n\n            return thereIsAnIntersection;\n        },\n\n        getLinesIntersection: function (a, b, c, d) {\n\n            /// \"unroll\" the objects\n            var p0x = a.x,\n                p0y = a.y,\n                p1x = b.x,\n                p1y = b.y,\n                p2x = c.x,\n                p2y = c.y,\n                p3x = d.x,\n                p3y = d.y,\n\n            /// calc difference between the coords\n                d1x = p1x - p0x,\n                d1y = p1y - p0y,\n                d2x = p3x - p2x,\n                d2y = p3y - p2y,\n\n            /// determinator\n                d = d1x * d2y - d2x * d1y,\n\n                px, py,\n                s, t;\n\n            /// if is not intersecting/is parallel then return immediately\n            if (d == 0.0)\n                return null;\n\n            /// solve x and y for intersecting point\n            px = p0x - p2x;\n            py = p0y - p2y;\n\n            s = (d1x * py - d1y * px) / d;\n            if (s >= 0 && s <= 1) {\n\n                /// if s was in range, calc t\n                t = (d2x * py - d2y * px) / d;\n                if (t >= 0 && t <= 1) {\n\n                    return {x: p0x + (t * d1x),\n                        y: p0y + (t * d1y)}\n                }\n            }\n\n            return null;\n        },\n\n        getRectangleCenter: function (a, b, c, d) {\n            var x, y;\n            x = ((b.x - a.x) / 2) + a.x;\n            y = ((d.y - a.y) / 2) + a.y;\n\n            return {x: x, y: y};\n        },\n\n        join: function (array, char) {\n            var stringOut = \"\";\n            if (array.join) {\n                stringOut = array.join(char);\n            } else {\n\n                for (var n = 0, length = array.length; n < length; n++) {\n                    stringOut += array[n];\n                    if (n != length - 1) {\n                        stringOut += '' + char;\n                    }\n                }\n            }\n\n            return stringOut;\n        },\n\n        split: function (string, char, skipEmpty) {\n            var arrayOut, item, tmp;\n\n            arrayOut = string.split(char);\n\n            if (skipEmpty) {\n\n                tmp = [];\n\n                for (var n = 0, length = arrayOut.length; n < length; n++) {\n                    item = arrayOut[n];\n                    if (item != '') {\n                        tmp.push(item);\n                    }\n                }\n\n                arrayOut = tmp;\n            }\n\n            return arrayOut;\n        },\n\n        logOnce: function (log) {\n            if (!window.once) {\n                window.once = true;\n                this.log(log);\n            }\n        },\n\n        reduceCalls: function (reductionId, reductionFactor) {\n            var callNow;\n            callNow = false;\n            if (!window.reductionCallsCounters) {\n                window.reductionCallsCounters = {};\n            }\n\n            if (window.reductionCallsCounters[reductionId] == null) {\n                window.reductionCallsCounters[reductionId] = reductionFactor;\n            }\n\n            if (window.reductionCallsCounters[reductionId] == 0) {\n                callNow = true;\n                window.reductionCallsCounters[reductionId] = reductionFactor\n            } else {\n                window.reductionCallsCounters[reductionId]--;\n            }\n\n            return callNow;\n        },\n\n        timestampToUTCDate: function (timestamp) {\n            var date = new Date(timestamp * 1000);\n            return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n        },\n\n        getInstanceSuffix: function (domName) {\n            var suffix;\n\n            suffix = domName.replace('.', '');\n            suffix = suffix.replace('#', '');\n\n            return suffix;\n        },\n\n        getUrlParameters: function (domName) { // Get a map composed of ALL the parameters\n            var map, suffix, parts, subElements, atLeastOne;\n\n            map = {};\n            atLeastOne = false;\n            suffix = this.getInstanceSuffix(domName) + '.';\n\n            parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\n                key = key.toString().replace(suffix, ''); // Creates the map removing the suffix\n\n                if (key.indexOf('.') != -1) {\n                    subElements = key.split('.');\n                    if (!map[subElements[0]]) {\n                        map[subElements[0]] = {};\n                    }\n                    map[subElements[0]][subElements[1]] = value;\n                } else {\n                    map[key] = value;\n                }\n\n                atLeastOne = true;\n            });\n\n            return (atLeastOne) ? map : null;\n        },\n\n        mergeMaps: function (map1, map2) {\n            var mapOut;\n\n            mapOut = {};\n\n            for (var key in map1) {\n                mapOut[key] = map1[key];\n            }\n\n            for (var key in map2) {\n                mapOut[key] = map2[key];\n            }\n\n            return mapOut;\n        },\n\n        isNumber: function (n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n\n        dateToString: function (date) { //This is an indirection, may be useful in the future to manipulate dates\n            return \"\" + date.getUTCFullYear() +\n                \"-\" + ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n                \"-\" + ('0' + date.getUTCDate()).slice(-2) +\n                \" \" + ('0' + date.getUTCHours()).slice(-2) +\n                \":\" + ('0' + date.getUTCMinutes()).slice(-2) +\n                \":\" + ('0' + date.getUTCSeconds()).slice(-2) +\n                \" UTC\";\n        },\n\n        dateToStringShort: function (date) { //This is an indirection, may be useful in the future to manipulate dates\n            return \"\" + date.getUTCFullYear() +\n                \"-\" + ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n                \"-\" + ('0' + date.getUTCDate()).slice(-2) +\n                \" \" + ('0' + date.getUTCHours()).slice(-2) +\n                \":\" + ('0' + date.getUTCMinutes()).slice(-2);\n        },\n\n        timestampToLocalDate: function (timestamp) {\n            var date;\n            date = new Date(timestamp * 1000);\n            return date;\n        },\n\n        localDateToUTCDate: function (date) {\n            var utcDate;\n\n            utcDate = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\n            return utcDate;\n        },\n\n        UTCDateToLocalDate: function (date) {\n            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n        },\n\n        dateToUTCTimestamp: function (date) {\n            return Math.ceil(date.getTime() / 1000);\n//            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(),  date.getHours(), date.getMinutes(), date.getSeconds())).getTime()/1000;\n        },\n\n        callCallbacks: function (list, parameters) {\n            var item;\n\n            for (var n = 0, length = list.length; n < length; n++) {\n                item = list[n];\n                item.call(this, parameters);\n            }\n        },\n\n        getCurrentUrl: function () {\n            return window.location.href;\n        },\n\n        setParam: function (key, value, url) {\n            var baseUrl, paramsUrl, pair, query, pairs, keyTmp, valueTmp, newPairs, inserted, questionMarkPosition,\n                itemUrl;\n\n            newPairs = [];\n            inserted = false;\n\n            if (url) {\n                questionMarkPosition = url.indexOf('?');\n                if (questionMarkPosition == -1) {\n                    baseUrl = url;\n                    paramsUrl = '';\n                } else {\n                    baseUrl = url.substring(0, questionMarkPosition);\n                    paramsUrl = url.substring(questionMarkPosition + 1, url.length);\n                }\n            } else {\n                baseUrl = '';\n                paramsUrl = '';\n            }\n\n            pairs = paramsUrl.split('&');\n\n            for (var n = 0, length = pairs.length; n < length; n++) {\n                itemUrl = pairs[n];\n\n                if (itemUrl != \"\") {\n                    pair = (itemUrl).split('=');\n\n                    keyTmp = pair[0];\n                    valueTmp = pair[1];\n\n                    if (keyTmp == key) {\n                        if (value != null && value != '') {\n                            newPairs.push(keyTmp + \"=\" + value);\n                        }\n                        inserted = true;\n                    } else {\n                        newPairs.push(keyTmp + \"=\" + valueTmp);\n                    }\n                }\n            }\n\n            if (!inserted) {\n                if (value != null && value != \"\") {\n                    newPairs.push(key + \"=\" + value);\n                }\n            }\n\n            query = this.join(newPairs, '&');\n\n            return baseUrl + '?' + query;\n        },\n\n        containsAll: function (containerArray, containedArray) {\n            var item;\n\n            for (var n = 0, length = containedArray.length; n < length; n++) {\n                item = containedArray[n];\n                if (this.indexOf(item, containerArray) == -1) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        objectSize: function (object) {\n            var recurse, objectList, bytes;\n\n            objectList = [];\n            recurse = function (value) {\n                bytes = 0;\n\n                if (typeof value === 'boolean') {\n                    bytes = 4;\n                } else if (typeof value === 'string') {\n                    bytes = value.length * 2;\n                } else if (typeof value === 'number') {\n                    bytes = 8;\n                } else if (typeof value === 'object'\n                    && objectList.indexOf(value) === -1) {\n                    objectList[objectList.length] = value;\n                    for (i in value) {\n                        bytes += 8;\n                        bytes += recurse(value[i]);\n                    }\n                }\n                return bytes;\n            };\n\n            return recurse(object);\n        },\n\n        removeSubArray: function (mainArray, subArray) {\n            var item, tmp;\n\n            tmp = [];\n            for (var n=0,length=mainArray.length; n<length; n++) {\n                item = mainArray[n];\n                if (subArray.indexOf(item) == -1){\n                    tmp.push(item);\n                }\n            }\n\n            return tmp;\n        },\n\n        validateIP: function(str){\n            var ipv6TestRegEx, ipv4TestRegEx;\n\n            ipv6TestRegEx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/;\n            ipv4TestRegEx = /^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/;\n\n            return ipv4TestRegEx.test(str) || ipv6TestRegEx.test(str);\n\n//            return /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(str);\n        },\n\n        isLocalStorageAvailable: function(){\n            try {\n                return 'localStorage' in window && window['localStorage'] !== null;\n            } catch (e) {\n                return false;\n            }\n        },\n\n        getLocalData: function(key){\n            var storedValue, storedExpiration;\n\n            storedValue = localStorage[key];\n            storedExpiration = localStorage['expirationDates-' + key];\n\n            if (storedValue && (!storedExpiration || storedExpiration > (new Date()).getTime())){\n                return storedValue;\n            }\n\n            return null;\n        },\n\n        setLocalData: function(key, data, expiration){\n            try {\n\n                localStorage[key] = data;\n                localStorage['expirationDates-' + key] = expiration.getTime();\n\n            } catch(error) {\n\n                console.log('It was not possible to store the data: ' + error.toString());\n\n                return false;\n            }\n\n            return true;\n        },\n\n\n        globalizeIfUndefined: function(what, where){\n            for (var n=0,length=where.length; n<length; n++){\n                if (typeof window[where[n]] == 'undefined'){\n                    window[where[n]] = what;\n                }\n            }\n        },\n\n\n        getBrowserVersion: function(){\n\n            if (!locale.browser) {\n                locale.browser = (function () {\n                    var userAgent, appName, matched, tem;\n                    userAgent = navigator.userAgent;\n                    appName = navigator.appName;\n                    matched = userAgent.match(/(opera|chrome|safari|firefox|msie|trident|Windows Phone|BlackBerry|Opera Mini|IEMobile|iPhone|iPad|iPod|webOS|Android)\\/?\\s*([\\d\\.]+)/i) || [];\n                    matched = matched[2] ? [matched[1], matched[2]] : [appName, navigator.appVersion, '-?'];\n                    if (matched && (tem = userAgent.match(/version\\/([\\.\\d]+)/i)) != null) matched[2] = tem[1];\n                    return {name: matched[0], version: matched[1].split('.')};\n                })();\n            }\n\n            return locale.browser;\n        },\n\n\n        logErrors: function(callback){\n            if (callback){\n                window.onerror = function errorUnwrapper(errorMsg, url, lineNumber) {\n                    return callback(\"error\", errorMsg + ' at ' + url + ' on line ' + lineNumber);\n                }\n            } else {\n                window.onerror = null;\n            }\n        },\n\n        clearObject: function(objToBeCleaned){\n            for (var objKey in objToBeCleaned){\n                objToBeCleaned[objKey] = null;\n                delete objToBeCleaned[objKey];\n            }\n        }\n\n    }\n});\n","/**\n * Created by mcandela on 23/01/14.\n */\n\n\ndefine('env.languages.en',[], function(){\n  return {\n    aggregationLevelLabel: \"Data resolution\",\n//        packetLossRangesLabel: \"Unanswered queries colours range:\",\n    packetLossLabel: \"Unanswered queries\",\n    responseTimeLabel: \"Response time\",\n    forwardTitle: \"Get the latest results\",\n    relativeResponseTimeLabel: \"Relative response time\",\n    viewSelectboxTitle: \"Inspect the same situation from another point of view\",\n    numberProbesLabel: \"Number of probes\",\n    startDateLabel: \"Start date:\",\n    endDateLabel: \"End date:\",\n    changeTimeWindowTitle: \"Change time window\",\n    changeColorsRangeTitle: \"Change colours range\",\n    shiftLeftTitle: \"Shift the time window left\",\n    shiftRightTitle: \"Shift the time window right\",\n    zoomInTitle: \"Zoom in\",\n    zoomOutTitle: \"Zoom out\",\n    closestTracerouteLabel: \"Closest traceroutes before and after the selected cell (enlarge the dialog to compare):\",\n    allRowsTitle: \"Display all rows\",\n    serverLevelLabel: \"server\",\n    zoneLevelLabel: \"zone\",\n    malformedDataset: \"Sorry, malformed input data\",\n    serverSlowMessage: \"Sorry, the server is responding slowly\",\n    connectionFailed: \"Sorry, it is impossible to connect to the server\",\n    lastQueryFails: \"Last query failed; the current visualisation is not up to date\",\n    waitingConnection: \"Waiting for connection\",\n    filtersPopupTitle: \"Filters\",\n    excludeErrorsFilterLabel: \"Exclude errors (exclude rcodes != 0)\",\n\n    pressToApply: \"Press Enter to apply\",\n    extraInfoDialogTitle: \"Result details\",\n\n    keepUpdatedTitle: \"Continually update results\",\n    keepUpdatedNotActive: \"Auto refresh disabled\",\n    keepUpdatedActive: \"Auto refresh enabled\",\n    extraInfoDialogTextSample: \"Data for the selected cell\",\n    extraInfoDialogTextOverview: \"Measurement overview on RIPE Atlas\",\n    minimumTimeSelectionReached: \"Sorry, minimum time window reached\",\n    fromTimeRange: \"From:\",\n    toTimeRange: \"To:\",\n    lastUpdateAt: \"Last update:\",\n    aggregationLevelTitle: \"Data resolution describes the amount of time represented by one cell\",\n    dnsResponsePrbId: \"Probe ID\",\n    dnsResponseRt: \"Response time\",\n    dnsResponseNsId: \"NSID\",\n    dnsResponseDate: \"Date\",\n    notYourConfig: \"This permalink is temporarily overriding your personal configurations\",\n    fullScreenTitle: \"Full screen\",\n\n\n    minimumSelectionImposed: \"Sorry, the selection was too small    \",\n    tooZoomedMessage: \"Sorry, we don't have more details. Try to click on a row's name\",\n    clickToRemoveRow: \"Click on a row's name to exclude it from the displayed results\",\n    bottomInfoSection: \"Use your mouse wheel or click and drag a selection to zoom, press the left/right arrow keys to shift the time window, press the shift key to remove rows from the displayed results\",\n\n    noDataForRow: \"We don't have data for this server in the selected time period\",\n\n    hostBindResponsePrbId: \"Probe ID\",\n    hostBindResponseRt: \"Response time\",\n    hostBindResponseMsmId: \"Measurement ID\",\n    hostBindResponseDate: \"Date\",\n    hostBindResponseNoAnswer: \"The response has no answer\",\n\n    tab1Title: 'DNS response',\n    tab2Title: 'Traceroute',\n    tab3Title: 'hostname.bind',\n\n    thresholdsDescritions: {\n      pls: \"Change the unanswered queries colours range: these thresholds are used to colours the cells based on the percentage of packets lost.\",\n      rtt: \"Change the response time colours range: these thresholds are used to colours the cells based on the response time.\",\n      \"relative-rtt\": \"Change the relative response time colours range: these thresholds are used to colours the cells based on the increase in the response time related to the minimum available for the row.\"\n    },\n\n\n    /*not revised*/\n    filterSelectionTitle: \"Filter the represented data:\",\n\n    protocol3SelectionFilterLabel: \"Layer 3 protocol\",\n    protocol4SelectionFilterLabel: \"Layer 4 protocol\"\n  }\n});\n","/**\n * Created by mcandela on 11/12/13.\n */\n\ndefine('env.params-manager',[\n    \"env.utils\"\n], function(utils){\n\n    /**\n     * ParamsManager is the only component aware about the translation between external and internal parameters.\n     * It allows to have high-level internal parameters expressed as visualisation terms and external domain related\n     * parameters. This approach allows to easily introduce at any time new \"views\" based on different data elements\n     * using the same graphic metaphor.\n     *\n     * @class ParamsManager\n     * @constructor\n     * @module environment\n     */\n\n    var ParamsManager = function(){\n\n\n        /**\n         * This method merges two parameters vectors\n         *\n         * @method mergeParams\n         * @input {Object} actualParams A vector of parameters\n         * @input {Object} newParams A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.mergeParams = function(actualParams, newParams){\n            for (var paramKey in newParams){ // MAP not Array\n                actualParams[paramKey] = newParams[paramKey];\n            }\n\n            return actualParams;\n        };\n\n\n        /**\n         * This method converts the parameters vector from the external to the internal format.\n         * It is an indirection layer able to converts parameters from an external domain to a graphical domain\n         * stopping at the same time the propagation of changes involving the external parameters.\n         *\n         * @method fromExternalToInternal\n         * @input {Object} params A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.fromExternalToInternal = function(params){\n            var zone, server, type, startDate, selectedRows, outParams, endDate, zoneName, serverName, typeName,\n                startDateName, endDateName, selectedRowsName, isTcp, ipVersion, isTcpName, ipVersionName, validatorMap,\n                timeWindowName, timeWindow, filterProbesName, filterProbes;\n\n            zoneName = \"zone\";\n            serverName = \"server\";\n            typeName = \"type\";\n            startDateName = \"startTime\";\n            endDateName = \"endTime\";\n            selectedRowsName = \"selectedRows\";\n            isTcpName = \"isTcp\";\n            ipVersionName = \"ipVersion\";\n            timeWindowName = \"defaultTimeWindow\";\n            filterProbesName = \"filterProbes\";\n\n            validatorMap = {\n                \"zone\": {\n                    type: \"string\"\n                },\n\n                \"server\": {\n                    type: \"string\"\n                },\n\n                \"type\": {\n                    type: function(val){ return (val == \"zone-servers\" || val == \"server-probes\" || val == \"server-instances\");},\n                    message: \"The type param can be one of 'zone-servers', 'server-probes' or 'server-instances'\"\n                },\n\n                \"startTime\": {\n                    type: \"number\",\n                    cast: function(val){ return ((typeof val == \"string\") ? parseInt(val) : val); }, // This is a cast for multiple types input\n                    message: \"startTime it is not a valid Unix timestamp\"\n                },\n\n                \"endTime\": {\n                    type: \"number\",\n                    cast: function(val){ return ((typeof val == \"string\") ? parseInt(val) : val); }, // This is a cast for multiple types input\n                    message: \"endTime it is not a valid Unix timestamp\"\n                },\n\n                \"selectedRows\": {\n                    type: \"string\",\n                    message: \"The selectedRows params must be a list of comma-separated ids\"\n                },\n\n                \"ipVersion\": {\n                    type: function(val){ return (val == \"6\" || val == \"4\" || val == \"both\");},\n                    cast: function(val){ return (val == \"6\" || val == \"4\") ? parseInt(val) : \"both\"; }, // This is a cast for multiple types input\n                    message: \"The ipVersion param can be '4', '6' or 'both'\"\n                },\n\n                \"isTcp\": {\n                    type: \"boolean\",\n                    cast: function(val){\n                        return ((typeof val == \"string\") ? (val == \"true\") : val);// This is a cast for multiple types input\n                    }\n                },\n\n                \"filterProbes\": {\n                    type: \"boolean\",\n                    cast: function(val){\n                        return ((typeof val == \"string\") ? (val == \"true\") : val);// This is a cast for multiple types input\n                    }\n                },\n\n                \"defaultTimeWindow\": {\n                    type: function(val){ return (val == \"5h\" || val == \"1d\" || val == \"1w\" || val == \"1m\");},\n                    message: \"The defaultTimeWindow param can be '5h', '1d', '1w', or '1m' or an interval expressed in seconds\"\n                }\n            };\n\n            params = this._helper(validatorMap, params);\n\n            outParams = {};\n\n            zone = params[zoneName];\n            server = params[serverName];\n            type = params[typeName];\n            startDate = params[startDateName];\n            endDate = params[endDateName];\n            timeWindow = params[timeWindowName];\n            selectedRows = params[selectedRowsName];\n            filterProbes = params[filterProbesName];\n            isTcp = params[isTcpName];\n            ipVersion = params[ipVersionName];\n\n            if (server){\n                outParams.group = this.convertRemoteToLocalId(server);\n                if (zone) outParams.root = this.convertRemoteToLocalId(zone);\n            }else{\n                if (zone) outParams.group = this.convertRemoteToLocalId(zone);\n            }\n\n            if (type) outParams.type = this.convertRemoteToLocalType(type);\n            if (filterProbes != null) outParams.filterProbes = filterProbes;\n\n            if (startDate) outParams.startDate = this.convertRemoteToLocalDate(startDate);\n            if (endDate) outParams.endDate = this.convertRemoteToLocalDate(endDate);\n\n            if (selectedRows != null) outParams.selectedRows = this.convertRemoteToLocalSelectedRows(selectedRows);\n\n\n            if (ipVersion) outParams.ipVersion = ((ipVersion == 'both') ? null : ipVersion);\n            if (timeWindow) outParams.timeWindow = this.convertRemoteToLocalTimeWindow(timeWindow);\n\n            if (isTcp != null) outParams.isTcp = isTcp;\n\n            return outParams;\n        };\n\n\n        /**\n         * This method converts the parameters vector from the internal to the external format.\n         * It is the opposite of fromExternalToInternal.\n         *\n         * @method fromInternalToExternal\n         * @input {Object} params A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.fromInternalToExternal = function(params){\n            var zone, server, outParams, zoneName, serverName, typeName, startDateName, endDateName, selectedRowsName,\n                ipVersionName, isTcpName, timeWindowName, filterProbesName;\n\n            zoneName = \"zone\";\n            serverName = \"server\";\n            typeName = \"type\";\n            startDateName = \"startTime\";\n            endDateName = \"endTime\";\n            selectedRowsName = \"selectedRows\";\n            ipVersionName = \"ipVersion\";\n            isTcpName = \"isTcp\";\n            timeWindowName = \"timeWindow\";\n            filterProbesName = \"filterProbes\";\n\n            outParams = {};\n\n            outParams[typeName] = this.convertLocalToRemoteType(params.type);\n\n            if (params.type == 'probes'){\n                outParams[serverName] = (params.group) ? this.convertLocalToRemoteId(params.group) : null;\n                outParams[zoneName] = this.convertLocalToRemoteId(params.root);\n            }else if (params.type == 'servers'){\n                outParams[serverName] = null;\n                outParams[zoneName] = (params.group) ? this.convertLocalToRemoteId(params.group) : null;\n            }\n\n\n            outParams[startDateName] =  (params.startDate) ? this.convertLocalToRemoteDate(params.startDate) : null;\n\n            outParams[endDateName] = (params.endDate)  ? this.convertLocalToRemoteDate(params.endDate) : null;\n            outParams[selectedRowsName] = this.convertLocalToRemoteSelectedRows(params.selectedRows);\n\n            outParams[filterProbesName] = params.filterProbes;\n\n            outParams[timeWindowName] = (params.timeWindow) ? this.convertLocalToRemoteTimeWindow(params.timeWindow) : null;\n\n            outParams[ipVersionName] = params.ipVersion || 'both';\n\n            outParams[isTcpName] = params.isTcp;\n\n            return outParams;\n        };\n\n\n        /**\n         * This method is an input checker for the external parameters.\n         *\n         * @method _helper\n         * @private\n         * @input {Object} validationMap A validation Map composed of types, cast functions and error messages\n         * @input {Object} parameters A vector of parameters\n         * @return {Object} A vector of parameters cased with the cast functions described in the validationMap\n         */\n\n        this._helper = function(validationMap, parameters){\n            var validationItem, validator, messages, value;\n\n            messages = [];\n\n            for (var parameter in parameters){\n\n                validationItem = validationMap[parameter];\n                value = parameters[parameter];\n\n                if (value && validationItem){\n\n                    if (validationItem.cast){\n                        parameters[parameter] = validationItem.cast(value);\n                        value = parameters[parameter];\n                    }\n\n                    validator = (typeof validationItem.type == \"function\") ? validationItem.type : function(val){ return (typeof val == validationItem.type); };\n\n                    if (!validator(value)){\n                        if (validationItem.message){\n                            messages.push(validationItem.message);\n                        }else{\n                            messages.push(parameter + \" must be a \" + validationItem.type);\n                        }\n                    }\n                }\n            }\n\n            if (messages.length > 0){\n                alert(\"Input errors: \" + messages.join(', '));\n            }\n\n            return parameters;\n        };\n\n\n        /**\n         * This method initializes an empty/default vector of parameters\n         *\n         * @method createInternalParamVector\n         * @return {Object} A vector of parameters\n         */\n\n        this.createInternalParamVector = function(){\n            return {\n                startDate: null,\n                endDate : null,\n                type: null,\n                group: null,\n                root: null,\n                selectedRows: [],\n                ipVersion: null,\n                isTcp: null,\n                filterProbes: false,\n                defaultTimeWindow: null\n            };\n        };\n\n\n        /**\n         * This method converts a set of selectedRows from the internal to the external format\n         *\n         * @method convertLocalToRemoteSelectedRows\n         * @input {String} selectedRows An array of rows IDs\n         * @return {String} A string of comma separated rows IDs\n         */\n\n        this.convertLocalToRemoteSelectedRows = function(selectedRows){\n            return (selectedRows.length > 0) ? utils.join($.map(selectedRows, this.convertLocalToRemoteId), ',') : '';\n        };\n\n\n        /**\n         * This method converts a set of selectedRows from the external to the internal format\n         *\n         * @method convertRemoteToLocalSelectedRows\n         * @input {String} selectedRows A string of comma separated rows IDs\n         * @return {Array} An array of rows IDs\n         */\n        this.convertRemoteToLocalSelectedRows = function(selectedRows){\n            return (selectedRows != '') ? $.map(selectedRows.split(','), this.convertRemoteToLocalId) : [];\n        };\n\n\n        /**\n         * This method converts IDs from the external to the internal format\n         *\n         * @method convertRemoteToLocalId\n         * @input {String} remoteId An ID in the external format\n         * @return {String} An ID in the internal format\n         */\n\n        this.convertRemoteToLocalId = function(remoteId){\n            return new String(remoteId)\n                .replace(/\\./g, 'dnsmndt')\n                .replace(/\\:/g, 'dnsmnsmcl');\n        };\n\n\n        /**\n         * This method converts IDs from the internal to the external format\n         *\n         * @method convertLocalToRemoteId\n         * @input {String} remoteId An ID in the internal format\n         * @return {String} An ID in the external format\n         */\n\n        this.convertLocalToRemoteId = function(localId){\n            return new String(localId)\n                .replace(/dnsmndt/g, '.')\n                .replace(/dnsmnsmcl/g, ':');\n        };\n\n\n        /**\n         * This method converts Dates from the internal to the external format\n         *\n         * @method convertLocalToRemoteDate\n         * @input {Date} local A Date object\n         * @return {Number} A Unix timestamp\n         */\n\n        this.convertLocalToRemoteDate = function(local){\n            return (!local) ? null : utils.dateToUTCTimestamp(local);\n        };\n\n\n        /**\n         * This method converts Dates from the external to the internal format\n         *\n         * @method convertRemoteToLocalDate\n         * @input {Date} remote A date object in the external format\n         * @return {Number} A Unix timestamp\n         */\n\n        this.convertRemoteToLocalDate = function(remote){\n            return (!remote) ? null : utils.timestampToLocalDate(remote);\n        };\n\n\n        /**\n         * This method converts Types from the external to the internal format\n         *\n         * @method convertRemoteToLocalType\n         * @input {String} remote A Type in the external format\n         * @return {String} A Type in the internal format\n         */\n\n        this.convertRemoteToLocalType = function(remote){\n            var out;\n\n            switch(remote){\n                case \"zone-servers\":\n                    out = \"servers\";\n                    break;\n\n                case \"server-probes\":\n                    out = \"probes\";\n                    break;\n            }\n\n            return out;\n        };\n\n\n        /**\n         * This method converts types from the internal to the external format\n         *\n         * @method convertLocalToRemoteType\n         * @input {String} local A Type in the internal format\n         * @return {String} A Type in the external format\n         */\n\n        this.convertLocalToRemoteType = function(local){\n            var out;\n\n            switch(local){\n                case \"servers\":\n                    out = \"zone-servers\";\n                    break;\n\n                case \"probes\":\n                    out = \"server-probes\";\n                    break;\n            }\n\n            return out;\n        };\n\n\n        /**\n         * This method converts time windows from the external to the internal format\n         *\n         * @method convertRemoteToLocalTimeWindow\n         * @input {Object} remote A time window can be expressed as a string (i.e. \"5h\", \"1d\", \"1w\", \"1m\") or as an amount of seconds\n         * @return {Number} A time window expressed in seconds\n         */\n\n        this.convertRemoteToLocalTimeWindow = function(remote){\n            var value;\n\n            if (typeof remote == 'string'){\n\n                switch(remote){\n\n                    case \"5h\":\n                        value = 5 * 3600;\n                        break;\n\n                    case \"1d\":\n                        value = 24 * 3600;\n                        break;\n\n                    case \"1w\":\n                        value = 7 * 24 * 3600;\n                        break;\n\n                    case \"1m\":\n                        value = 30 * 24 * 3600;\n                        break;\n                }\n            }else{\n                value = remote;\n            }\n\n            return value; // seconds\n        };\n\n\n        /**\n         * This method converts time windows from the internal to the external format\n         *\n         * @method convertLocalToRemoteTimeWindow\n         * @input {Number} local A time window expressed in seconds\n         * @return {Object} A time window expressed in seconds, in future also strings can be used\n         */\n\n        this.convertLocalToRemoteTimeWindow = function(local){\n            return local; // No conversion\n        }\n\n\n\n    };\n\n    return new ParamsManager(); //singleton\n});\n","!function() {\n    var d3 = {\n        version: \"3.4.1\"\n    };\n    if (!Date.now) Date.now = function() {\n        return +new Date();\n    };\n    var d3_arraySlice = [].slice, d3_array = function(list) {\n        return d3_arraySlice.call(list);\n    };\n    var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n    try {\n        d3_array(d3_documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n        d3_array = function(list) {\n            var i = list.length, array = new Array(i);\n            while (i--) array[i] = list[i];\n            return array;\n        };\n    }\n    try {\n        d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n        var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n        d3_element_prototype.setAttribute = function(name, value) {\n            d3_element_setAttribute.call(this, name, value + \"\");\n        };\n        d3_element_prototype.setAttributeNS = function(space, local, value) {\n            d3_element_setAttributeNS.call(this, space, local, value + \"\");\n        };\n        d3_style_prototype.setProperty = function(name, value, priority) {\n            d3_style_setProperty.call(this, name, value + \"\", priority);\n        };\n    }\n    d3.ascending = function(a, b) {\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n    };\n    d3.descending = function(a, b) {\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n    };\n    d3.min = function(array, f) {\n        var i = -1, n = array.length, a, b;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n        } else {\n            while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n        }\n        return a;\n    };\n    d3.max = function(array, f) {\n        var i = -1, n = array.length, a, b;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n        } else {\n            while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n        }\n        return a;\n    };\n    d3.extent = function(array, f) {\n        var i = -1, n = array.length, a, b, c;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n            while (++i < n) if ((b = array[i]) != null) {\n                if (a > b) a = b;\n                if (c < b) c = b;\n            }\n        } else {\n            while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n                if (a > b) a = b;\n                if (c < b) c = b;\n            }\n        }\n        return [ a, c ];\n    };\n    d3.sum = function(array, f) {\n        var s = 0, n = array.length, a, i = -1;\n        if (arguments.length === 1) {\n            while (++i < n) if (!isNaN(a = +array[i])) s += a;\n        } else {\n            while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n        }\n        return s;\n    };\n    function d3_number(x) {\n        return x != null && !isNaN(x);\n    }\n    d3.mean = function(array, f) {\n        var n = array.length, a, m = 0, i = -1, j = 0;\n        if (arguments.length === 1) {\n            while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n        } else {\n            while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n        }\n        return j ? m : undefined;\n    };\n    d3.quantile = function(values, p) {\n        var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n        return e ? v + e * (values[h] - v) : v;\n    };\n    d3.median = function(array, f) {\n        if (arguments.length > 1) array = array.map(f);\n        array = array.filter(d3_number);\n        return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n    };\n    d3.bisector = function(f) {\n        return {\n            left: function(a, x, lo, hi) {\n                if (arguments.length < 3) lo = 0;\n                if (arguments.length < 4) hi = a.length;\n                while (lo < hi) {\n                    var mid = lo + hi >>> 1;\n                    if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n                }\n                return lo;\n            },\n            right: function(a, x, lo, hi) {\n                if (arguments.length < 3) lo = 0;\n                if (arguments.length < 4) hi = a.length;\n                while (lo < hi) {\n                    var mid = lo + hi >>> 1;\n                    if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n                }\n                return lo;\n            }\n        };\n    };\n    var d3_bisector = d3.bisector(function(d) {\n        return d;\n    });\n    d3.bisectLeft = d3_bisector.left;\n    d3.bisect = d3.bisectRight = d3_bisector.right;\n    d3.shuffle = function(array) {\n        var m = array.length, t, i;\n        while (m) {\n            i = Math.random() * m-- | 0;\n            t = array[m], array[m] = array[i], array[i] = t;\n        }\n        return array;\n    };\n    d3.permute = function(array, indexes) {\n        var i = indexes.length, permutes = new Array(i);\n        while (i--) permutes[i] = array[indexes[i]];\n        return permutes;\n    };\n    d3.pairs = function(array) {\n        var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n        while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n        return pairs;\n    };\n    d3.zip = function() {\n        if (!(n = arguments.length)) return [];\n        for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n            for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n                zip[j] = arguments[j][i];\n            }\n        }\n        return zips;\n    };\n    function d3_zipLength(d) {\n        return d.length;\n    }\n    d3.transpose = function(matrix) {\n        return d3.zip.apply(d3, matrix);\n    };\n    d3.keys = function(map) {\n        var keys = [];\n        for (var key in map) keys.push(key);\n        return keys;\n    };\n    d3.values = function(map) {\n        var values = [];\n        for (var key in map) values.push(map[key]);\n        return values;\n    };\n    d3.entries = function(map) {\n        var entries = [];\n        for (var key in map) entries.push({\n            key: key,\n            value: map[key]\n        });\n        return entries;\n    };\n    d3.merge = function(arrays) {\n        var n = arrays.length, m, i = -1, j = 0, merged, array;\n        while (++i < n) j += arrays[i].length;\n        merged = new Array(j);\n        while (--n >= 0) {\n            array = arrays[n];\n            m = array.length;\n            while (--m >= 0) {\n                merged[--j] = array[m];\n            }\n        }\n        return merged;\n    };\n    var abs = Math.abs;\n    d3.range = function(start, stop, step) {\n        if (arguments.length < 3) {\n            step = 1;\n            if (arguments.length < 2) {\n                stop = start;\n                start = 0;\n            }\n        }\n        if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n        var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n        start *= k, stop *= k, step *= k;\n        if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n        return range;\n    };\n    function d3_range_integerScale(x) {\n        var k = 1;\n        while (x * k % 1) k *= 10;\n        return k;\n    }\n    function d3_class(ctor, properties) {\n        try {\n            for (var key in properties) {\n                Object.defineProperty(ctor.prototype, key, {\n                    value: properties[key],\n                    enumerable: false\n                });\n            }\n        } catch (e) {\n            ctor.prototype = properties;\n        }\n    }\n    d3.map = function(object) {\n        var map = new d3_Map();\n        if (object instanceof d3_Map) object.forEach(function(key, value) {\n            map.set(key, value);\n        }); else for (var key in object) map.set(key, object[key]);\n        return map;\n    };\n    function d3_Map() {}\n    d3_class(d3_Map, {\n        has: d3_map_has,\n        get: function(key) {\n            return this[d3_map_prefix + key];\n        },\n        set: function(key, value) {\n            return this[d3_map_prefix + key] = value;\n        },\n        remove: d3_map_remove,\n        keys: d3_map_keys,\n        values: function() {\n            var values = [];\n            this.forEach(function(key, value) {\n                values.push(value);\n            });\n            return values;\n        },\n        entries: function() {\n            var entries = [];\n            this.forEach(function(key, value) {\n                entries.push({\n                    key: key,\n                    value: value\n                });\n            });\n            return entries;\n        },\n        size: d3_map_size,\n        empty: d3_map_empty,\n        forEach: function(f) {\n            for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);\n        }\n    });\n    var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n    function d3_map_has(key) {\n        return d3_map_prefix + key in this;\n    }\n    function d3_map_remove(key) {\n        key = d3_map_prefix + key;\n        return key in this && delete this[key];\n    }\n    function d3_map_keys() {\n        var keys = [];\n        this.forEach(function(key) {\n            keys.push(key);\n        });\n        return keys;\n    }\n    function d3_map_size() {\n        var size = 0;\n        for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;\n        return size;\n    }\n    function d3_map_empty() {\n        for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;\n        return true;\n    }\n    d3.nest = function() {\n        var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n        function map(mapType, array, depth) {\n            if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n            var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n            while (++i < n) {\n                if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n                    values.push(object);\n                } else {\n                    valuesByKey.set(keyValue, [ object ]);\n                }\n            }\n            if (mapType) {\n                object = mapType();\n                setter = function(keyValue, values) {\n                    object.set(keyValue, map(mapType, values, depth));\n                };\n            } else {\n                object = {};\n                setter = function(keyValue, values) {\n                    object[keyValue] = map(mapType, values, depth);\n                };\n            }\n            valuesByKey.forEach(setter);\n            return object;\n        }\n        function entries(map, depth) {\n            if (depth >= keys.length) return map;\n            var array = [], sortKey = sortKeys[depth++];\n            map.forEach(function(key, keyMap) {\n                array.push({\n                    key: key,\n                    values: entries(keyMap, depth)\n                });\n            });\n            return sortKey ? array.sort(function(a, b) {\n                return sortKey(a.key, b.key);\n            }) : array;\n        }\n        nest.map = function(array, mapType) {\n            return map(mapType, array, 0);\n        };\n        nest.entries = function(array) {\n            return entries(map(d3.map, array, 0), 0);\n        };\n        nest.key = function(d) {\n            keys.push(d);\n            return nest;\n        };\n        nest.sortKeys = function(order) {\n            sortKeys[keys.length - 1] = order;\n            return nest;\n        };\n        nest.sortValues = function(order) {\n            sortValues = order;\n            return nest;\n        };\n        nest.rollup = function(f) {\n            rollup = f;\n            return nest;\n        };\n        return nest;\n    };\n    d3.set = function(array) {\n        var set = new d3_Set();\n        if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n        return set;\n    };\n    function d3_Set() {}\n    d3_class(d3_Set, {\n        has: d3_map_has,\n        add: function(value) {\n            this[d3_map_prefix + value] = true;\n            return value;\n        },\n        remove: function(value) {\n            value = d3_map_prefix + value;\n            return value in this && delete this[value];\n        },\n        values: d3_map_keys,\n        size: d3_map_size,\n        empty: d3_map_empty,\n        forEach: function(f) {\n            for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));\n        }\n    });\n    d3.behavior = {};\n    d3.rebind = function(target, source) {\n        var i = 1, n = arguments.length, method;\n        while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n        return target;\n    };\n    function d3_rebind(target, source, method) {\n        return function() {\n            var value = method.apply(source, arguments);\n            return value === source ? target : value;\n        };\n    }\n    function d3_vendorSymbol(object, name) {\n        if (name in object) return name;\n        name = name.charAt(0).toUpperCase() + name.substring(1);\n        for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n            var prefixName = d3_vendorPrefixes[i] + name;\n            if (prefixName in object) return prefixName;\n        }\n    }\n    var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n    function d3_noop() {}\n    d3.dispatch = function() {\n        var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n        while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n        return dispatch;\n    };\n    function d3_dispatch() {}\n    d3_dispatch.prototype.on = function(type, listener) {\n        var i = type.indexOf(\".\"), name = \"\";\n        if (i >= 0) {\n            name = type.substring(i + 1);\n            type = type.substring(0, i);\n        }\n        if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n        if (arguments.length === 2) {\n            if (listener == null) for (type in this) {\n                if (this.hasOwnProperty(type)) this[type].on(name, null);\n            }\n            return this;\n        }\n    };\n    function d3_dispatch_event(dispatch) {\n        var listeners = [], listenerByName = new d3_Map();\n        function event() {\n            var z = listeners, i = -1, n = z.length, l;\n            while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n            return dispatch;\n        }\n        event.on = function(name, listener) {\n            var l = listenerByName.get(name), i;\n            if (arguments.length < 2) return l && l.on;\n            if (l) {\n                l.on = null;\n                listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n                listenerByName.remove(name);\n            }\n            if (listener) listeners.push(listenerByName.set(name, {\n                on: listener\n            }));\n            return dispatch;\n        };\n        return event;\n    }\n    d3.event = null;\n    function d3_eventPreventDefault() {\n        d3.event.preventDefault();\n    }\n    function d3_eventSource() {\n        var e = d3.event, s;\n        while (s = e.sourceEvent) e = s;\n        return e;\n    }\n    function d3_eventDispatch(target) {\n        var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n        while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n        dispatch.of = function(thiz, argumentz) {\n            return function(e1) {\n                try {\n                    var e0 = e1.sourceEvent = d3.event;\n                    e1.target = target;\n                    d3.event = e1;\n                    dispatch[e1.type].apply(thiz, argumentz);\n                } finally {\n                    d3.event = e0;\n                }\n            };\n        };\n        return dispatch;\n    }\n    d3.requote = function(s) {\n        return s.replace(d3_requote_re, \"\\\\$&\");\n    };\n    var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n    var d3_subclass = {}.__proto__ ? function(object, prototype) {\n        object.__proto__ = prototype;\n    } : function(object, prototype) {\n        for (var property in prototype) object[property] = prototype[property];\n    };\n    function d3_selection(groups) {\n        d3_subclass(groups, d3_selectionPrototype);\n        return groups;\n    }\n    var d3_select = function(s, n) {\n        return n.querySelector(s);\n    }, d3_selectAll = function(s, n) {\n        return n.querySelectorAll(s);\n    }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n        return d3_selectMatcher.call(n, s);\n    };\n    if (typeof Sizzle === \"function\") {\n        d3_select = function(s, n) {\n            return Sizzle(s, n)[0] || null;\n        };\n        d3_selectAll = function(s, n) {\n            return Sizzle.uniqueSort(Sizzle(s, n));\n        };\n        d3_selectMatches = Sizzle.matchesSelector;\n    }\n    d3.selection = function() {\n        return d3_selectionRoot;\n    };\n    var d3_selectionPrototype = d3.selection.prototype = [];\n    d3_selectionPrototype.select = function(selector) {\n        var subgroups = [], subgroup, subnode, group, node;\n        selector = d3_selection_selector(selector);\n        for (var j = -1, m = this.length; ++j < m; ) {\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = (group = this[j]).parentNode;\n            for (var i = -1, n = group.length; ++i < n; ) {\n                if (node = group[i]) {\n                    subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n                    if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_selector(selector) {\n        return typeof selector === \"function\" ? selector : function() {\n            return d3_select(selector, this);\n        };\n    }\n    d3_selectionPrototype.selectAll = function(selector) {\n        var subgroups = [], subgroup, node;\n        selector = d3_selection_selectorAll(selector);\n        for (var j = -1, m = this.length; ++j < m; ) {\n            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n                if (node = group[i]) {\n                    subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n                    subgroup.parentNode = node;\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_selectorAll(selector) {\n        return typeof selector === \"function\" ? selector : function() {\n            return d3_selectAll(selector, this);\n        };\n    }\n    var d3_nsPrefix = {\n        svg: \"http://www.w3.org/2000/svg\",\n        xhtml: \"http://www.w3.org/1999/xhtml\",\n        xlink: \"http://www.w3.org/1999/xlink\",\n        xml: \"http://www.w3.org/XML/1998/namespace\",\n        xmlns: \"http://www.w3.org/2000/xmlns/\"\n    };\n    d3.ns = {\n        prefix: d3_nsPrefix,\n        qualify: function(name) {\n            var i = name.indexOf(\":\"), prefix = name;\n            if (i >= 0) {\n                prefix = name.substring(0, i);\n                name = name.substring(i + 1);\n            }\n            return d3_nsPrefix.hasOwnProperty(prefix) ? {\n                space: d3_nsPrefix[prefix],\n                local: name\n            } : name;\n        }\n    };\n    d3_selectionPrototype.attr = function(name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") {\n                var node = this.node();\n                name = d3.ns.qualify(name);\n                return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n            }\n            for (value in name) this.each(d3_selection_attr(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_attr(name, value));\n    };\n    function d3_selection_attr(name, value) {\n        name = d3.ns.qualify(name);\n        function attrNull() {\n            this.removeAttribute(name);\n        }\n        function attrNullNS() {\n            this.removeAttributeNS(name.space, name.local);\n        }\n        function attrConstant() {\n            this.setAttribute(name, value);\n        }\n        function attrConstantNS() {\n            this.setAttributeNS(name.space, name.local, value);\n        }\n        function attrFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n        }\n        function attrFunctionNS() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n        }\n        return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n    }\n    function d3_collapse(s) {\n        return s.trim().replace(/\\s+/g, \" \");\n    }\n    d3_selectionPrototype.classed = function(name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") {\n                var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n                if (value = node.classList) {\n                    while (++i < n) if (!value.contains(name[i])) return false;\n                } else {\n                    value = node.getAttribute(\"class\");\n                    while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n                }\n                return true;\n            }\n            for (value in name) this.each(d3_selection_classed(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_classed(name, value));\n    };\n    function d3_selection_classedRe(name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n    }\n    function d3_selection_classes(name) {\n        return name.trim().split(/^|\\s+/);\n    }\n    function d3_selection_classed(name, value) {\n        name = d3_selection_classes(name).map(d3_selection_classedName);\n        var n = name.length;\n        function classedConstant() {\n            var i = -1;\n            while (++i < n) name[i](this, value);\n        }\n        function classedFunction() {\n            var i = -1, x = value.apply(this, arguments);\n            while (++i < n) name[i](this, x);\n        }\n        return typeof value === \"function\" ? classedFunction : classedConstant;\n    }\n    function d3_selection_classedName(name) {\n        var re = d3_selection_classedRe(name);\n        return function(node, value) {\n            if (c = node.classList) return value ? c.add(name) : c.remove(name);\n            var c = node.getAttribute(\"class\") || \"\";\n            if (value) {\n                re.lastIndex = 0;\n                if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n            } else {\n                node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n            }\n        };\n    }\n    d3_selectionPrototype.style = function(name, value, priority) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof name !== \"string\") {\n                if (n < 2) value = \"\";\n                for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n                return this;\n            }\n            if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n            priority = \"\";\n        }\n        return this.each(d3_selection_style(name, value, priority));\n    };\n    function d3_selection_style(name, value, priority) {\n        function styleNull() {\n            this.style.removeProperty(name);\n        }\n        function styleConstant() {\n            this.style.setProperty(name, value, priority);\n        }\n        function styleFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n        }\n        return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n    }\n    d3_selectionPrototype.property = function(name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") return this.node()[name];\n            for (value in name) this.each(d3_selection_property(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_property(name, value));\n    };\n    function d3_selection_property(name, value) {\n        function propertyNull() {\n            delete this[name];\n        }\n        function propertyConstant() {\n            this[name] = value;\n        }\n        function propertyFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) delete this[name]; else this[name] = x;\n        }\n        return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n    }\n    d3_selectionPrototype.text = function(value) {\n        return arguments.length ? this.each(typeof value === \"function\" ? function() {\n            var v = value.apply(this, arguments);\n            this.textContent = v == null ? \"\" : v;\n        } : value == null ? function() {\n            this.textContent = \"\";\n        } : function() {\n            this.textContent = value;\n        }) : this.node().textContent;\n    };\n    d3_selectionPrototype.html = function(value) {\n        return arguments.length ? this.each(typeof value === \"function\" ? function() {\n            var v = value.apply(this, arguments);\n            this.innerHTML = v == null ? \"\" : v;\n        } : value == null ? function() {\n            this.innerHTML = \"\";\n        } : function() {\n            this.innerHTML = value;\n        }) : this.node().innerHTML;\n    };\n    d3_selectionPrototype.append = function(name) {\n        name = d3_selection_creator(name);\n        return this.select(function() {\n            return this.appendChild(name.apply(this, arguments));\n        });\n    };\n    function d3_selection_creator(name) {\n        return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n            return this.ownerDocument.createElementNS(name.space, name.local);\n        } : function() {\n            return this.ownerDocument.createElementNS(this.namespaceURI, name);\n        };\n    }\n    d3_selectionPrototype.insert = function(name, before) {\n        name = d3_selection_creator(name);\n        before = d3_selection_selector(before);\n        return this.select(function() {\n            return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n        });\n    };\n    d3_selectionPrototype.remove = function() {\n        return this.each(function() {\n            var parent = this.parentNode;\n            if (parent) parent.removeChild(this);\n        });\n    };\n    d3_selectionPrototype.data = function(value, key) {\n        var i = -1, n = this.length, group, node;\n        if (!arguments.length) {\n            value = new Array(n = (group = this[0]).length);\n            while (++i < n) {\n                if (node = group[i]) {\n                    value[i] = node.__data__;\n                }\n            }\n            return value;\n        }\n        function bind(group, groupData) {\n            var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n            if (key) {\n                var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n                for (i = -1; ++i < n; ) {\n                    keyValue = key.call(node = group[i], node.__data__, i);\n                    if (nodeByKeyValue.has(keyValue)) {\n                        exitNodes[i] = node;\n                    } else {\n                        nodeByKeyValue.set(keyValue, node);\n                    }\n                    keyValues.push(keyValue);\n                }\n                for (i = -1; ++i < m; ) {\n                    keyValue = key.call(groupData, nodeData = groupData[i], i);\n                    if (node = nodeByKeyValue.get(keyValue)) {\n                        updateNodes[i] = node;\n                        node.__data__ = nodeData;\n                    } else if (!dataByKeyValue.has(keyValue)) {\n                        enterNodes[i] = d3_selection_dataNode(nodeData);\n                    }\n                    dataByKeyValue.set(keyValue, nodeData);\n                    nodeByKeyValue.remove(keyValue);\n                }\n                for (i = -1; ++i < n; ) {\n                    if (nodeByKeyValue.has(keyValues[i])) {\n                        exitNodes[i] = group[i];\n                    }\n                }\n            } else {\n                for (i = -1; ++i < n0; ) {\n                    node = group[i];\n                    nodeData = groupData[i];\n                    if (node) {\n                        node.__data__ = nodeData;\n                        updateNodes[i] = node;\n                    } else {\n                        enterNodes[i] = d3_selection_dataNode(nodeData);\n                    }\n                }\n                for (;i < m; ++i) {\n                    enterNodes[i] = d3_selection_dataNode(groupData[i]);\n                }\n                for (;i < n; ++i) {\n                    exitNodes[i] = group[i];\n                }\n            }\n            enterNodes.update = updateNodes;\n            enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n            enter.push(enterNodes);\n            update.push(updateNodes);\n            exit.push(exitNodes);\n        }\n        var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n        if (typeof value === \"function\") {\n            while (++i < n) {\n                bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n            }\n        } else {\n            while (++i < n) {\n                bind(group = this[i], value);\n            }\n        }\n        update.enter = function() {\n            return enter;\n        };\n        update.exit = function() {\n            return exit;\n        };\n        return update;\n    };\n    function d3_selection_dataNode(data) {\n        return {\n            __data__: data\n        };\n    }\n    d3_selectionPrototype.datum = function(value) {\n        return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n    };\n    d3_selectionPrototype.filter = function(filter) {\n        var subgroups = [], subgroup, group, node;\n        if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = (group = this[j]).parentNode;\n            for (var i = 0, n = group.length; i < n; i++) {\n                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n                    subgroup.push(node);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_filter(selector) {\n        return function() {\n            return d3_selectMatches(this, selector);\n        };\n    }\n    d3_selectionPrototype.order = function() {\n        for (var j = -1, m = this.length; ++j < m; ) {\n            for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n                if (node = group[i]) {\n                    if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n                    next = node;\n                }\n            }\n        }\n        return this;\n    };\n    d3_selectionPrototype.sort = function(comparator) {\n        comparator = d3_selection_sortComparator.apply(this, arguments);\n        for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n        return this.order();\n    };\n    function d3_selection_sortComparator(comparator) {\n        if (!arguments.length) comparator = d3.ascending;\n        return function(a, b) {\n            return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n        };\n    }\n    d3_selectionPrototype.each = function(callback) {\n        return d3_selection_each(this, function(node, i, j) {\n            callback.call(node, node.__data__, i, j);\n        });\n    };\n    function d3_selection_each(groups, callback) {\n        for (var j = 0, m = groups.length; j < m; j++) {\n            for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n                if (node = group[i]) callback(node, i, j);\n            }\n        }\n        return groups;\n    }\n    d3_selectionPrototype.call = function(callback) {\n        var args = d3_array(arguments);\n        callback.apply(args[0] = this, args);\n        return this;\n    };\n    d3_selectionPrototype.empty = function() {\n        return !this.node();\n    };\n    d3_selectionPrototype.node = function() {\n        for (var j = 0, m = this.length; j < m; j++) {\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                var node = group[i];\n                if (node) return node;\n            }\n        }\n        return null;\n    };\n    d3_selectionPrototype.size = function() {\n        var n = 0;\n        this.each(function() {\n            ++n;\n        });\n        return n;\n    };\n    function d3_selection_enter(selection) {\n        d3_subclass(selection, d3_selection_enterPrototype);\n        return selection;\n    }\n    var d3_selection_enterPrototype = [];\n    d3.selection.enter = d3_selection_enter;\n    d3.selection.enter.prototype = d3_selection_enterPrototype;\n    d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n    d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n    d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n    d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n    d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n    d3_selection_enterPrototype.select = function(selector) {\n        var subgroups = [], subgroup, subnode, upgroup, group, node;\n        for (var j = -1, m = this.length; ++j < m; ) {\n            upgroup = (group = this[j]).update;\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = group.parentNode;\n            for (var i = -1, n = group.length; ++i < n; ) {\n                if (node = group[i]) {\n                    subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n                    subnode.__data__ = node.__data__;\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    d3_selection_enterPrototype.insert = function(name, before) {\n        if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n        return d3_selectionPrototype.insert.call(this, name, before);\n    };\n    function d3_selection_enterInsertBefore(enter) {\n        var i0, j0;\n        return function(d, i, j) {\n            var group = enter[j].update, n = group.length, node;\n            if (j != j0) j0 = j, i0 = 0;\n            if (i >= i0) i0 = i + 1;\n            while (!(node = group[i0]) && ++i0 < n) ;\n            return node;\n        };\n    }\n    d3_selectionPrototype.transition = function() {\n        var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n            time: Date.now(),\n            ease: d3_ease_cubicInOut,\n            delay: 0,\n            duration: 250\n        };\n        for (var j = -1, m = this.length; ++j < m; ) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n                if (node = group[i]) d3_transitionNode(node, i, id, transition);\n                subgroup.push(node);\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_selectionPrototype.interrupt = function() {\n        return this.each(d3_selection_interrupt);\n    };\n    function d3_selection_interrupt() {\n        var lock = this.__transition__;\n        if (lock) ++lock.active;\n    }\n    d3.select = function(node) {\n        var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n        group.parentNode = d3_documentElement;\n        return d3_selection([ group ]);\n    };\n    d3.selectAll = function(nodes) {\n        var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n        group.parentNode = d3_documentElement;\n        return d3_selection([ group ]);\n    };\n    var d3_selectionRoot = d3.select(d3_documentElement);\n    d3_selectionPrototype.on = function(type, listener, capture) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof type !== \"string\") {\n                if (n < 2) listener = false;\n                for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n                return this;\n            }\n            if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n            capture = false;\n        }\n        return this.each(d3_selection_on(type, listener, capture));\n    };\n    function d3_selection_on(type, listener, capture) {\n        var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n        if (i > 0) type = type.substring(0, i);\n        var filter = d3_selection_onFilters.get(type);\n        if (filter) type = filter, wrap = d3_selection_onFilter;\n        function onRemove() {\n            var l = this[name];\n            if (l) {\n                this.removeEventListener(type, l, l.$);\n                delete this[name];\n            }\n        }\n        function onAdd() {\n            var l = wrap(listener, d3_array(arguments));\n            onRemove.call(this);\n            this.addEventListener(type, this[name] = l, l.$ = capture);\n            l._ = listener;\n        }\n        function removeAll() {\n            var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n            for (var name in this) {\n                if (match = name.match(re)) {\n                    var l = this[name];\n                    this.removeEventListener(match[1], l, l.$);\n                    delete this[name];\n                }\n            }\n        }\n        return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n    }\n    var d3_selection_onFilters = d3.map({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\"\n    });\n    d3_selection_onFilters.forEach(function(k) {\n        if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n    function d3_selection_onListener(listener, argumentz) {\n        return function(e) {\n            var o = d3.event;\n            d3.event = e;\n            argumentz[0] = this.__data__;\n            try {\n                listener.apply(this, argumentz);\n            } finally {\n                d3.event = o;\n            }\n        };\n    }\n    function d3_selection_onFilter(listener, argumentz) {\n        var l = d3_selection_onListener(listener, argumentz);\n        return function(e) {\n            var target = this, related = e.relatedTarget;\n            if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n                l.call(target, e);\n            }\n        };\n    }\n    var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n    function d3_event_dragSuppress() {\n        var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n        if (d3_event_dragSelect) {\n            var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n            style[d3_event_dragSelect] = \"none\";\n        }\n        return function(suppressClick) {\n            w.on(name, null);\n            if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n            if (suppressClick) {\n                function off() {\n                    w.on(click, null);\n                }\n                w.on(click, function() {\n                    d3_eventPreventDefault();\n                    off();\n                }, true);\n                setTimeout(off, 0);\n            }\n        };\n    }\n    d3.mouse = function(container) {\n        return d3_mousePoint(container, d3_eventSource());\n    };\n    var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n    function d3_mousePoint(container, e) {\n        if (e.changedTouches) e = e.changedTouches[0];\n        var svg = container.ownerSVGElement || container;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n                svg = d3.select(\"body\").append(\"svg\").style({\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    margin: 0,\n                    padding: 0,\n                    border: \"none\"\n                }, \"important\");\n                var ctm = svg[0][0].getScreenCTM();\n                d3_mouse_bug44083 = !(ctm.f || ctm.e);\n                svg.remove();\n            }\n            if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX,\n                point.y = e.clientY;\n            point = point.matrixTransform(container.getScreenCTM().inverse());\n            return [ point.x, point.y ];\n        }\n        var rect = container.getBoundingClientRect();\n        return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n    }\n    d3.touches = function(container, touches) {\n        if (arguments.length < 2) touches = d3_eventSource().touches;\n        return touches ? d3_array(touches).map(function(touch) {\n            var point = d3_mousePoint(container, touch);\n            point.identifier = touch.identifier;\n            return point;\n        }) : [];\n    };\n    d3.behavior.drag = function() {\n        var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n        function drag() {\n            this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n        }\n        function touchid() {\n            return d3.event.changedTouches[0].identifier;\n        }\n        function touchposition(parent, id) {\n            return d3.touches(parent).filter(function(p) {\n                return p.identifier === id;\n            })[0];\n        }\n        function dragstart(id, position, move, end) {\n            return function() {\n                var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n                if (origin) {\n                    offset = origin.apply(target, arguments);\n                    offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n                } else {\n                    offset = [ 0, 0 ];\n                }\n                event_({\n                    type: \"dragstart\"\n                });\n                function moved() {\n                    var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n                    dragged |= dx | dy;\n                    origin_ = p;\n                    event_({\n                        type: \"drag\",\n                        x: p[0] + offset[0],\n                        y: p[1] + offset[1],\n                        dx: dx,\n                        dy: dy\n                    });\n                }\n                function ended() {\n                    w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n                    dragRestore(dragged && d3.event.target === eventTarget);\n                    event_({\n                        type: \"dragend\"\n                    });\n                }\n            };\n        }\n        drag.origin = function(x) {\n            if (!arguments.length) return origin;\n            origin = x;\n            return drag;\n        };\n        return d3.rebind(drag, event, \"on\");\n    };\n    var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n    function d3_sgn(x) {\n        return x > 0 ? 1 : x < 0 ? -1 : 0;\n    }\n    function d3_cross2d(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n    }\n    function d3_acos(x) {\n        return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n    }\n    function d3_asin(x) {\n        return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n    }\n    function d3_sinh(x) {\n        return ((x = Math.exp(x)) - 1 / x) / 2;\n    }\n    function d3_cosh(x) {\n        return ((x = Math.exp(x)) + 1 / x) / 2;\n    }\n    function d3_tanh(x) {\n        return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n    }\n    function d3_haversin(x) {\n        return (x = Math.sin(x / 2)) * x;\n    }\n    var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n    d3.interpolateZoom = function(p0, p1) {\n        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n        var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n        function interpolate(t) {\n            var s = t * S;\n            if (dr) {\n                var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n                return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n            }\n            return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n        }\n        interpolate.duration = S * 1e3;\n        return interpolate;\n    };\n    d3.behavior.zoom = function() {\n        var view = {\n            x: 0,\n            y: 0,\n            k: 1\n        }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n        function zoom(g) {\n            g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n        }\n        zoom.event = function(g) {\n            g.each(function() {\n                var event_ = event.of(this, arguments), view1 = view;\n                if (d3_transitionInheritId) {\n                    d3.select(this).transition().each(\"start.zoom\", function() {\n                        view = this.__chart__ || {\n                            x: 0,\n                            y: 0,\n                            k: 1\n                        };\n                        zoomstarted(event_);\n                    }).tween(\"zoom:zoom\", function() {\n                            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n                            return function(t) {\n                                var l = i(t), k = dx / l[2];\n                                this.__chart__ = view = {\n                                    x: cx - l[0] * k,\n                                    y: cy - l[1] * k,\n                                    k: k\n                                };\n                                zoomed(event_);\n                            };\n                        }).each(\"end.zoom\", function() {\n                            zoomended(event_);\n                        });\n                } else {\n                    this.__chart__ = view;\n                    zoomstarted(event_);\n                    zoomed(event_);\n                    zoomended(event_);\n                }\n            });\n        };\n        zoom.translate = function(_) {\n            if (!arguments.length) return [ view.x, view.y ];\n            view = {\n                x: +_[0],\n                y: +_[1],\n                k: view.k\n            };\n            rescale();\n            return zoom;\n        };\n        zoom.scale = function(_) {\n            if (!arguments.length) return view.k;\n            view = {\n                x: view.x,\n                y: view.y,\n                k: +_\n            };\n            rescale();\n            return zoom;\n        };\n        zoom.scaleExtent = function(_) {\n            if (!arguments.length) return scaleExtent;\n            scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n            return zoom;\n        };\n        zoom.center = function(_) {\n            if (!arguments.length) return center;\n            center = _ && [ +_[0], +_[1] ];\n            return zoom;\n        };\n        zoom.size = function(_) {\n            if (!arguments.length) return size;\n            size = _ && [ +_[0], +_[1] ];\n            return zoom;\n        };\n        zoom.x = function(z) {\n            if (!arguments.length) return x1;\n            x1 = z;\n            x0 = z.copy();\n            view = {\n                x: 0,\n                y: 0,\n                k: 1\n            };\n            return zoom;\n        };\n        zoom.y = function(z) {\n            if (!arguments.length) return y1;\n            y1 = z;\n            y0 = z.copy();\n            view = {\n                x: 0,\n                y: 0,\n                k: 1\n            };\n            return zoom;\n        };\n        function location(p) {\n            return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n        }\n        function point(l) {\n            return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n        }\n        function scaleTo(s) {\n            view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n        }\n        function translateTo(p, l) {\n            l = point(l);\n            view.x += p[0] - l[0];\n            view.y += p[1] - l[1];\n        }\n        function rescale() {\n            if (x1) x1.domain(x0.range().map(function(x) {\n                return (x - view.x) / view.k;\n            }).map(x0.invert));\n            if (y1) y1.domain(y0.range().map(function(y) {\n                return (y - view.y) / view.k;\n            }).map(y0.invert));\n        }\n        function zoomstarted(event) {\n            event({\n                type: \"zoomstart\"\n            });\n        }\n        function zoomed(event) {\n            rescale();\n            event({\n                type: \"zoom\",\n                scale: view.k,\n                translate: [ view.x, view.y ]\n            });\n        }\n        function zoomended(event) {\n            event({\n                type: \"zoomend\"\n            });\n        }\n        function mousedowned() {\n            var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n            d3_selection_interrupt.call(target);\n            zoomstarted(event_);\n            function moved() {\n                dragged = 1;\n                translateTo(d3.mouse(target), l);\n                zoomed(event_);\n            }\n            function ended() {\n                w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n                dragRestore(dragged && d3.event.target === eventTarget);\n                zoomended(event_);\n            }\n        }\n        function touchstarted() {\n            var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n            d3_selection_interrupt.call(target);\n            started();\n            zoomstarted(event_);\n            function relocate() {\n                var touches = d3.touches(target);\n                scale0 = view.k;\n                touches.forEach(function(t) {\n                    if (t.identifier in locations0) locations0[t.identifier] = location(t);\n                });\n                return touches;\n            }\n            function started() {\n                var changed = d3.event.changedTouches;\n                for (var i = 0, n = changed.length; i < n; ++i) {\n                    locations0[changed[i].identifier] = null;\n                }\n                var touches = relocate(), now = Date.now();\n                if (touches.length === 1) {\n                    if (now - touchtime < 500) {\n                        var p = touches[0], l = locations0[p.identifier];\n                        scaleTo(view.k * 2);\n                        translateTo(p, l);\n                        d3_eventPreventDefault();\n                        zoomed(event_);\n                    }\n                    touchtime = now;\n                } else if (touches.length > 1) {\n                    var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n                    distance0 = dx * dx + dy * dy;\n                }\n            }\n            function moved() {\n                var touches = d3.touches(target), p0, l0, p1, l1;\n                for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n                    p1 = touches[i];\n                    if (l1 = locations0[p1.identifier]) {\n                        if (l0) break;\n                        p0 = p1, l0 = l1;\n                    }\n                }\n                if (l1) {\n                    var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n                    p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n                    l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n                    scaleTo(scale1 * scale0);\n                }\n                touchtime = null;\n                translateTo(p0, l0);\n                zoomed(event_);\n            }\n            function ended() {\n                if (d3.event.touches.length) {\n                    var changed = d3.event.changedTouches;\n                    for (var i = 0, n = changed.length; i < n; ++i) {\n                        delete locations0[changed[i].identifier];\n                    }\n                    for (var identifier in locations0) {\n                        return void relocate();\n                    }\n                }\n                w.on(touchmove, null).on(touchend, null);\n                t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n                dragRestore();\n                zoomended(event_);\n            }\n        }\n        function mousewheeled() {\n            var event_ = event.of(this, arguments);\n            if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this),\n                zoomstarted(event_);\n            mousewheelTimer = setTimeout(function() {\n                mousewheelTimer = null;\n                zoomended(event_);\n            }, 50);\n            d3_eventPreventDefault();\n            var point = center || d3.mouse(this);\n            if (!translate0) translate0 = location(point);\n            scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n            translateTo(point, translate0);\n            zoomed(event_);\n        }\n        function mousewheelreset() {\n            translate0 = null;\n        }\n        function dblclicked() {\n            var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n            zoomstarted(event_);\n            scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n            translateTo(p, l);\n            zoomed(event_);\n            zoomended(event_);\n        }\n        return d3.rebind(zoom, event, \"on\");\n    };\n    var d3_behavior_zoomInfinity = [ 0, Infinity ];\n    var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n    }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n    }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n    }, \"MozMousePixelScroll\");\n    function d3_Color() {}\n    d3_Color.prototype.toString = function() {\n        return this.rgb() + \"\";\n    };\n    d3.hsl = function(h, s, l) {\n        return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n    };\n    function d3_hsl(h, s, l) {\n        return new d3_Hsl(h, s, l);\n    }\n    function d3_Hsl(h, s, l) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n    var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n    d3_hslPrototype.brighter = function(k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_hsl(this.h, this.s, this.l / k);\n    };\n    d3_hslPrototype.darker = function(k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_hsl(this.h, this.s, k * this.l);\n    };\n    d3_hslPrototype.rgb = function() {\n        return d3_hsl_rgb(this.h, this.s, this.l);\n    };\n    function d3_hsl_rgb(h, s, l) {\n        var m1, m2;\n        h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n        s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n        l = l < 0 ? 0 : l > 1 ? 1 : l;\n        m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n        m1 = 2 * l - m2;\n        function v(h) {\n            if (h > 360) h -= 360; else if (h < 0) h += 360;\n            if (h < 60) return m1 + (m2 - m1) * h / 60;\n            if (h < 180) return m2;\n            if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n            return m1;\n        }\n        function vv(h) {\n            return Math.round(v(h) * 255);\n        }\n        return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n    }\n    d3.hcl = function(h, c, l) {\n        return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n    };\n    function d3_hcl(h, c, l) {\n        return new d3_Hcl(h, c, l);\n    }\n    function d3_Hcl(h, c, l) {\n        this.h = h;\n        this.c = c;\n        this.l = l;\n    }\n    var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n    d3_hclPrototype.brighter = function(k) {\n        return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n    };\n    d3_hclPrototype.darker = function(k) {\n        return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n    };\n    d3_hclPrototype.rgb = function() {\n        return d3_hcl_lab(this.h, this.c, this.l).rgb();\n    };\n    function d3_hcl_lab(h, c, l) {\n        if (isNaN(h)) h = 0;\n        if (isNaN(c)) c = 0;\n        return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n    }\n    d3.lab = function(l, a, b) {\n        return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n    };\n    function d3_lab(l, a, b) {\n        return new d3_Lab(l, a, b);\n    }\n    function d3_Lab(l, a, b) {\n        this.l = l;\n        this.a = a;\n        this.b = b;\n    }\n    var d3_lab_K = 18;\n    var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n    var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n    d3_labPrototype.brighter = function(k) {\n        return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n    };\n    d3_labPrototype.darker = function(k) {\n        return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n    };\n    d3_labPrototype.rgb = function() {\n        return d3_lab_rgb(this.l, this.a, this.b);\n    };\n    function d3_lab_rgb(l, a, b) {\n        var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n        x = d3_lab_xyz(x) * d3_lab_X;\n        y = d3_lab_xyz(y) * d3_lab_Y;\n        z = d3_lab_xyz(z) * d3_lab_Z;\n        return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n    }\n    function d3_lab_hcl(l, a, b) {\n        return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n    }\n    function d3_lab_xyz(x) {\n        return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n    }\n    function d3_xyz_lab(x) {\n        return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n    }\n    function d3_xyz_rgb(r) {\n        return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n    }\n    d3.rgb = function(r, g, b) {\n        return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n    };\n    function d3_rgbNumber(value) {\n        return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n    }\n    function d3_rgbString(value) {\n        return d3_rgbNumber(value) + \"\";\n    }\n    function d3_rgb(r, g, b) {\n        return new d3_Rgb(r, g, b);\n    }\n    function d3_Rgb(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n    d3_rgbPrototype.brighter = function(k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        var r = this.r, g = this.g, b = this.b, i = 30;\n        if (!r && !g && !b) return d3_rgb(i, i, i);\n        if (r && r < i) r = i;\n        if (g && g < i) g = i;\n        if (b && b < i) b = i;\n        return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n    };\n    d3_rgbPrototype.darker = function(k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n    };\n    d3_rgbPrototype.hsl = function() {\n        return d3_rgb_hsl(this.r, this.g, this.b);\n    };\n    d3_rgbPrototype.toString = function() {\n        return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n    };\n    function d3_rgb_hex(v) {\n        return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n    }\n    function d3_rgb_parse(format, rgb, hsl) {\n        var r = 0, g = 0, b = 0, m1, m2, name;\n        m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n        if (m1) {\n            m2 = m1[2].split(\",\");\n            switch (m1[1]) {\n                case \"hsl\":\n                {\n                    return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n                }\n\n                case \"rgb\":\n                {\n                    return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n                }\n            }\n        }\n        if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n        if (format != null && format.charAt(0) === \"#\") {\n            if (format.length === 4) {\n                r = format.charAt(1);\n                r += r;\n                g = format.charAt(2);\n                g += g;\n                b = format.charAt(3);\n                b += b;\n            } else if (format.length === 7) {\n                r = format.substring(1, 3);\n                g = format.substring(3, 5);\n                b = format.substring(5, 7);\n            }\n            r = parseInt(r, 16);\n            g = parseInt(g, 16);\n            b = parseInt(b, 16);\n        }\n        return rgb(r, g, b);\n    }\n    function d3_rgb_hsl(r, g, b) {\n        var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n        if (d) {\n            s = l < .5 ? d / (max + min) : d / (2 - max - min);\n            if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n            h *= 60;\n        } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n        }\n        return d3_hsl(h, s, l);\n    }\n    function d3_rgb_lab(r, g, b) {\n        r = d3_rgb_xyz(r);\n        g = d3_rgb_xyz(g);\n        b = d3_rgb_xyz(b);\n        var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n        return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n    }\n    function d3_rgb_xyz(r) {\n        return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n    }\n    function d3_rgb_parseNumber(c) {\n        var f = parseFloat(c);\n        return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n    }\n    var d3_rgb_names = d3.map({\n        aliceblue: 15792383,\n        antiquewhite: 16444375,\n        aqua: 65535,\n        aquamarine: 8388564,\n        azure: 15794175,\n        beige: 16119260,\n        bisque: 16770244,\n        black: 0,\n        blanchedalmond: 16772045,\n        blue: 255,\n        blueviolet: 9055202,\n        brown: 10824234,\n        burlywood: 14596231,\n        cadetblue: 6266528,\n        chartreuse: 8388352,\n        chocolate: 13789470,\n        coral: 16744272,\n        cornflowerblue: 6591981,\n        cornsilk: 16775388,\n        crimson: 14423100,\n        cyan: 65535,\n        darkblue: 139,\n        darkcyan: 35723,\n        darkgoldenrod: 12092939,\n        darkgray: 11119017,\n        darkgreen: 25600,\n        darkgrey: 11119017,\n        darkkhaki: 12433259,\n        darkmagenta: 9109643,\n        darkolivegreen: 5597999,\n        darkorange: 16747520,\n        darkorchid: 10040012,\n        darkred: 9109504,\n        darksalmon: 15308410,\n        darkseagreen: 9419919,\n        darkslateblue: 4734347,\n        darkslategray: 3100495,\n        darkslategrey: 3100495,\n        darkturquoise: 52945,\n        darkviolet: 9699539,\n        deeppink: 16716947,\n        deepskyblue: 49151,\n        dimgray: 6908265,\n        dimgrey: 6908265,\n        dodgerblue: 2003199,\n        firebrick: 11674146,\n        floralwhite: 16775920,\n        forestgreen: 2263842,\n        fuchsia: 16711935,\n        gainsboro: 14474460,\n        ghostwhite: 16316671,\n        gold: 16766720,\n        goldenrod: 14329120,\n        gray: 8421504,\n        green: 32768,\n        greenyellow: 11403055,\n        grey: 8421504,\n        honeydew: 15794160,\n        hotpink: 16738740,\n        indianred: 13458524,\n        indigo: 4915330,\n        ivory: 16777200,\n        khaki: 15787660,\n        lavender: 15132410,\n        lavenderblush: 16773365,\n        lawngreen: 8190976,\n        lemonchiffon: 16775885,\n        lightblue: 11393254,\n        lightcoral: 15761536,\n        lightcyan: 14745599,\n        lightgoldenrodyellow: 16448210,\n        lightgray: 13882323,\n        lightgreen: 9498256,\n        lightgrey: 13882323,\n        lightpink: 16758465,\n        lightsalmon: 16752762,\n        lightseagreen: 2142890,\n        lightskyblue: 8900346,\n        lightslategray: 7833753,\n        lightslategrey: 7833753,\n        lightsteelblue: 11584734,\n        lightyellow: 16777184,\n        lime: 65280,\n        limegreen: 3329330,\n        linen: 16445670,\n        magenta: 16711935,\n        maroon: 8388608,\n        mediumaquamarine: 6737322,\n        mediumblue: 205,\n        mediumorchid: 12211667,\n        mediumpurple: 9662683,\n        mediumseagreen: 3978097,\n        mediumslateblue: 8087790,\n        mediumspringgreen: 64154,\n        mediumturquoise: 4772300,\n        mediumvioletred: 13047173,\n        midnightblue: 1644912,\n        mintcream: 16121850,\n        mistyrose: 16770273,\n        moccasin: 16770229,\n        navajowhite: 16768685,\n        navy: 128,\n        oldlace: 16643558,\n        olive: 8421376,\n        olivedrab: 7048739,\n        orange: 16753920,\n        orangered: 16729344,\n        orchid: 14315734,\n        palegoldenrod: 15657130,\n        palegreen: 10025880,\n        paleturquoise: 11529966,\n        palevioletred: 14381203,\n        papayawhip: 16773077,\n        peachpuff: 16767673,\n        peru: 13468991,\n        pink: 16761035,\n        plum: 14524637,\n        powderblue: 11591910,\n        purple: 8388736,\n        red: 16711680,\n        rosybrown: 12357519,\n        royalblue: 4286945,\n        saddlebrown: 9127187,\n        salmon: 16416882,\n        sandybrown: 16032864,\n        seagreen: 3050327,\n        seashell: 16774638,\n        sienna: 10506797,\n        silver: 12632256,\n        skyblue: 8900331,\n        slateblue: 6970061,\n        slategray: 7372944,\n        slategrey: 7372944,\n        snow: 16775930,\n        springgreen: 65407,\n        steelblue: 4620980,\n        tan: 13808780,\n        teal: 32896,\n        thistle: 14204888,\n        tomato: 16737095,\n        turquoise: 4251856,\n        violet: 15631086,\n        wheat: 16113331,\n        white: 16777215,\n        whitesmoke: 16119285,\n        yellow: 16776960,\n        yellowgreen: 10145074\n    });\n    d3_rgb_names.forEach(function(key, value) {\n        d3_rgb_names.set(key, d3_rgbNumber(value));\n    });\n    function d3_functor(v) {\n        return typeof v === \"function\" ? v : function() {\n            return v;\n        };\n    }\n    d3.functor = d3_functor;\n    function d3_identity(d) {\n        return d;\n    }\n    d3.xhr = d3_xhrType(d3_identity);\n    function d3_xhrType(response) {\n        return function(url, mimeType, callback) {\n            if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType,\n                mimeType = null;\n            return d3_xhr(url, mimeType, response, callback);\n        };\n    }\n    function d3_xhr(url, mimeType, response, callback) {\n        var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n        if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n        \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n            request.readyState > 3 && respond();\n        };\n        function respond() {\n            var status = request.status, result;\n            if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n                try {\n                    result = response.call(xhr, request);\n                } catch (e) {\n                    dispatch.error.call(xhr, e);\n                    return;\n                }\n                dispatch.load.call(xhr, result);\n            } else {\n                dispatch.error.call(xhr, request);\n            }\n        }\n        request.onprogress = function(event) {\n            var o = d3.event;\n            d3.event = event;\n            try {\n                dispatch.progress.call(xhr, request);\n            } finally {\n                d3.event = o;\n            }\n        };\n        xhr.header = function(name, value) {\n            name = (name + \"\").toLowerCase();\n            if (arguments.length < 2) return headers[name];\n            if (value == null) delete headers[name]; else headers[name] = value + \"\";\n            return xhr;\n        };\n        xhr.mimeType = function(value) {\n            if (!arguments.length) return mimeType;\n            mimeType = value == null ? null : value + \"\";\n            return xhr;\n        };\n        xhr.responseType = function(value) {\n            if (!arguments.length) return responseType;\n            responseType = value;\n            return xhr;\n        };\n        xhr.response = function(value) {\n            response = value;\n            return xhr;\n        };\n        [ \"get\", \"post\" ].forEach(function(method) {\n            xhr[method] = function() {\n                return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n            };\n        });\n        xhr.send = function(method, data, callback) {\n            if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n            request.open(method, url, true);\n            if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n            if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n            if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n            if (responseType != null) request.responseType = responseType;\n            if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n                callback(null, request);\n            });\n            dispatch.beforesend.call(xhr, request);\n            request.send(data == null ? null : data);\n            return xhr;\n        };\n        xhr.abort = function() {\n            request.abort();\n            return xhr;\n        };\n        d3.rebind(xhr, dispatch, \"on\");\n        return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n    }\n    function d3_xhr_fixCallback(callback) {\n        return callback.length === 1 ? function(error, request) {\n            callback(error == null ? request : null);\n        } : callback;\n    }\n    d3.dsv = function(delimiter, mimeType) {\n        var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n        function dsv(url, row, callback) {\n            if (arguments.length < 3) callback = row, row = null;\n            var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n            xhr.row = function(_) {\n                return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n            };\n            return xhr;\n        }\n        function response(request) {\n            return dsv.parse(request.responseText);\n        }\n        function typedResponse(f) {\n            return function(request) {\n                return dsv.parse(request.responseText, f);\n            };\n        }\n        dsv.parse = function(text, f) {\n            var o;\n            return dsv.parseRows(text, function(row, i) {\n                if (o) return o(row, i - 1);\n                var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n                    return JSON.stringify(name) + \": d[\" + i + \"]\";\n                }).join(\",\") + \"}\");\n                o = f ? function(row, i) {\n                    return f(a(row), i);\n                } : a;\n            });\n        };\n        dsv.parseRows = function(text, f) {\n            var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n            function token() {\n                if (I >= N) return EOF;\n                if (eol) return eol = false, EOL;\n                var j = I;\n                if (text.charCodeAt(j) === 34) {\n                    var i = j;\n                    while (i++ < N) {\n                        if (text.charCodeAt(i) === 34) {\n                            if (text.charCodeAt(i + 1) !== 34) break;\n                            ++i;\n                        }\n                    }\n                    I = i + 2;\n                    var c = text.charCodeAt(i + 1);\n                    if (c === 13) {\n                        eol = true;\n                        if (text.charCodeAt(i + 2) === 10) ++I;\n                    } else if (c === 10) {\n                        eol = true;\n                    }\n                    return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n                }\n                while (I < N) {\n                    var c = text.charCodeAt(I++), k = 1;\n                    if (c === 10) eol = true; else if (c === 13) {\n                        eol = true;\n                        if (text.charCodeAt(I) === 10) ++I, ++k;\n                    } else if (c !== delimiterCode) continue;\n                    return text.substring(j, I - k);\n                }\n                return text.substring(j);\n            }\n            while ((t = token()) !== EOF) {\n                var a = [];\n                while (t !== EOL && t !== EOF) {\n                    a.push(t);\n                    t = token();\n                }\n                if (f && !(a = f(a, n++))) continue;\n                rows.push(a);\n            }\n            return rows;\n        };\n        dsv.format = function(rows) {\n            if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n            var fieldSet = new d3_Set(), fields = [];\n            rows.forEach(function(row) {\n                for (var field in row) {\n                    if (!fieldSet.has(field)) {\n                        fields.push(fieldSet.add(field));\n                    }\n                }\n            });\n            return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n                return fields.map(function(field) {\n                    return formatValue(row[field]);\n                }).join(delimiter);\n            })).join(\"\\n\");\n        };\n        dsv.formatRows = function(rows) {\n            return rows.map(formatRow).join(\"\\n\");\n        };\n        function formatRow(row) {\n            return row.map(formatValue).join(delimiter);\n        }\n        function formatValue(text) {\n            return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n        }\n        return dsv;\n    };\n    d3.csv = d3.dsv(\",\", \"text/csv\");\n    d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n    var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n        setTimeout(callback, 17);\n    };\n    d3.timer = function(callback, delay, then) {\n        var n = arguments.length;\n        if (n < 2) delay = 0;\n        if (n < 3) then = Date.now();\n        var time = then + delay, timer = {\n            c: callback,\n            t: time,\n            f: false,\n            n: null\n        };\n        if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n        d3_timer_queueTail = timer;\n        if (!d3_timer_interval) {\n            d3_timer_timeout = clearTimeout(d3_timer_timeout);\n            d3_timer_interval = 1;\n            d3_timer_frame(d3_timer_step);\n        }\n    };\n    function d3_timer_step() {\n        var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n        if (delay > 24) {\n            if (isFinite(delay)) {\n                clearTimeout(d3_timer_timeout);\n                d3_timer_timeout = setTimeout(d3_timer_step, delay);\n            }\n            d3_timer_interval = 0;\n        } else {\n            d3_timer_interval = 1;\n            d3_timer_frame(d3_timer_step);\n        }\n    }\n    d3.timer.flush = function() {\n        d3_timer_mark();\n        d3_timer_sweep();\n    };\n    function d3_timer_mark() {\n        var now = Date.now();\n        d3_timer_active = d3_timer_queueHead;\n        while (d3_timer_active) {\n            if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n            d3_timer_active = d3_timer_active.n;\n        }\n        return now;\n    }\n    function d3_timer_sweep() {\n        var t0, t1 = d3_timer_queueHead, time = Infinity;\n        while (t1) {\n            if (t1.f) {\n                t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n            } else {\n                if (t1.t < time) time = t1.t;\n                t1 = (t0 = t1).n;\n            }\n        }\n        d3_timer_queueTail = t0;\n        return time;\n    }\n    function d3_format_precision(x, p) {\n        return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n    }\n    d3.round = function(x, n) {\n        return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n    };\n    var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n    d3.formatPrefix = function(value, precision) {\n        var i = 0;\n        if (value) {\n            if (value < 0) value *= -1;\n            if (precision) value = d3.round(value, d3_format_precision(value, precision));\n            i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n            i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n        }\n        return d3_formatPrefixes[8 + i / 3];\n    };\n    function d3_formatPrefix(d, i) {\n        var k = Math.pow(10, abs(8 - i) * 3);\n        return {\n            scale: i > 8 ? function(d) {\n                return d / k;\n            } : function(d) {\n                return d * k;\n            },\n            symbol: d\n        };\n    }\n    function d3_locale_numberFormat(locale) {\n        var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping ? function(value) {\n            var i = value.length, t = [], j = 0, g = locale_grouping[0];\n            while (i > 0 && g > 0) {\n                t.push(value.substring(i -= g, i + g));\n                g = locale_grouping[j = (j + 1) % locale_grouping.length];\n            }\n            return t.reverse().join(locale_thousands);\n        } : d3_identity;\n        return function(specifier) {\n            var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false;\n            if (precision) precision = +precision.substring(1);\n            if (zfill || fill === \"0\" && align === \"=\") {\n                zfill = fill = \"0\";\n                align = \"=\";\n                if (comma) width -= Math.floor((width - 1) / 4);\n            }\n            switch (type) {\n                case \"n\":\n                    comma = true;\n                    type = \"g\";\n                    break;\n\n                case \"%\":\n                    scale = 100;\n                    suffix = \"%\";\n                    type = \"f\";\n                    break;\n\n                case \"p\":\n                    scale = 100;\n                    suffix = \"%\";\n                    type = \"r\";\n                    break;\n\n                case \"b\":\n                case \"o\":\n                case \"x\":\n                case \"X\":\n                    if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n                case \"c\":\n                case \"d\":\n                    integer = true;\n                    precision = 0;\n                    break;\n\n                case \"s\":\n                    scale = -1;\n                    type = \"r\";\n                    break;\n            }\n            if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n            if (type == \"r\" && !precision) type = \"g\";\n            if (precision != null) {\n                if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n            }\n            type = d3_format_types.get(type) || d3_format_typeDefault;\n            var zcomma = zfill && comma;\n            return function(value) {\n                if (integer && value % 1) return \"\";\n                var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n                if (scale < 0) {\n                    var unit = d3.formatPrefix(value, precision);\n                    value = unit.scale(value);\n                    suffix = unit.symbol;\n                } else {\n                    value *= scale;\n                }\n                value = type(value, precision);\n                var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : locale_decimal + value.substring(i + 1);\n                if (!zfill && comma) before = formatGroup(before);\n                var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n                if (zcomma) before = formatGroup(padding + before);\n                negative += prefix;\n                value = before + after;\n                return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n            };\n        };\n    }\n    var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n    var d3_format_types = d3.map({\n        b: function(x) {\n            return x.toString(2);\n        },\n        c: function(x) {\n            return String.fromCharCode(x);\n        },\n        o: function(x) {\n            return x.toString(8);\n        },\n        x: function(x) {\n            return x.toString(16);\n        },\n        X: function(x) {\n            return x.toString(16).toUpperCase();\n        },\n        g: function(x, p) {\n            return x.toPrecision(p);\n        },\n        e: function(x, p) {\n            return x.toExponential(p);\n        },\n        f: function(x, p) {\n            return x.toFixed(p);\n        },\n        r: function(x, p) {\n            return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n        }\n    });\n    function d3_format_typeDefault(x) {\n        return x + \"\";\n    }\n    var d3_time = d3.time = {}, d3_date = Date;\n    function d3_date_utc() {\n        this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n    }\n    d3_date_utc.prototype = {\n        getDate: function() {\n            return this._.getUTCDate();\n        },\n        getDay: function() {\n            return this._.getUTCDay();\n        },\n        getFullYear: function() {\n            return this._.getUTCFullYear();\n        },\n        getHours: function() {\n            return this._.getUTCHours();\n        },\n        getMilliseconds: function() {\n            return this._.getUTCMilliseconds();\n        },\n        getMinutes: function() {\n            return this._.getUTCMinutes();\n        },\n        getMonth: function() {\n            return this._.getUTCMonth();\n        },\n        getSeconds: function() {\n            return this._.getUTCSeconds();\n        },\n        getTime: function() {\n            return this._.getTime();\n        },\n        getTimezoneOffset: function() {\n            return 0;\n        },\n        valueOf: function() {\n            return this._.valueOf();\n        },\n        setDate: function() {\n            d3_time_prototype.setUTCDate.apply(this._, arguments);\n        },\n        setDay: function() {\n            d3_time_prototype.setUTCDay.apply(this._, arguments);\n        },\n        setFullYear: function() {\n            d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n        },\n        setHours: function() {\n            d3_time_prototype.setUTCHours.apply(this._, arguments);\n        },\n        setMilliseconds: function() {\n            d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n        },\n        setMinutes: function() {\n            d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n        },\n        setMonth: function() {\n            d3_time_prototype.setUTCMonth.apply(this._, arguments);\n        },\n        setSeconds: function() {\n            d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n        },\n        setTime: function() {\n            d3_time_prototype.setTime.apply(this._, arguments);\n        }\n    };\n    var d3_time_prototype = Date.prototype;\n    function d3_time_interval(local, step, number) {\n        function round(date) {\n            var d0 = local(date), d1 = offset(d0, 1);\n            return date - d0 < d1 - date ? d0 : d1;\n        }\n        function ceil(date) {\n            step(date = local(new d3_date(date - 1)), 1);\n            return date;\n        }\n        function offset(date, k) {\n            step(date = new d3_date(+date), k);\n            return date;\n        }\n        function range(t0, t1, dt) {\n            var time = ceil(t0), times = [];\n            if (dt > 1) {\n                while (time < t1) {\n                    if (!(number(time) % dt)) times.push(new Date(+time));\n                    step(time, 1);\n                }\n            } else {\n                while (time < t1) times.push(new Date(+time)), step(time, 1);\n            }\n            return times;\n        }\n        function range_utc(t0, t1, dt) {\n            try {\n                d3_date = d3_date_utc;\n                var utc = new d3_date_utc();\n                utc._ = t0;\n                return range(utc, t1, dt);\n            } finally {\n                d3_date = Date;\n            }\n        }\n        local.floor = local;\n        local.round = round;\n        local.ceil = ceil;\n        local.offset = offset;\n        local.range = range;\n        var utc = local.utc = d3_time_interval_utc(local);\n        utc.floor = utc;\n        utc.round = d3_time_interval_utc(round);\n        utc.ceil = d3_time_interval_utc(ceil);\n        utc.offset = d3_time_interval_utc(offset);\n        utc.range = range_utc;\n        return local;\n    }\n    function d3_time_interval_utc(method) {\n        return function(date, k) {\n            try {\n                d3_date = d3_date_utc;\n                var utc = new d3_date_utc();\n                utc._ = date;\n                return method(utc, k)._;\n            } finally {\n                d3_date = Date;\n            }\n        };\n    }\n    d3_time.year = d3_time_interval(function(date) {\n        date = d3_time.day(date);\n        date.setMonth(0, 1);\n        return date;\n    }, function(date, offset) {\n        date.setFullYear(date.getFullYear() + offset);\n    }, function(date) {\n        return date.getFullYear();\n    });\n    d3_time.years = d3_time.year.range;\n    d3_time.years.utc = d3_time.year.utc.range;\n    d3_time.day = d3_time_interval(function(date) {\n        var day = new d3_date(2e3, 0);\n        day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        return day;\n    }, function(date, offset) {\n        date.setDate(date.getDate() + offset);\n    }, function(date) {\n        return date.getDate() - 1;\n    });\n    d3_time.days = d3_time.day.range;\n    d3_time.days.utc = d3_time.day.utc.range;\n    d3_time.dayOfYear = function(date) {\n        var year = d3_time.year(date);\n        return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n    };\n    [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n        i = 7 - i;\n        var interval = d3_time[day] = d3_time_interval(function(date) {\n            (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n            return date;\n        }, function(date, offset) {\n            date.setDate(date.getDate() + Math.floor(offset) * 7);\n        }, function(date) {\n            var day = d3_time.year(date).getDay();\n            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n        });\n        d3_time[day + \"s\"] = interval.range;\n        d3_time[day + \"s\"].utc = interval.utc.range;\n        d3_time[day + \"OfYear\"] = function(date) {\n            var day = d3_time.year(date).getDay();\n            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n        };\n    });\n    d3_time.week = d3_time.sunday;\n    d3_time.weeks = d3_time.sunday.range;\n    d3_time.weeks.utc = d3_time.sunday.utc.range;\n    d3_time.weekOfYear = d3_time.sundayOfYear;\n    function d3_locale_timeFormat(locale) {\n        var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n        function d3_time_format(template) {\n            var n = template.length;\n            function format(date) {\n                var string = [], i = -1, j = 0, c, p, f;\n                while (++i < n) {\n                    if (template.charCodeAt(i) === 37) {\n                        string.push(template.substring(j, i));\n                        if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n                        if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n                        string.push(c);\n                        j = i + 1;\n                    }\n                }\n                string.push(template.substring(j, i));\n                return string.join(\"\");\n            }\n            format.parse = function(string) {\n                var d = {\n                    y: 1900,\n                    m: 0,\n                    d: 1,\n                    H: 0,\n                    M: 0,\n                    S: 0,\n                    L: 0,\n                    Z: null\n                }, i = d3_time_parse(d, template, string, 0);\n                if (i != string.length) return null;\n                if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n                var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n                if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n                    date.setFullYear(d.y, 0, 1);\n                    date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n                } else date.setFullYear(d.y, d.m, d.d);\n                date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n                return localZ ? date._ : date;\n            };\n            format.toString = function() {\n                return template;\n            };\n            return format;\n        }\n        function d3_time_parse(date, template, string, j) {\n            var c, p, t, i = 0, n = template.length, m = string.length;\n            while (i < n) {\n                if (j >= m) return -1;\n                c = template.charCodeAt(i++);\n                if (c === 37) {\n                    t = template.charAt(i++);\n                    p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n                    if (!p || (j = p(date, string, j)) < 0) return -1;\n                } else if (c != string.charCodeAt(j++)) {\n                    return -1;\n                }\n            }\n            return j;\n        }\n        d3_time_format.utc = function(template) {\n            var local = d3_time_format(template);\n            function format(date) {\n                try {\n                    d3_date = d3_date_utc;\n                    var utc = new d3_date();\n                    utc._ = date;\n                    return local(utc);\n                } finally {\n                    d3_date = Date;\n                }\n            }\n            format.parse = function(string) {\n                try {\n                    d3_date = d3_date_utc;\n                    var date = local.parse(string);\n                    return date && date._;\n                } finally {\n                    d3_date = Date;\n                }\n            };\n            format.toString = local.toString;\n            return format;\n        };\n        d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n        var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n        locale_periods.forEach(function(p, i) {\n            d3_time_periodLookup.set(p.toLowerCase(), i);\n        });\n        var d3_time_formats = {\n            a: function(d) {\n                return locale_shortDays[d.getDay()];\n            },\n            A: function(d) {\n                return locale_days[d.getDay()];\n            },\n            b: function(d) {\n                return locale_shortMonths[d.getMonth()];\n            },\n            B: function(d) {\n                return locale_months[d.getMonth()];\n            },\n            c: d3_time_format(locale_dateTime),\n            d: function(d, p) {\n                return d3_time_formatPad(d.getDate(), p, 2);\n            },\n            e: function(d, p) {\n                return d3_time_formatPad(d.getDate(), p, 2);\n            },\n            H: function(d, p) {\n                return d3_time_formatPad(d.getHours(), p, 2);\n            },\n            I: function(d, p) {\n                return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n            },\n            j: function(d, p) {\n                return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n            },\n            L: function(d, p) {\n                return d3_time_formatPad(d.getMilliseconds(), p, 3);\n            },\n            m: function(d, p) {\n                return d3_time_formatPad(d.getMonth() + 1, p, 2);\n            },\n            M: function(d, p) {\n                return d3_time_formatPad(d.getMinutes(), p, 2);\n            },\n            p: function(d) {\n                return locale_periods[+(d.getHours() >= 12)];\n            },\n            S: function(d, p) {\n                return d3_time_formatPad(d.getSeconds(), p, 2);\n            },\n            U: function(d, p) {\n                return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n            },\n            w: function(d) {\n                return d.getDay();\n            },\n            W: function(d, p) {\n                return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n            },\n            x: d3_time_format(locale_date),\n            X: d3_time_format(locale_time),\n            y: function(d, p) {\n                return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n            },\n            Y: function(d, p) {\n                return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n            },\n            Z: d3_time_zone,\n            \"%\": function() {\n                return \"%\";\n            }\n        };\n        var d3_time_parsers = {\n            a: d3_time_parseWeekdayAbbrev,\n            A: d3_time_parseWeekday,\n            b: d3_time_parseMonthAbbrev,\n            B: d3_time_parseMonth,\n            c: d3_time_parseLocaleFull,\n            d: d3_time_parseDay,\n            e: d3_time_parseDay,\n            H: d3_time_parseHour24,\n            I: d3_time_parseHour24,\n            j: d3_time_parseDayOfYear,\n            L: d3_time_parseMilliseconds,\n            m: d3_time_parseMonthNumber,\n            M: d3_time_parseMinutes,\n            p: d3_time_parseAmPm,\n            S: d3_time_parseSeconds,\n            U: d3_time_parseWeekNumberSunday,\n            w: d3_time_parseWeekdayNumber,\n            W: d3_time_parseWeekNumberMonday,\n            x: d3_time_parseLocaleDate,\n            X: d3_time_parseLocaleTime,\n            y: d3_time_parseYear,\n            Y: d3_time_parseFullYear,\n            Z: d3_time_parseZone,\n            \"%\": d3_time_parseLiteralPercent\n        };\n        function d3_time_parseWeekdayAbbrev(date, string, i) {\n            d3_time_dayAbbrevRe.lastIndex = 0;\n            var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n            return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n        function d3_time_parseWeekday(date, string, i) {\n            d3_time_dayRe.lastIndex = 0;\n            var n = d3_time_dayRe.exec(string.substring(i));\n            return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n        function d3_time_parseMonthAbbrev(date, string, i) {\n            d3_time_monthAbbrevRe.lastIndex = 0;\n            var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n            return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n        function d3_time_parseMonth(date, string, i) {\n            d3_time_monthRe.lastIndex = 0;\n            var n = d3_time_monthRe.exec(string.substring(i));\n            return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n        function d3_time_parseLocaleFull(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n        }\n        function d3_time_parseLocaleDate(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n        }\n        function d3_time_parseLocaleTime(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n        }\n        function d3_time_parseAmPm(date, string, i) {\n            var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());\n            return n == null ? -1 : (date.p = n, i);\n        }\n        return d3_time_format;\n    }\n    var d3_time_formatPads = {\n        \"-\": \"\",\n        _: \" \",\n        \"0\": \"0\"\n    }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n    function d3_time_formatPad(value, fill, width) {\n        var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n        return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n    }\n    function d3_time_formatRe(names) {\n        return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n    }\n    function d3_time_formatLookup(names) {\n        var map = new d3_Map(), i = -1, n = names.length;\n        while (++i < n) map.set(names[i].toLowerCase(), i);\n        return map;\n    }\n    function d3_time_parseWeekdayNumber(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n        return n ? (date.w = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekNumberSunday(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i));\n        return n ? (date.U = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekNumberMonday(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i));\n        return n ? (date.W = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseFullYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n        return n ? (date.y = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n    }\n    function d3_time_parseZone(date, string, i) {\n        return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string,\n            i + 5) : -1;\n    }\n    function d3_time_expandYear(d) {\n        return d + (d > 68 ? 1900 : 2e3);\n    }\n    function d3_time_parseMonthNumber(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n    }\n    function d3_time_parseDay(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.d = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseDayOfYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n        return n ? (date.j = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseHour24(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.H = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseMinutes(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.M = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseSeconds(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.S = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_parseMilliseconds(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n        return n ? (date.L = +n[0], i + n[0].length) : -1;\n    }\n    function d3_time_zone(d) {\n        var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n        return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n    }\n    function d3_time_parseLiteralPercent(date, string, i) {\n        d3_time_percentRe.lastIndex = 0;\n        var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n        return n ? i + n[0].length : -1;\n    }\n    function d3_time_formatMulti(formats) {\n        var n = formats.length, i = -1;\n        while (++i < n) formats[i][0] = this(formats[i][0]);\n        return function(date) {\n            var i = 0, f = formats[i];\n            while (!f[1](date)) f = formats[++i];\n            return f[0](date);\n        };\n    }\n    d3.locale = function(locale) {\n        return {\n            numberFormat: d3_locale_numberFormat(locale),\n            timeFormat: d3_locale_timeFormat(locale)\n        };\n    };\n    var d3_locale_enUS = d3.locale({\n        decimal: \".\",\n        thousands: \",\",\n        grouping: [ 3 ],\n        currency: [ \"$\", \"\" ],\n        dateTime: \"%a %b %e %X %Y\",\n        date: \"%m/%d/%Y\",\n        time: \"%H:%M:%S\",\n        periods: [ \"AM\", \"PM\" ],\n        days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n        shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n        months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n        shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n    });\n    d3.format = d3_locale_enUS.numberFormat;\n    d3.geo = {};\n    function d3_adder() {}\n    d3_adder.prototype = {\n        s: 0,\n        t: 0,\n        add: function(y) {\n            d3_adderSum(y, this.t, d3_adderTemp);\n            d3_adderSum(d3_adderTemp.s, this.s, this);\n            if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n        },\n        reset: function() {\n            this.s = this.t = 0;\n        },\n        valueOf: function() {\n            return this.s;\n        }\n    };\n    var d3_adderTemp = new d3_adder();\n    function d3_adderSum(a, b, o) {\n        var x = o.s = a + b, bv = x - a, av = x - bv;\n        o.t = a - av + (b - bv);\n    }\n    d3.geo.stream = function(object, listener) {\n        if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n            d3_geo_streamObjectType[object.type](object, listener);\n        } else {\n            d3_geo_streamGeometry(object, listener);\n        }\n    };\n    function d3_geo_streamGeometry(geometry, listener) {\n        if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n            d3_geo_streamGeometryType[geometry.type](geometry, listener);\n        }\n    }\n    var d3_geo_streamObjectType = {\n        Feature: function(feature, listener) {\n            d3_geo_streamGeometry(feature.geometry, listener);\n        },\n        FeatureCollection: function(object, listener) {\n            var features = object.features, i = -1, n = features.length;\n            while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n        }\n    };\n    var d3_geo_streamGeometryType = {\n        Sphere: function(object, listener) {\n            listener.sphere();\n        },\n        Point: function(object, listener) {\n            object = object.coordinates;\n            listener.point(object[0], object[1], object[2]);\n        },\n        MultiPoint: function(object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n        },\n        LineString: function(object, listener) {\n            d3_geo_streamLine(object.coordinates, listener, 0);\n        },\n        MultiLineString: function(object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n        },\n        Polygon: function(object, listener) {\n            d3_geo_streamPolygon(object.coordinates, listener);\n        },\n        MultiPolygon: function(object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n        },\n        GeometryCollection: function(object, listener) {\n            var geometries = object.geometries, i = -1, n = geometries.length;\n            while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n        }\n    };\n    function d3_geo_streamLine(coordinates, listener, closed) {\n        var i = -1, n = coordinates.length - closed, coordinate;\n        listener.lineStart();\n        while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n        listener.lineEnd();\n    }\n    function d3_geo_streamPolygon(coordinates, listener) {\n        var i = -1, n = coordinates.length;\n        listener.polygonStart();\n        while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n        listener.polygonEnd();\n    }\n    d3.geo.area = function(object) {\n        d3_geo_areaSum = 0;\n        d3.geo.stream(object, d3_geo_area);\n        return d3_geo_areaSum;\n    };\n    var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n    var d3_geo_area = {\n        sphere: function() {\n            d3_geo_areaSum += 4 * π;\n        },\n        point: d3_noop,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: function() {\n            d3_geo_areaRingSum.reset();\n            d3_geo_area.lineStart = d3_geo_areaRingStart;\n        },\n        polygonEnd: function() {\n            var area = 2 * d3_geo_areaRingSum;\n            d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n            d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n        }\n    };\n    function d3_geo_areaRingStart() {\n        var λ00, φ00, λ0, cosφ0, sinφ0;\n        d3_geo_area.point = function(λ, φ) {\n            d3_geo_area.point = nextPoint;\n            λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4),\n                sinφ0 = Math.sin(φ);\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            φ = φ * d3_radians / 2 + π / 4;\n            var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n            d3_geo_areaRingSum.add(Math.atan2(v, u));\n            λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n        }\n        d3_geo_area.lineEnd = function() {\n            nextPoint(λ00, φ00);\n        };\n    }\n    function d3_geo_cartesian(spherical) {\n        var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n        return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n    }\n    function d3_geo_cartesianDot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n    function d3_geo_cartesianCross(a, b) {\n        return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n    }\n    function d3_geo_cartesianAdd(a, b) {\n        a[0] += b[0];\n        a[1] += b[1];\n        a[2] += b[2];\n    }\n    function d3_geo_cartesianScale(vector, k) {\n        return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n    }\n    function d3_geo_cartesianNormalize(d) {\n        var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n        d[0] /= l;\n        d[1] /= l;\n        d[2] /= l;\n    }\n    function d3_geo_spherical(cartesian) {\n        return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n    }\n    function d3_geo_sphericalEqual(a, b) {\n        return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n    }\n    d3.geo.bounds = function() {\n        var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n        var bound = {\n            point: point,\n            lineStart: lineStart,\n            lineEnd: lineEnd,\n            polygonStart: function() {\n                bound.point = ringPoint;\n                bound.lineStart = ringStart;\n                bound.lineEnd = ringEnd;\n                dλSum = 0;\n                d3_geo_area.polygonStart();\n            },\n            polygonEnd: function() {\n                d3_geo_area.polygonEnd();\n                bound.point = point;\n                bound.lineStart = lineStart;\n                bound.lineEnd = lineEnd;\n                if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n                range[0] = λ0, range[1] = λ1;\n            }\n        };\n        function point(λ, φ) {\n            ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n            if (φ < φ0) φ0 = φ;\n            if (φ > φ1) φ1 = φ;\n        }\n        function linePoint(λ, φ) {\n            var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n            if (p0) {\n                var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n                d3_geo_cartesianNormalize(inflection);\n                inflection = d3_geo_spherical(inflection);\n                var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n                if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n                    var φi = inflection[1] * d3_degrees;\n                    if (φi > φ1) φ1 = φi;\n                } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n                    var φi = -inflection[1] * d3_degrees;\n                    if (φi < φ0) φ0 = φi;\n                } else {\n                    if (φ < φ0) φ0 = φ;\n                    if (φ > φ1) φ1 = φ;\n                }\n                if (antimeridian) {\n                    if (λ < λ_) {\n                        if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n                    } else {\n                        if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n                    }\n                } else {\n                    if (λ1 >= λ0) {\n                        if (λ < λ0) λ0 = λ;\n                        if (λ > λ1) λ1 = λ;\n                    } else {\n                        if (λ > λ_) {\n                            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n                        } else {\n                            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n                        }\n                    }\n                }\n            } else {\n                point(λ, φ);\n            }\n            p0 = p, λ_ = λ;\n        }\n        function lineStart() {\n            bound.point = linePoint;\n        }\n        function lineEnd() {\n            range[0] = λ0, range[1] = λ1;\n            bound.point = point;\n            p0 = null;\n        }\n        function ringPoint(λ, φ) {\n            if (p0) {\n                var dλ = λ - λ_;\n                dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n            } else λ__ = λ, φ__ = φ;\n            d3_geo_area.point(λ, φ);\n            linePoint(λ, φ);\n        }\n        function ringStart() {\n            d3_geo_area.lineStart();\n        }\n        function ringEnd() {\n            ringPoint(λ__, φ__);\n            d3_geo_area.lineEnd();\n            if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n            range[0] = λ0, range[1] = λ1;\n            p0 = null;\n        }\n        function angle(λ0, λ1) {\n            return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n        }\n        function compareRanges(a, b) {\n            return a[0] - b[0];\n        }\n        function withinRange(x, range) {\n            return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n        }\n        return function(feature) {\n            φ1 = λ1 = -(λ0 = φ0 = Infinity);\n            ranges = [];\n            d3.geo.stream(feature, bound);\n            var n = ranges.length;\n            if (n) {\n                ranges.sort(compareRanges);\n                for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n                    b = ranges[i];\n                    if (withinRange(b[0], a) || withinRange(b[1], a)) {\n                        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n                        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n                    } else {\n                        merged.push(a = b);\n                    }\n                }\n                var best = -Infinity, dλ;\n                for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n                    b = merged[i];\n                    if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n                }\n            }\n            ranges = range = null;\n            return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n        };\n    }();\n    d3.geo.centroid = function(object) {\n        d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n        d3.geo.stream(object, d3_geo_centroid);\n        var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n        if (m < ε2) {\n            x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n            if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n            m = x * x + y * y + z * z;\n            if (m < ε2) return [ NaN, NaN ];\n        }\n        return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n    };\n    var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n    var d3_geo_centroid = {\n        sphere: d3_noop,\n        point: d3_geo_centroidPoint,\n        lineStart: d3_geo_centroidLineStart,\n        lineEnd: d3_geo_centroidLineEnd,\n        polygonStart: function() {\n            d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n        },\n        polygonEnd: function() {\n            d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n        }\n    };\n    function d3_geo_centroidPoint(λ, φ) {\n        λ *= d3_radians;\n        var cosφ = Math.cos(φ *= d3_radians);\n        d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n    }\n    function d3_geo_centroidPointXYZ(x, y, z) {\n        ++d3_geo_centroidW0;\n        d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n        d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n        d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n    }\n    function d3_geo_centroidLineStart() {\n        var x0, y0, z0;\n        d3_geo_centroid.point = function(λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians);\n            x0 = cosφ * Math.cos(λ);\n            y0 = cosφ * Math.sin(λ);\n            z0 = Math.sin(φ);\n            d3_geo_centroid.point = nextPoint;\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n            d3_geo_centroidW1 += w;\n            d3_geo_centroidX1 += w * (x0 + (x0 = x));\n            d3_geo_centroidY1 += w * (y0 + (y0 = y));\n            d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        }\n    }\n    function d3_geo_centroidLineEnd() {\n        d3_geo_centroid.point = d3_geo_centroidPoint;\n    }\n    function d3_geo_centroidRingStart() {\n        var λ00, φ00, x0, y0, z0;\n        d3_geo_centroid.point = function(λ, φ) {\n            λ00 = λ, φ00 = φ;\n            d3_geo_centroid.point = nextPoint;\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians);\n            x0 = cosφ * Math.cos(λ);\n            y0 = cosφ * Math.sin(λ);\n            z0 = Math.sin(φ);\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        };\n        d3_geo_centroid.lineEnd = function() {\n            nextPoint(λ00, φ00);\n            d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n            d3_geo_centroid.point = d3_geo_centroidPoint;\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n            d3_geo_centroidX2 += v * cx;\n            d3_geo_centroidY2 += v * cy;\n            d3_geo_centroidZ2 += v * cz;\n            d3_geo_centroidW1 += w;\n            d3_geo_centroidX1 += w * (x0 + (x0 = x));\n            d3_geo_centroidY1 += w * (y0 + (y0 = y));\n            d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        }\n    }\n    function d3_true() {\n        return true;\n    }\n    function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n        var subject = [], clip = [];\n        segments.forEach(function(segment) {\n            if ((n = segment.length - 1) <= 0) return;\n            var n, p0 = segment[0], p1 = segment[n];\n            if (d3_geo_sphericalEqual(p0, p1)) {\n                listener.lineStart();\n                for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n                listener.lineEnd();\n                return;\n            }\n            var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n            a.o = b;\n            subject.push(a);\n            clip.push(b);\n            a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n            b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n            a.o = b;\n            subject.push(a);\n            clip.push(b);\n        });\n        clip.sort(compare);\n        d3_geo_clipPolygonLinkCircular(subject);\n        d3_geo_clipPolygonLinkCircular(clip);\n        if (!subject.length) return;\n        for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n            clip[i].e = entry = !entry;\n        }\n        var start = subject[0], points, point;\n        while (1) {\n            var current = start, isSubject = true;\n            while (current.v) if ((current = current.n) === start) return;\n            points = current.z;\n            listener.lineStart();\n            do {\n                current.v = current.o.v = true;\n                if (current.e) {\n                    if (isSubject) {\n                        for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n                    } else {\n                        interpolate(current.x, current.n.x, 1, listener);\n                    }\n                    current = current.n;\n                } else {\n                    if (isSubject) {\n                        points = current.p.z;\n                        for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n                    } else {\n                        interpolate(current.x, current.p.x, -1, listener);\n                    }\n                    current = current.p;\n                }\n                current = current.o;\n                points = current.z;\n                isSubject = !isSubject;\n            } while (!current.v);\n            listener.lineEnd();\n        }\n    }\n    function d3_geo_clipPolygonLinkCircular(array) {\n        if (!(n = array.length)) return;\n        var n, i = 0, a = array[0], b;\n        while (++i < n) {\n            a.n = b = array[i];\n            b.p = a;\n            a = b;\n        }\n        a.n = b = array[0];\n        b.p = a;\n    }\n    function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n        this.x = point;\n        this.z = points;\n        this.o = other;\n        this.e = entry;\n        this.v = false;\n        this.n = this.p = null;\n    }\n    function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n        return function(rotate, listener) {\n            var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n            var clip = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function() {\n                    clip.point = pointRing;\n                    clip.lineStart = ringStart;\n                    clip.lineEnd = ringEnd;\n                    segments = [];\n                    polygon = [];\n                    listener.polygonStart();\n                },\n                polygonEnd: function() {\n                    clip.point = point;\n                    clip.lineStart = lineStart;\n                    clip.lineEnd = lineEnd;\n                    segments = d3.merge(segments);\n                    var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n                    if (segments.length) {\n                        d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n                    } else if (clipStartInside) {\n                        listener.lineStart();\n                        interpolate(null, null, 1, listener);\n                        listener.lineEnd();\n                    }\n                    listener.polygonEnd();\n                    segments = polygon = null;\n                },\n                sphere: function() {\n                    listener.polygonStart();\n                    listener.lineStart();\n                    interpolate(null, null, 1, listener);\n                    listener.lineEnd();\n                    listener.polygonEnd();\n                }\n            };\n            function point(λ, φ) {\n                var point = rotate(λ, φ);\n                if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n            }\n            function pointLine(λ, φ) {\n                var point = rotate(λ, φ);\n                line.point(point[0], point[1]);\n            }\n            function lineStart() {\n                clip.point = pointLine;\n                line.lineStart();\n            }\n            function lineEnd() {\n                clip.point = point;\n                line.lineEnd();\n            }\n            var segments;\n            var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n            function pointRing(λ, φ) {\n                ring.push([ λ, φ ]);\n                var point = rotate(λ, φ);\n                ringListener.point(point[0], point[1]);\n            }\n            function ringStart() {\n                ringListener.lineStart();\n                ring = [];\n            }\n            function ringEnd() {\n                pointRing(ring[0][0], ring[0][1]);\n                ringListener.lineEnd();\n                var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n                ring.pop();\n                polygon.push(ring);\n                ring = null;\n                if (!n) return;\n                if (clean & 1) {\n                    segment = ringSegments[0];\n                    var n = segment.length - 1, i = -1, point;\n                    listener.lineStart();\n                    while (++i < n) listener.point((point = segment[i])[0], point[1]);\n                    listener.lineEnd();\n                    return;\n                }\n                if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n                segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n            }\n            return clip;\n        };\n    }\n    function d3_geo_clipSegmentLength1(segment) {\n        return segment.length > 1;\n    }\n    function d3_geo_clipBufferListener() {\n        var lines = [], line;\n        return {\n            lineStart: function() {\n                lines.push(line = []);\n            },\n            point: function(λ, φ) {\n                line.push([ λ, φ ]);\n            },\n            lineEnd: d3_noop,\n            buffer: function() {\n                var buffer = lines;\n                lines = [];\n                line = null;\n                return buffer;\n            },\n            rejoin: function() {\n                if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n            }\n        };\n    }\n    function d3_geo_clipSort(a, b) {\n        return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n    }\n    function d3_geo_pointInPolygon(point, polygon) {\n        var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n        d3_geo_areaRingSum.reset();\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n            var ring = polygon[i], m = ring.length;\n            if (!m) continue;\n            var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n            while (true) {\n                if (j === m) j = 0;\n                point = ring[j];\n                var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n                d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n                polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n                if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n                    var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n                    d3_geo_cartesianNormalize(arc);\n                    var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n                    d3_geo_cartesianNormalize(intersection);\n                    var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n                    if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n                        winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n                    }\n                }\n                if (!j++) break;\n                λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n            }\n        }\n        return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n    }\n    var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n    function d3_geo_clipAntimeridianLine(listener) {\n        var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n        return {\n            lineStart: function() {\n                listener.lineStart();\n                clean = 1;\n            },\n            point: function(λ1, φ1) {\n                var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n                if (abs(dλ - π) < ε) {\n                    listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n                    listener.point(sλ0, φ0);\n                    listener.lineEnd();\n                    listener.lineStart();\n                    listener.point(sλ1, φ0);\n                    listener.point(λ1, φ0);\n                    clean = 0;\n                } else if (sλ0 !== sλ1 && dλ >= π) {\n                    if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n                    if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n                    φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n                    listener.point(sλ0, φ0);\n                    listener.lineEnd();\n                    listener.lineStart();\n                    listener.point(sλ1, φ0);\n                    clean = 0;\n                }\n                listener.point(λ0 = λ1, φ0 = φ1);\n                sλ0 = sλ1;\n            },\n            lineEnd: function() {\n                listener.lineEnd();\n                λ0 = φ0 = NaN;\n            },\n            clean: function() {\n                return 2 - clean;\n            }\n        };\n    }\n    function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n        var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n        return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n    }\n    function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n        var φ;\n        if (from == null) {\n            φ = direction * halfπ;\n            listener.point(-π, φ);\n            listener.point(0, φ);\n            listener.point(π, φ);\n            listener.point(π, 0);\n            listener.point(π, -φ);\n            listener.point(0, -φ);\n            listener.point(-π, -φ);\n            listener.point(-π, 0);\n            listener.point(-π, φ);\n        } else if (abs(from[0] - to[0]) > ε) {\n            var s = from[0] < to[0] ? π : -π;\n            φ = direction * s / 2;\n            listener.point(-s, φ);\n            listener.point(0, φ);\n            listener.point(s, φ);\n        } else {\n            listener.point(to[0], to[1]);\n        }\n    }\n    function d3_geo_clipCircle(radius) {\n        var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n        return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n        function visible(λ, φ) {\n            return Math.cos(λ) * Math.cos(φ) > cr;\n        }\n        function clipLine(listener) {\n            var point0, c0, v0, v00, clean;\n            return {\n                lineStart: function() {\n                    v00 = v0 = false;\n                    clean = 1;\n                },\n                point: function(λ, φ) {\n                    var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n                    if (!point0 && (v00 = v0 = v)) listener.lineStart();\n                    if (v !== v0) {\n                        point2 = intersect(point0, point1);\n                        if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n                            point1[0] += ε;\n                            point1[1] += ε;\n                            v = visible(point1[0], point1[1]);\n                        }\n                    }\n                    if (v !== v0) {\n                        clean = 0;\n                        if (v) {\n                            listener.lineStart();\n                            point2 = intersect(point1, point0);\n                            listener.point(point2[0], point2[1]);\n                        } else {\n                            point2 = intersect(point0, point1);\n                            listener.point(point2[0], point2[1]);\n                            listener.lineEnd();\n                        }\n                        point0 = point2;\n                    } else if (notHemisphere && point0 && smallRadius ^ v) {\n                        var t;\n                        if (!(c & c0) && (t = intersect(point1, point0, true))) {\n                            clean = 0;\n                            if (smallRadius) {\n                                listener.lineStart();\n                                listener.point(t[0][0], t[0][1]);\n                                listener.point(t[1][0], t[1][1]);\n                                listener.lineEnd();\n                            } else {\n                                listener.point(t[1][0], t[1][1]);\n                                listener.lineEnd();\n                                listener.lineStart();\n                                listener.point(t[0][0], t[0][1]);\n                            }\n                        }\n                    }\n                    if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n                        listener.point(point1[0], point1[1]);\n                    }\n                    point0 = point1, v0 = v, c0 = c;\n                },\n                lineEnd: function() {\n                    if (v0) listener.lineEnd();\n                    point0 = null;\n                },\n                clean: function() {\n                    return clean | (v00 && v0) << 1;\n                }\n            };\n        }\n        function intersect(a, b, two) {\n            var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n            var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n            if (!determinant) return !two && a;\n            var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n            d3_geo_cartesianAdd(A, B);\n            var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n            if (t2 < 0) return;\n            var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n            d3_geo_cartesianAdd(q, A);\n            q = d3_geo_spherical(q);\n            if (!two) return q;\n            var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n            if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n            var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n            if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n            if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n                var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n                d3_geo_cartesianAdd(q1, A);\n                return [ q, d3_geo_spherical(q1) ];\n            }\n        }\n        function code(λ, φ) {\n            var r = smallRadius ? radius : π - radius, code = 0;\n            if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n            if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n            return code;\n        }\n    }\n    function d3_geom_clipLine(x0, y0, x1, y1) {\n        return function(line) {\n            var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n            r = x0 - ax;\n            if (!dx && r > 0) return;\n            r /= dx;\n            if (dx < 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            } else if (dx > 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            }\n            r = x1 - ax;\n            if (!dx && r < 0) return;\n            r /= dx;\n            if (dx < 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            } else if (dx > 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            }\n            r = y0 - ay;\n            if (!dy && r > 0) return;\n            r /= dy;\n            if (dy < 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            } else if (dy > 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            }\n            r = y1 - ay;\n            if (!dy && r < 0) return;\n            r /= dy;\n            if (dy < 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            } else if (dy > 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            }\n            if (t0 > 0) line.a = {\n                x: ax + t0 * dx,\n                y: ay + t0 * dy\n            };\n            if (t1 < 1) line.b = {\n                x: ax + t1 * dx,\n                y: ay + t1 * dy\n            };\n            return line;\n        };\n    }\n    var d3_geo_clipExtentMAX = 1e9;\n    d3.geo.clipExtent = function() {\n        var x0, y0, x1, y1, stream, clip, clipExtent = {\n            stream: function(output) {\n                if (stream) stream.valid = false;\n                stream = clip(output);\n                stream.valid = true;\n                return stream;\n            },\n            extent: function(_) {\n                if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n                clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n                if (stream) stream.valid = false, stream = null;\n                return clipExtent;\n            }\n        };\n        return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n    };\n    function d3_geo_clipExtent(x0, y0, x1, y1) {\n        return function(listener) {\n            var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n            var clip = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function() {\n                    listener = bufferListener;\n                    segments = [];\n                    polygon = [];\n                    clean = true;\n                },\n                polygonEnd: function() {\n                    listener = listener_;\n                    segments = d3.merge(segments);\n                    var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n                    if (inside || visible) {\n                        listener.polygonStart();\n                        if (inside) {\n                            listener.lineStart();\n                            interpolate(null, null, 1, listener);\n                            listener.lineEnd();\n                        }\n                        if (visible) {\n                            d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n                        }\n                        listener.polygonEnd();\n                    }\n                    segments = polygon = ring = null;\n                }\n            };\n            function insidePolygon(p) {\n                var wn = 0, n = polygon.length, y = p[1];\n                for (var i = 0; i < n; ++i) {\n                    for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n                        b = v[j];\n                        if (a[1] <= y) {\n                            if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n                        } else {\n                            if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n                        }\n                        a = b;\n                    }\n                }\n                return wn !== 0;\n            }\n            function interpolate(from, to, direction, listener) {\n                var a = 0, a1 = 0;\n                if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n                    do {\n                        listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n                    } while ((a = (a + direction + 4) % 4) !== a1);\n                } else {\n                    listener.point(to[0], to[1]);\n                }\n            }\n            function pointVisible(x, y) {\n                return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n            }\n            function point(x, y) {\n                if (pointVisible(x, y)) listener.point(x, y);\n            }\n            var x__, y__, v__, x_, y_, v_, first, clean;\n            function lineStart() {\n                clip.point = linePoint;\n                if (polygon) polygon.push(ring = []);\n                first = true;\n                v_ = false;\n                x_ = y_ = NaN;\n            }\n            function lineEnd() {\n                if (segments) {\n                    linePoint(x__, y__);\n                    if (v__ && v_) bufferListener.rejoin();\n                    segments.push(bufferListener.buffer());\n                }\n                clip.point = point;\n                if (v_) listener.lineEnd();\n            }\n            function linePoint(x, y) {\n                x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n                y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n                var v = pointVisible(x, y);\n                if (polygon) ring.push([ x, y ]);\n                if (first) {\n                    x__ = x, y__ = y, v__ = v;\n                    first = false;\n                    if (v) {\n                        listener.lineStart();\n                        listener.point(x, y);\n                    }\n                } else {\n                    if (v && v_) listener.point(x, y); else {\n                        var l = {\n                            a: {\n                                x: x_,\n                                y: y_\n                            },\n                            b: {\n                                x: x,\n                                y: y\n                            }\n                        };\n                        if (clipLine(l)) {\n                            if (!v_) {\n                                listener.lineStart();\n                                listener.point(l.a.x, l.a.y);\n                            }\n                            listener.point(l.b.x, l.b.y);\n                            if (!v) listener.lineEnd();\n                            clean = false;\n                        } else if (v) {\n                            listener.lineStart();\n                            listener.point(x, y);\n                            clean = false;\n                        }\n                    }\n                }\n                x_ = x, y_ = y, v_ = v;\n            }\n            return clip;\n        };\n        function corner(p, direction) {\n            return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n        }\n        function compare(a, b) {\n            return comparePoints(a.x, b.x);\n        }\n        function comparePoints(a, b) {\n            var ca = corner(a, 1), cb = corner(b, 1);\n            return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n        }\n    }\n    function d3_geo_compose(a, b) {\n        function compose(x, y) {\n            return x = a(x, y), b(x[0], x[1]);\n        }\n        if (a.invert && b.invert) compose.invert = function(x, y) {\n            return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n        };\n        return compose;\n    }\n    function d3_geo_conic(projectAt) {\n        var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n        p.parallels = function(_) {\n            if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n            return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n        };\n        return p;\n    }\n    function d3_geo_conicEqualArea(φ0, φ1) {\n        var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n        function forward(λ, φ) {\n            var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n            return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n        }\n        forward.invert = function(x, y) {\n            var ρ0_y = ρ0 - y;\n            return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n        };\n        return forward;\n    }\n    (d3.geo.conicEqualArea = function() {\n        return d3_geo_conic(d3_geo_conicEqualArea);\n    }).raw = d3_geo_conicEqualArea;\n    d3.geo.albers = function() {\n        return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n    };\n    d3.geo.albersUsa = function() {\n        var lower48 = d3.geo.albers();\n        var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n        var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n        var point, pointStream = {\n            point: function(x, y) {\n                point = [ x, y ];\n            }\n        }, lower48Point, alaskaPoint, hawaiiPoint;\n        function albersUsa(coordinates) {\n            var x = coordinates[0], y = coordinates[1];\n            point = null;\n            (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n            return point;\n        }\n        albersUsa.invert = function(coordinates) {\n            var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n            return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n        };\n        albersUsa.stream = function(stream) {\n            var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n            return {\n                point: function(x, y) {\n                    lower48Stream.point(x, y);\n                    alaskaStream.point(x, y);\n                    hawaiiStream.point(x, y);\n                },\n                sphere: function() {\n                    lower48Stream.sphere();\n                    alaskaStream.sphere();\n                    hawaiiStream.sphere();\n                },\n                lineStart: function() {\n                    lower48Stream.lineStart();\n                    alaskaStream.lineStart();\n                    hawaiiStream.lineStart();\n                },\n                lineEnd: function() {\n                    lower48Stream.lineEnd();\n                    alaskaStream.lineEnd();\n                    hawaiiStream.lineEnd();\n                },\n                polygonStart: function() {\n                    lower48Stream.polygonStart();\n                    alaskaStream.polygonStart();\n                    hawaiiStream.polygonStart();\n                },\n                polygonEnd: function() {\n                    lower48Stream.polygonEnd();\n                    alaskaStream.polygonEnd();\n                    hawaiiStream.polygonEnd();\n                }\n            };\n        };\n        albersUsa.precision = function(_) {\n            if (!arguments.length) return lower48.precision();\n            lower48.precision(_);\n            alaska.precision(_);\n            hawaii.precision(_);\n            return albersUsa;\n        };\n        albersUsa.scale = function(_) {\n            if (!arguments.length) return lower48.scale();\n            lower48.scale(_);\n            alaska.scale(_ * .35);\n            hawaii.scale(_);\n            return albersUsa.translate(lower48.translate());\n        };\n        albersUsa.translate = function(_) {\n            if (!arguments.length) return lower48.translate();\n            var k = lower48.scale(), x = +_[0], y = +_[1];\n            lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n            alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n            hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n            return albersUsa;\n        };\n        return albersUsa.scale(1070);\n    };\n    var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n        point: d3_noop,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: function() {\n            d3_geo_pathAreaPolygon = 0;\n            d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n        },\n        polygonEnd: function() {\n            d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n            d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n        }\n    };\n    function d3_geo_pathAreaRingStart() {\n        var x00, y00, x0, y0;\n        d3_geo_pathArea.point = function(x, y) {\n            d3_geo_pathArea.point = nextPoint;\n            x00 = x0 = x, y00 = y0 = y;\n        };\n        function nextPoint(x, y) {\n            d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n            x0 = x, y0 = y;\n        }\n        d3_geo_pathArea.lineEnd = function() {\n            nextPoint(x00, y00);\n        };\n    }\n    var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n    var d3_geo_pathBounds = {\n        point: d3_geo_pathBoundsPoint,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: d3_noop,\n        polygonEnd: d3_noop\n    };\n    function d3_geo_pathBoundsPoint(x, y) {\n        if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n        if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n        if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n        if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n    }\n    function d3_geo_pathBuffer() {\n        var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n        var stream = {\n            point: point,\n            lineStart: function() {\n                stream.point = pointLineStart;\n            },\n            lineEnd: lineEnd,\n            polygonStart: function() {\n                stream.lineEnd = lineEndPolygon;\n            },\n            polygonEnd: function() {\n                stream.lineEnd = lineEnd;\n                stream.point = point;\n            },\n            pointRadius: function(_) {\n                pointCircle = d3_geo_pathBufferCircle(_);\n                return stream;\n            },\n            result: function() {\n                if (buffer.length) {\n                    var result = buffer.join(\"\");\n                    buffer = [];\n                    return result;\n                }\n            }\n        };\n        function point(x, y) {\n            buffer.push(\"M\", x, \",\", y, pointCircle);\n        }\n        function pointLineStart(x, y) {\n            buffer.push(\"M\", x, \",\", y);\n            stream.point = pointLine;\n        }\n        function pointLine(x, y) {\n            buffer.push(\"L\", x, \",\", y);\n        }\n        function lineEnd() {\n            stream.point = point;\n        }\n        function lineEndPolygon() {\n            buffer.push(\"Z\");\n        }\n        return stream;\n    }\n    function d3_geo_pathBufferCircle(radius) {\n        return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n    }\n    var d3_geo_pathCentroid = {\n        point: d3_geo_pathCentroidPoint,\n        lineStart: d3_geo_pathCentroidLineStart,\n        lineEnd: d3_geo_pathCentroidLineEnd,\n        polygonStart: function() {\n            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n        },\n        polygonEnd: function() {\n            d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n            d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n        }\n    };\n    function d3_geo_pathCentroidPoint(x, y) {\n        d3_geo_centroidX0 += x;\n        d3_geo_centroidY0 += y;\n        ++d3_geo_centroidZ0;\n    }\n    function d3_geo_pathCentroidLineStart() {\n        var x0, y0;\n        d3_geo_pathCentroid.point = function(x, y) {\n            d3_geo_pathCentroid.point = nextPoint;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        };\n        function nextPoint(x, y) {\n            var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n            d3_geo_centroidX1 += z * (x0 + x) / 2;\n            d3_geo_centroidY1 += z * (y0 + y) / 2;\n            d3_geo_centroidZ1 += z;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        }\n    }\n    function d3_geo_pathCentroidLineEnd() {\n        d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n    }\n    function d3_geo_pathCentroidRingStart() {\n        var x00, y00, x0, y0;\n        d3_geo_pathCentroid.point = function(x, y) {\n            d3_geo_pathCentroid.point = nextPoint;\n            d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n        };\n        function nextPoint(x, y) {\n            var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n            d3_geo_centroidX1 += z * (x0 + x) / 2;\n            d3_geo_centroidY1 += z * (y0 + y) / 2;\n            d3_geo_centroidZ1 += z;\n            z = y0 * x - x0 * y;\n            d3_geo_centroidX2 += z * (x0 + x);\n            d3_geo_centroidY2 += z * (y0 + y);\n            d3_geo_centroidZ2 += z * 3;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        }\n        d3_geo_pathCentroid.lineEnd = function() {\n            nextPoint(x00, y00);\n        };\n    }\n    function d3_geo_pathContext(context) {\n        var pointRadius = 4.5;\n        var stream = {\n            point: point,\n            lineStart: function() {\n                stream.point = pointLineStart;\n            },\n            lineEnd: lineEnd,\n            polygonStart: function() {\n                stream.lineEnd = lineEndPolygon;\n            },\n            polygonEnd: function() {\n                stream.lineEnd = lineEnd;\n                stream.point = point;\n            },\n            pointRadius: function(_) {\n                pointRadius = _;\n                return stream;\n            },\n            result: d3_noop\n        };\n        function point(x, y) {\n            context.moveTo(x, y);\n            context.arc(x, y, pointRadius, 0, τ);\n        }\n        function pointLineStart(x, y) {\n            context.moveTo(x, y);\n            stream.point = pointLine;\n        }\n        function pointLine(x, y) {\n            context.lineTo(x, y);\n        }\n        function lineEnd() {\n            stream.point = point;\n        }\n        function lineEndPolygon() {\n            context.closePath();\n        }\n        return stream;\n    }\n    function d3_geo_resample(project) {\n        var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n        function resample(stream) {\n            return (maxDepth ? resampleRecursive : resampleNone)(stream);\n        }\n        function resampleNone(stream) {\n            return d3_geo_transformPoint(stream, function(x, y) {\n                x = project(x, y);\n                stream.point(x[0], x[1]);\n            });\n        }\n        function resampleRecursive(stream) {\n            var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n            var resample = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function() {\n                    stream.polygonStart();\n                    resample.lineStart = ringStart;\n                },\n                polygonEnd: function() {\n                    stream.polygonEnd();\n                    resample.lineStart = lineStart;\n                }\n            };\n            function point(x, y) {\n                x = project(x, y);\n                stream.point(x[0], x[1]);\n            }\n            function lineStart() {\n                x0 = NaN;\n                resample.point = linePoint;\n                stream.lineStart();\n            }\n            function linePoint(λ, φ) {\n                var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n                resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n                stream.point(x0, y0);\n            }\n            function lineEnd() {\n                resample.point = point;\n                stream.lineEnd();\n            }\n            function ringStart() {\n                lineStart();\n                resample.point = ringPoint;\n                resample.lineEnd = ringEnd;\n            }\n            function ringPoint(λ, φ) {\n                linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n                resample.point = linePoint;\n            }\n            function ringEnd() {\n                resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n                resample.lineEnd = lineEnd;\n                lineEnd();\n            }\n            return resample;\n        }\n        function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n            var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n            if (d2 > 4 * δ2 && depth--) {\n                var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n                if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n                    resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n                    stream.point(x2, y2);\n                    resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n                }\n            }\n        }\n        resample.precision = function(_) {\n            if (!arguments.length) return Math.sqrt(δ2);\n            maxDepth = (δ2 = _ * _) > 0 && 16;\n            return resample;\n        };\n        return resample;\n    }\n    d3.geo.path = function() {\n        var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n        function path(object) {\n            if (object) {\n                if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n                if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n                d3.geo.stream(object, cacheStream);\n            }\n            return contextStream.result();\n        }\n        path.area = function(object) {\n            d3_geo_pathAreaSum = 0;\n            d3.geo.stream(object, projectStream(d3_geo_pathArea));\n            return d3_geo_pathAreaSum;\n        };\n        path.centroid = function(object) {\n            d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n            d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n            return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n        };\n        path.bounds = function(object) {\n            d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n            d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n            return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n        };\n        path.projection = function(_) {\n            if (!arguments.length) return projection;\n            projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n            return reset();\n        };\n        path.context = function(_) {\n            if (!arguments.length) return context;\n            contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n            if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n            return reset();\n        };\n        path.pointRadius = function(_) {\n            if (!arguments.length) return pointRadius;\n            pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n            return path;\n        };\n        function reset() {\n            cacheStream = null;\n            return path;\n        }\n        return path.projection(d3.geo.albersUsa()).context(null);\n    };\n    function d3_geo_pathProjectStream(project) {\n        var resample = d3_geo_resample(function(x, y) {\n            return project([ x * d3_degrees, y * d3_degrees ]);\n        });\n        return function(stream) {\n            return d3_geo_projectionRadians(resample(stream));\n        };\n    }\n    d3.geo.transform = function(methods) {\n        return {\n            stream: function(stream) {\n                var transform = new d3_geo_transform(stream);\n                for (var k in methods) transform[k] = methods[k];\n                return transform;\n            }\n        };\n    };\n    function d3_geo_transform(stream) {\n        this.stream = stream;\n    }\n    d3_geo_transform.prototype = {\n        point: function(x, y) {\n            this.stream.point(x, y);\n        },\n        sphere: function() {\n            this.stream.sphere();\n        },\n        lineStart: function() {\n            this.stream.lineStart();\n        },\n        lineEnd: function() {\n            this.stream.lineEnd();\n        },\n        polygonStart: function() {\n            this.stream.polygonStart();\n        },\n        polygonEnd: function() {\n            this.stream.polygonEnd();\n        }\n    };\n    function d3_geo_transformPoint(stream, point) {\n        return {\n            point: point,\n            sphere: function() {\n                stream.sphere();\n            },\n            lineStart: function() {\n                stream.lineStart();\n            },\n            lineEnd: function() {\n                stream.lineEnd();\n            },\n            polygonStart: function() {\n                stream.polygonStart();\n            },\n            polygonEnd: function() {\n                stream.polygonEnd();\n            }\n        };\n    }\n    d3.geo.projection = d3_geo_projection;\n    d3.geo.projectionMutator = d3_geo_projectionMutator;\n    function d3_geo_projection(project) {\n        return d3_geo_projectionMutator(function() {\n            return project;\n        })();\n    }\n    function d3_geo_projectionMutator(projectAt) {\n        var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n            x = project(x, y);\n            return [ x[0] * k + δx, δy - x[1] * k ];\n        }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n        function projection(point) {\n            point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n            return [ point[0] * k + δx, δy - point[1] * k ];\n        }\n        function invert(point) {\n            point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n            return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n        }\n        projection.stream = function(output) {\n            if (stream) stream.valid = false;\n            stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n            stream.valid = true;\n            return stream;\n        };\n        projection.clipAngle = function(_) {\n            if (!arguments.length) return clipAngle;\n            preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n            return invalidate();\n        };\n        projection.clipExtent = function(_) {\n            if (!arguments.length) return clipExtent;\n            clipExtent = _;\n            postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n            return invalidate();\n        };\n        projection.scale = function(_) {\n            if (!arguments.length) return k;\n            k = +_;\n            return reset();\n        };\n        projection.translate = function(_) {\n            if (!arguments.length) return [ x, y ];\n            x = +_[0];\n            y = +_[1];\n            return reset();\n        };\n        projection.center = function(_) {\n            if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n            λ = _[0] % 360 * d3_radians;\n            φ = _[1] % 360 * d3_radians;\n            return reset();\n        };\n        projection.rotate = function(_) {\n            if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n            δλ = _[0] % 360 * d3_radians;\n            δφ = _[1] % 360 * d3_radians;\n            δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n            return reset();\n        };\n        d3.rebind(projection, projectResample, \"precision\");\n        function reset() {\n            projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n            var center = project(λ, φ);\n            δx = x - center[0] * k;\n            δy = y + center[1] * k;\n            return invalidate();\n        }\n        function invalidate() {\n            if (stream) stream.valid = false, stream = null;\n            return projection;\n        }\n        return function() {\n            project = projectAt.apply(this, arguments);\n            projection.invert = project.invert && invert;\n            return reset();\n        };\n    }\n    function d3_geo_projectionRadians(stream) {\n        return d3_geo_transformPoint(stream, function(x, y) {\n            stream.point(x * d3_radians, y * d3_radians);\n        });\n    }\n    function d3_geo_equirectangular(λ, φ) {\n        return [ λ, φ ];\n    }\n    (d3.geo.equirectangular = function() {\n        return d3_geo_projection(d3_geo_equirectangular);\n    }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n    d3.geo.rotation = function(rotate) {\n        rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n        function forward(coordinates) {\n            coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n            return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n        }\n        forward.invert = function(coordinates) {\n            coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n            return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n        };\n        return forward;\n    };\n    function d3_geo_identityRotation(λ, φ) {\n        return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    }\n    d3_geo_identityRotation.invert = d3_geo_equirectangular;\n    function d3_geo_rotation(δλ, δφ, δγ) {\n        return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n    }\n    function d3_geo_forwardRotationλ(δλ) {\n        return function(λ, φ) {\n            return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n        };\n    }\n    function d3_geo_rotationλ(δλ) {\n        var rotation = d3_geo_forwardRotationλ(δλ);\n        rotation.invert = d3_geo_forwardRotationλ(-δλ);\n        return rotation;\n    }\n    function d3_geo_rotationφγ(δφ, δγ) {\n        var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n        function rotation(λ, φ) {\n            var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n            return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n        }\n        rotation.invert = function(λ, φ) {\n            var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n            return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n        };\n        return rotation;\n    }\n    d3.geo.circle = function() {\n        var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n        function circle() {\n            var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n            interpolate(null, null, 1, {\n                point: function(x, y) {\n                    ring.push(x = rotate(x, y));\n                    x[0] *= d3_degrees, x[1] *= d3_degrees;\n                }\n            });\n            return {\n                type: \"Polygon\",\n                coordinates: [ ring ]\n            };\n        }\n        circle.origin = function(x) {\n            if (!arguments.length) return origin;\n            origin = x;\n            return circle;\n        };\n        circle.angle = function(x) {\n            if (!arguments.length) return angle;\n            interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n            return circle;\n        };\n        circle.precision = function(_) {\n            if (!arguments.length) return precision;\n            interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n            return circle;\n        };\n        return circle.angle(90);\n    };\n    function d3_geo_circleInterpolate(radius, precision) {\n        var cr = Math.cos(radius), sr = Math.sin(radius);\n        return function(from, to, direction, listener) {\n            var step = direction * precision;\n            if (from != null) {\n                from = d3_geo_circleAngle(cr, from);\n                to = d3_geo_circleAngle(cr, to);\n                if (direction > 0 ? from < to : from > to) from += direction * τ;\n            } else {\n                from = radius + direction * τ;\n                to = radius - .5 * step;\n            }\n            for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n                listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n            }\n        };\n    }\n    function d3_geo_circleAngle(cr, point) {\n        var a = d3_geo_cartesian(point);\n        a[0] -= cr;\n        d3_geo_cartesianNormalize(a);\n        var angle = d3_acos(-a[1]);\n        return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n    }\n    d3.geo.distance = function(a, b) {\n        var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n        return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n    };\n    d3.geo.graticule = function() {\n        var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n        function graticule() {\n            return {\n                type: \"MultiLineString\",\n                coordinates: lines()\n            };\n        }\n        function lines() {\n            return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n                    return abs(x % DX) > ε;\n                }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n                    return abs(y % DY) > ε;\n                }).map(y));\n        }\n        graticule.lines = function() {\n            return lines().map(function(coordinates) {\n                return {\n                    type: \"LineString\",\n                    coordinates: coordinates\n                };\n            });\n        };\n        graticule.outline = function() {\n            return {\n                type: \"Polygon\",\n                coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n            };\n        };\n        graticule.extent = function(_) {\n            if (!arguments.length) return graticule.minorExtent();\n            return graticule.majorExtent(_).minorExtent(_);\n        };\n        graticule.majorExtent = function(_) {\n            if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n            X0 = +_[0][0], X1 = +_[1][0];\n            Y0 = +_[0][1], Y1 = +_[1][1];\n            if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n            if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n            return graticule.precision(precision);\n        };\n        graticule.minorExtent = function(_) {\n            if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n            x0 = +_[0][0], x1 = +_[1][0];\n            y0 = +_[0][1], y1 = +_[1][1];\n            if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n            if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n            return graticule.precision(precision);\n        };\n        graticule.step = function(_) {\n            if (!arguments.length) return graticule.minorStep();\n            return graticule.majorStep(_).minorStep(_);\n        };\n        graticule.majorStep = function(_) {\n            if (!arguments.length) return [ DX, DY ];\n            DX = +_[0], DY = +_[1];\n            return graticule;\n        };\n        graticule.minorStep = function(_) {\n            if (!arguments.length) return [ dx, dy ];\n            dx = +_[0], dy = +_[1];\n            return graticule;\n        };\n        graticule.precision = function(_) {\n            if (!arguments.length) return precision;\n            precision = +_;\n            x = d3_geo_graticuleX(y0, y1, 90);\n            y = d3_geo_graticuleY(x0, x1, precision);\n            X = d3_geo_graticuleX(Y0, Y1, 90);\n            Y = d3_geo_graticuleY(X0, X1, precision);\n            return graticule;\n        };\n        return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n    };\n    function d3_geo_graticuleX(y0, y1, dy) {\n        var y = d3.range(y0, y1 - ε, dy).concat(y1);\n        return function(x) {\n            return y.map(function(y) {\n                return [ x, y ];\n            });\n        };\n    }\n    function d3_geo_graticuleY(x0, x1, dx) {\n        var x = d3.range(x0, x1 - ε, dx).concat(x1);\n        return function(y) {\n            return x.map(function(x) {\n                return [ x, y ];\n            });\n        };\n    }\n    function d3_source(d) {\n        return d.source;\n    }\n    function d3_target(d) {\n        return d.target;\n    }\n    d3.geo.greatArc = function() {\n        var source = d3_source, source_, target = d3_target, target_;\n        function greatArc() {\n            return {\n                type: \"LineString\",\n                coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n            };\n        }\n        greatArc.distance = function() {\n            return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n        };\n        greatArc.source = function(_) {\n            if (!arguments.length) return source;\n            source = _, source_ = typeof _ === \"function\" ? null : _;\n            return greatArc;\n        };\n        greatArc.target = function(_) {\n            if (!arguments.length) return target;\n            target = _, target_ = typeof _ === \"function\" ? null : _;\n            return greatArc;\n        };\n        greatArc.precision = function() {\n            return arguments.length ? greatArc : 0;\n        };\n        return greatArc;\n    };\n    d3.geo.interpolate = function(source, target) {\n        return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n    };\n    function d3_geo_interpolate(x0, y0, x1, y1) {\n        var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n        var interpolate = d ? function(t) {\n            var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n            return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n        } : function() {\n            return [ x0 * d3_degrees, y0 * d3_degrees ];\n        };\n        interpolate.distance = d;\n        return interpolate;\n    }\n    d3.geo.length = function(object) {\n        d3_geo_lengthSum = 0;\n        d3.geo.stream(object, d3_geo_length);\n        return d3_geo_lengthSum;\n    };\n    var d3_geo_lengthSum;\n    var d3_geo_length = {\n        sphere: d3_noop,\n        point: d3_noop,\n        lineStart: d3_geo_lengthLineStart,\n        lineEnd: d3_noop,\n        polygonStart: d3_noop,\n        polygonEnd: d3_noop\n    };\n    function d3_geo_lengthLineStart() {\n        var λ0, sinφ0, cosφ0;\n        d3_geo_length.point = function(λ, φ) {\n            λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n            d3_geo_length.point = nextPoint;\n        };\n        d3_geo_length.lineEnd = function() {\n            d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n        };\n        function nextPoint(λ, φ) {\n            var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n            d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n            λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n        }\n    }\n    function d3_geo_azimuthal(scale, angle) {\n        function azimuthal(λ, φ) {\n            var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n            return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n        }\n        azimuthal.invert = function(x, y) {\n            var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n            return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n        };\n        return azimuthal;\n    }\n    var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n        return Math.sqrt(2 / (1 + cosλcosφ));\n    }, function(ρ) {\n        return 2 * Math.asin(ρ / 2);\n    });\n    (d3.geo.azimuthalEqualArea = function() {\n        return d3_geo_projection(d3_geo_azimuthalEqualArea);\n    }).raw = d3_geo_azimuthalEqualArea;\n    var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n        var c = Math.acos(cosλcosφ);\n        return c && c / Math.sin(c);\n    }, d3_identity);\n    (d3.geo.azimuthalEquidistant = function() {\n        return d3_geo_projection(d3_geo_azimuthalEquidistant);\n    }).raw = d3_geo_azimuthalEquidistant;\n    function d3_geo_conicConformal(φ0, φ1) {\n        var cosφ0 = Math.cos(φ0), t = function(φ) {\n            return Math.tan(π / 4 + φ / 2);\n        }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n        if (!n) return d3_geo_mercator;\n        function forward(λ, φ) {\n            var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n            return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n        }\n        forward.invert = function(x, y) {\n            var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n            return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n        };\n        return forward;\n    }\n    (d3.geo.conicConformal = function() {\n        return d3_geo_conic(d3_geo_conicConformal);\n    }).raw = d3_geo_conicConformal;\n    function d3_geo_conicEquidistant(φ0, φ1) {\n        var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n        if (abs(n) < ε) return d3_geo_equirectangular;\n        function forward(λ, φ) {\n            var ρ = G - φ;\n            return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n        }\n        forward.invert = function(x, y) {\n            var ρ0_y = G - y;\n            return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n        };\n        return forward;\n    }\n    (d3.geo.conicEquidistant = function() {\n        return d3_geo_conic(d3_geo_conicEquidistant);\n    }).raw = d3_geo_conicEquidistant;\n    var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n        return 1 / cosλcosφ;\n    }, Math.atan);\n    (d3.geo.gnomonic = function() {\n        return d3_geo_projection(d3_geo_gnomonic);\n    }).raw = d3_geo_gnomonic;\n    function d3_geo_mercator(λ, φ) {\n        return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n    }\n    d3_geo_mercator.invert = function(x, y) {\n        return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n    };\n    function d3_geo_mercatorProjection(project) {\n        var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n        m.scale = function() {\n            var v = scale.apply(m, arguments);\n            return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n        };\n        m.translate = function() {\n            var v = translate.apply(m, arguments);\n            return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n        };\n        m.clipExtent = function(_) {\n            var v = clipExtent.apply(m, arguments);\n            if (v === m) {\n                if (clipAuto = _ == null) {\n                    var k = π * scale(), t = translate();\n                    clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n                }\n            } else if (clipAuto) {\n                v = null;\n            }\n            return v;\n        };\n        return m.clipExtent(null);\n    }\n    (d3.geo.mercator = function() {\n        return d3_geo_mercatorProjection(d3_geo_mercator);\n    }).raw = d3_geo_mercator;\n    var d3_geo_orthographic = d3_geo_azimuthal(function() {\n        return 1;\n    }, Math.asin);\n    (d3.geo.orthographic = function() {\n        return d3_geo_projection(d3_geo_orthographic);\n    }).raw = d3_geo_orthographic;\n    var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n        return 1 / (1 + cosλcosφ);\n    }, function(ρ) {\n        return 2 * Math.atan(ρ);\n    });\n    (d3.geo.stereographic = function() {\n        return d3_geo_projection(d3_geo_stereographic);\n    }).raw = d3_geo_stereographic;\n    function d3_geo_transverseMercator(λ, φ) {\n        return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n    }\n    d3_geo_transverseMercator.invert = function(x, y) {\n        return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n    };\n    (d3.geo.transverseMercator = function() {\n        var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n        projection.center = function(_) {\n            return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n        };\n        projection.rotate = function(_) {\n            return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(),\n                [ _[0], _[1], _[2] - 90 ]);\n        };\n        return projection.rotate([ 0, 0 ]);\n    }).raw = d3_geo_transverseMercator;\n    d3.geom = {};\n    function d3_geom_pointX(d) {\n        return d[0];\n    }\n    function d3_geom_pointY(d) {\n        return d[1];\n    }\n    d3.geom.hull = function(vertices) {\n        var x = d3_geom_pointX, y = d3_geom_pointY;\n        if (arguments.length) return hull(vertices);\n        function hull(data) {\n            if (data.length < 3) return [];\n            var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n            for (i = 0; i < n; i++) {\n                points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n            }\n            points.sort(d3_geom_hullOrder);\n            for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n            var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n            var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n            for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n            for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n            return polygon;\n        }\n        hull.x = function(_) {\n            return arguments.length ? (x = _, hull) : x;\n        };\n        hull.y = function(_) {\n            return arguments.length ? (y = _, hull) : y;\n        };\n        return hull;\n    };\n    function d3_geom_hullUpper(points) {\n        var n = points.length, hull = [ 0, 1 ], hs = 2;\n        for (var i = 2; i < n; i++) {\n            while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n            hull[hs++] = i;\n        }\n        return hull.slice(0, hs);\n    }\n    function d3_geom_hullOrder(a, b) {\n        return a[0] - b[0] || a[1] - b[1];\n    }\n    d3.geom.polygon = function(coordinates) {\n        d3_subclass(coordinates, d3_geom_polygonPrototype);\n        return coordinates;\n    };\n    var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n    d3_geom_polygonPrototype.area = function() {\n        var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n        while (++i < n) {\n            a = b;\n            b = this[i];\n            area += a[1] * b[0] - a[0] * b[1];\n        }\n        return area * .5;\n    };\n    d3_geom_polygonPrototype.centroid = function(k) {\n        var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n        if (!arguments.length) k = -1 / (6 * this.area());\n        while (++i < n) {\n            a = b;\n            b = this[i];\n            c = a[0] * b[1] - b[0] * a[1];\n            x += (a[0] + b[0]) * c;\n            y += (a[1] + b[1]) * c;\n        }\n        return [ x * k, y * k ];\n    };\n    d3_geom_polygonPrototype.clip = function(subject) {\n        var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n        while (++i < n) {\n            input = subject.slice();\n            subject.length = 0;\n            b = this[i];\n            c = input[(m = input.length - closed) - 1];\n            j = -1;\n            while (++j < m) {\n                d = input[j];\n                if (d3_geom_polygonInside(d, a, b)) {\n                    if (!d3_geom_polygonInside(c, a, b)) {\n                        subject.push(d3_geom_polygonIntersect(c, d, a, b));\n                    }\n                    subject.push(d);\n                } else if (d3_geom_polygonInside(c, a, b)) {\n                    subject.push(d3_geom_polygonIntersect(c, d, a, b));\n                }\n                c = d;\n            }\n            if (closed) subject.push(subject[0]);\n            a = b;\n        }\n        return subject;\n    };\n    function d3_geom_polygonInside(p, a, b) {\n        return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n    }\n    function d3_geom_polygonIntersect(c, d, a, b) {\n        var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n        return [ x1 + ua * x21, y1 + ua * y21 ];\n    }\n    function d3_geom_polygonClosed(coordinates) {\n        var a = coordinates[0], b = coordinates[coordinates.length - 1];\n        return !(a[0] - b[0] || a[1] - b[1]);\n    }\n    var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n    function d3_geom_voronoiBeach() {\n        d3_geom_voronoiRedBlackNode(this);\n        this.edge = this.site = this.circle = null;\n    }\n    function d3_geom_voronoiCreateBeach(site) {\n        var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n        beach.site = site;\n        return beach;\n    }\n    function d3_geom_voronoiDetachBeach(beach) {\n        d3_geom_voronoiDetachCircle(beach);\n        d3_geom_voronoiBeaches.remove(beach);\n        d3_geom_voronoiBeachPool.push(beach);\n        d3_geom_voronoiRedBlackNode(beach);\n    }\n    function d3_geom_voronoiRemoveBeach(beach) {\n        var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n            x: x,\n            y: y\n        }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n        d3_geom_voronoiDetachBeach(beach);\n        var lArc = previous;\n        while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n            previous = lArc.P;\n            disappearing.unshift(lArc);\n            d3_geom_voronoiDetachBeach(lArc);\n            lArc = previous;\n        }\n        disappearing.unshift(lArc);\n        d3_geom_voronoiDetachCircle(lArc);\n        var rArc = next;\n        while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n            next = rArc.N;\n            disappearing.push(rArc);\n            d3_geom_voronoiDetachBeach(rArc);\n            rArc = next;\n        }\n        disappearing.push(rArc);\n        d3_geom_voronoiDetachCircle(rArc);\n        var nArcs = disappearing.length, iArc;\n        for (iArc = 1; iArc < nArcs; ++iArc) {\n            rArc = disappearing[iArc];\n            lArc = disappearing[iArc - 1];\n            d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n        }\n        lArc = disappearing[0];\n        rArc = disappearing[nArcs - 1];\n        rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n        d3_geom_voronoiAttachCircle(lArc);\n        d3_geom_voronoiAttachCircle(rArc);\n    }\n    function d3_geom_voronoiAddBeach(site) {\n        var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n        while (node) {\n            dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n            if (dxl > ε) node = node.L; else {\n                dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n                if (dxr > ε) {\n                    if (!node.R) {\n                        lArc = node;\n                        break;\n                    }\n                    node = node.R;\n                } else {\n                    if (dxl > -ε) {\n                        lArc = node.P;\n                        rArc = node;\n                    } else if (dxr > -ε) {\n                        lArc = node;\n                        rArc = node.N;\n                    } else {\n                        lArc = rArc = node;\n                    }\n                    break;\n                }\n            }\n        }\n        var newArc = d3_geom_voronoiCreateBeach(site);\n        d3_geom_voronoiBeaches.insert(lArc, newArc);\n        if (!lArc && !rArc) return;\n        if (lArc === rArc) {\n            d3_geom_voronoiDetachCircle(lArc);\n            rArc = d3_geom_voronoiCreateBeach(lArc.site);\n            d3_geom_voronoiBeaches.insert(newArc, rArc);\n            newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n            d3_geom_voronoiAttachCircle(lArc);\n            d3_geom_voronoiAttachCircle(rArc);\n            return;\n        }\n        if (!rArc) {\n            newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n            return;\n        }\n        d3_geom_voronoiDetachCircle(lArc);\n        d3_geom_voronoiDetachCircle(rArc);\n        var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n            x: (cy * hb - by * hc) / d + ax,\n            y: (bx * hc - cx * hb) / d + ay\n        };\n        d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n        newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n        rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n        d3_geom_voronoiAttachCircle(lArc);\n        d3_geom_voronoiAttachCircle(rArc);\n    }\n    function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n        var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n        if (!pby2) return rfocx;\n        var lArc = arc.P;\n        if (!lArc) return -Infinity;\n        site = lArc.site;\n        var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n        if (!plby2) return lfocx;\n        var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n        if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n        return (rfocx + lfocx) / 2;\n    }\n    function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n        var rArc = arc.N;\n        if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n        var site = arc.site;\n        return site.y === directrix ? site.x : Infinity;\n    }\n    function d3_geom_voronoiCell(site) {\n        this.site = site;\n        this.edges = [];\n    }\n    d3_geom_voronoiCell.prototype.prepare = function() {\n        var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n        while (iHalfEdge--) {\n            edge = halfEdges[iHalfEdge].edge;\n            if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n        }\n        halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n        return halfEdges.length;\n    };\n    function d3_geom_voronoiCloseCells(extent) {\n        var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n        while (iCell--) {\n            cell = cells[iCell];\n            if (!cell || !cell.prepare()) continue;\n            halfEdges = cell.edges;\n            nHalfEdges = halfEdges.length;\n            iHalfEdge = 0;\n            while (iHalfEdge < nHalfEdges) {\n                end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n                start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n                if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n                    halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n                        x: x0,\n                        y: abs(x2 - x0) < ε ? y2 : y1\n                    } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n                        x: abs(y2 - y1) < ε ? x2 : x1,\n                        y: y1\n                    } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n                        x: x1,\n                        y: abs(x2 - x1) < ε ? y2 : y0\n                    } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n                        x: abs(y2 - y0) < ε ? x2 : x0,\n                        y: y0\n                    } : null), cell.site, null));\n                    ++nHalfEdges;\n                }\n            }\n        }\n    }\n    function d3_geom_voronoiHalfEdgeOrder(a, b) {\n        return b.angle - a.angle;\n    }\n    function d3_geom_voronoiCircle() {\n        d3_geom_voronoiRedBlackNode(this);\n        this.x = this.y = this.arc = this.site = this.cy = null;\n    }\n    function d3_geom_voronoiAttachCircle(arc) {\n        var lArc = arc.P, rArc = arc.N;\n        if (!lArc || !rArc) return;\n        var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n        if (lSite === rSite) return;\n        var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n        var d = 2 * (ax * cy - ay * cx);\n        if (d >= -ε2) return;\n        var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n        var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n        circle.arc = arc;\n        circle.site = cSite;\n        circle.x = x + bx;\n        circle.y = cy + Math.sqrt(x * x + y * y);\n        circle.cy = cy;\n        arc.circle = circle;\n        var before = null, node = d3_geom_voronoiCircles._;\n        while (node) {\n            if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n                if (node.L) node = node.L; else {\n                    before = node.P;\n                    break;\n                }\n            } else {\n                if (node.R) node = node.R; else {\n                    before = node;\n                    break;\n                }\n            }\n        }\n        d3_geom_voronoiCircles.insert(before, circle);\n        if (!before) d3_geom_voronoiFirstCircle = circle;\n    }\n    function d3_geom_voronoiDetachCircle(arc) {\n        var circle = arc.circle;\n        if (circle) {\n            if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n            d3_geom_voronoiCircles.remove(circle);\n            d3_geom_voronoiCirclePool.push(circle);\n            d3_geom_voronoiRedBlackNode(circle);\n            arc.circle = null;\n        }\n    }\n    function d3_geom_voronoiClipEdges(extent) {\n        var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n        while (i--) {\n            e = edges[i];\n            if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n                e.a = e.b = null;\n                edges.splice(i, 1);\n            }\n        }\n    }\n    function d3_geom_voronoiConnectEdge(edge, extent) {\n        var vb = edge.b;\n        if (vb) return true;\n        var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n        if (ry === ly) {\n            if (fx < x0 || fx >= x1) return;\n            if (lx > rx) {\n                if (!va) va = {\n                    x: fx,\n                    y: y0\n                }; else if (va.y >= y1) return;\n                vb = {\n                    x: fx,\n                    y: y1\n                };\n            } else {\n                if (!va) va = {\n                    x: fx,\n                    y: y1\n                }; else if (va.y < y0) return;\n                vb = {\n                    x: fx,\n                    y: y0\n                };\n            }\n        } else {\n            fm = (lx - rx) / (ry - ly);\n            fb = fy - fm * fx;\n            if (fm < -1 || fm > 1) {\n                if (lx > rx) {\n                    if (!va) va = {\n                        x: (y0 - fb) / fm,\n                        y: y0\n                    }; else if (va.y >= y1) return;\n                    vb = {\n                        x: (y1 - fb) / fm,\n                        y: y1\n                    };\n                } else {\n                    if (!va) va = {\n                        x: (y1 - fb) / fm,\n                        y: y1\n                    }; else if (va.y < y0) return;\n                    vb = {\n                        x: (y0 - fb) / fm,\n                        y: y0\n                    };\n                }\n            } else {\n                if (ly < ry) {\n                    if (!va) va = {\n                        x: x0,\n                        y: fm * x0 + fb\n                    }; else if (va.x >= x1) return;\n                    vb = {\n                        x: x1,\n                        y: fm * x1 + fb\n                    };\n                } else {\n                    if (!va) va = {\n                        x: x1,\n                        y: fm * x1 + fb\n                    }; else if (va.x < x0) return;\n                    vb = {\n                        x: x0,\n                        y: fm * x0 + fb\n                    };\n                }\n            }\n        }\n        edge.a = va;\n        edge.b = vb;\n        return true;\n    }\n    function d3_geom_voronoiEdge(lSite, rSite) {\n        this.l = lSite;\n        this.r = rSite;\n        this.a = this.b = null;\n    }\n    function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n        var edge = new d3_geom_voronoiEdge(lSite, rSite);\n        d3_geom_voronoiEdges.push(edge);\n        if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n        if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n        d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n        d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n        return edge;\n    }\n    function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n        var edge = new d3_geom_voronoiEdge(lSite, null);\n        edge.a = va;\n        edge.b = vb;\n        d3_geom_voronoiEdges.push(edge);\n        return edge;\n    }\n    function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n        if (!edge.a && !edge.b) {\n            edge.a = vertex;\n            edge.l = lSite;\n            edge.r = rSite;\n        } else if (edge.l === rSite) {\n            edge.b = vertex;\n        } else {\n            edge.a = vertex;\n        }\n    }\n    function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n        var va = edge.a, vb = edge.b;\n        this.edge = edge;\n        this.site = lSite;\n        this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n    }\n    d3_geom_voronoiHalfEdge.prototype = {\n        start: function() {\n            return this.edge.l === this.site ? this.edge.a : this.edge.b;\n        },\n        end: function() {\n            return this.edge.l === this.site ? this.edge.b : this.edge.a;\n        }\n    };\n    function d3_geom_voronoiRedBlackTree() {\n        this._ = null;\n    }\n    function d3_geom_voronoiRedBlackNode(node) {\n        node.U = node.C = node.L = node.R = node.P = node.N = null;\n    }\n    d3_geom_voronoiRedBlackTree.prototype = {\n        insert: function(after, node) {\n            var parent, grandpa, uncle;\n            if (after) {\n                node.P = after;\n                node.N = after.N;\n                if (after.N) after.N.P = node;\n                after.N = node;\n                if (after.R) {\n                    after = after.R;\n                    while (after.L) after = after.L;\n                    after.L = node;\n                } else {\n                    after.R = node;\n                }\n                parent = after;\n            } else if (this._) {\n                after = d3_geom_voronoiRedBlackFirst(this._);\n                node.P = null;\n                node.N = after;\n                after.P = after.L = node;\n                parent = after;\n            } else {\n                node.P = node.N = null;\n                this._ = node;\n                parent = null;\n            }\n            node.L = node.R = null;\n            node.U = parent;\n            node.C = true;\n            after = node;\n            while (parent && parent.C) {\n                grandpa = parent.U;\n                if (parent === grandpa.L) {\n                    uncle = grandpa.R;\n                    if (uncle && uncle.C) {\n                        parent.C = uncle.C = false;\n                        grandpa.C = true;\n                        after = grandpa;\n                    } else {\n                        if (after === parent.R) {\n                            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                            after = parent;\n                            parent = after.U;\n                        }\n                        parent.C = false;\n                        grandpa.C = true;\n                        d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n                    }\n                } else {\n                    uncle = grandpa.L;\n                    if (uncle && uncle.C) {\n                        parent.C = uncle.C = false;\n                        grandpa.C = true;\n                        after = grandpa;\n                    } else {\n                        if (after === parent.L) {\n                            d3_geom_voronoiRedBlackRotateRight(this, parent);\n                            after = parent;\n                            parent = after.U;\n                        }\n                        parent.C = false;\n                        grandpa.C = true;\n                        d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n                    }\n                }\n                parent = after.U;\n            }\n            this._.C = false;\n        },\n        remove: function(node) {\n            if (node.N) node.N.P = node.P;\n            if (node.P) node.P.N = node.N;\n            node.N = node.P = null;\n            var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n            if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n            if (parent) {\n                if (parent.L === node) parent.L = next; else parent.R = next;\n            } else {\n                this._ = next;\n            }\n            if (left && right) {\n                red = next.C;\n                next.C = node.C;\n                next.L = left;\n                left.U = next;\n                if (next !== right) {\n                    parent = next.U;\n                    next.U = node.U;\n                    node = next.R;\n                    parent.L = node;\n                    next.R = right;\n                    right.U = next;\n                } else {\n                    next.U = parent;\n                    parent = next;\n                    node = next.R;\n                }\n            } else {\n                red = node.C;\n                node = next;\n            }\n            if (node) node.U = parent;\n            if (red) return;\n            if (node && node.C) {\n                node.C = false;\n                return;\n            }\n            do {\n                if (node === this._) break;\n                if (node === parent.L) {\n                    sibling = parent.R;\n                    if (sibling.C) {\n                        sibling.C = false;\n                        parent.C = true;\n                        d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                        sibling = parent.R;\n                    }\n                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n                        if (!sibling.R || !sibling.R.C) {\n                            sibling.L.C = false;\n                            sibling.C = true;\n                            d3_geom_voronoiRedBlackRotateRight(this, sibling);\n                            sibling = parent.R;\n                        }\n                        sibling.C = parent.C;\n                        parent.C = sibling.R.C = false;\n                        d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                        node = this._;\n                        break;\n                    }\n                } else {\n                    sibling = parent.L;\n                    if (sibling.C) {\n                        sibling.C = false;\n                        parent.C = true;\n                        d3_geom_voronoiRedBlackRotateRight(this, parent);\n                        sibling = parent.L;\n                    }\n                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n                        if (!sibling.L || !sibling.L.C) {\n                            sibling.R.C = false;\n                            sibling.C = true;\n                            d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n                            sibling = parent.L;\n                        }\n                        sibling.C = parent.C;\n                        parent.C = sibling.L.C = false;\n                        d3_geom_voronoiRedBlackRotateRight(this, parent);\n                        node = this._;\n                        break;\n                    }\n                }\n                sibling.C = true;\n                node = parent;\n                parent = parent.U;\n            } while (!node.C);\n            if (node) node.C = false;\n        }\n    };\n    function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n        var p = node, q = node.R, parent = p.U;\n        if (parent) {\n            if (parent.L === p) parent.L = q; else parent.R = q;\n        } else {\n            tree._ = q;\n        }\n        q.U = parent;\n        p.U = q;\n        p.R = q.L;\n        if (p.R) p.R.U = p;\n        q.L = p;\n    }\n    function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n        var p = node, q = node.L, parent = p.U;\n        if (parent) {\n            if (parent.L === p) parent.L = q; else parent.R = q;\n        } else {\n            tree._ = q;\n        }\n        q.U = parent;\n        p.U = q;\n        p.L = q.R;\n        if (p.L) p.L.U = p;\n        q.R = p;\n    }\n    function d3_geom_voronoiRedBlackFirst(node) {\n        while (node.L) node = node.L;\n        return node;\n    }\n    function d3_geom_voronoi(sites, bbox) {\n        var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n        d3_geom_voronoiEdges = [];\n        d3_geom_voronoiCells = new Array(sites.length);\n        d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n        d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n        while (true) {\n            circle = d3_geom_voronoiFirstCircle;\n            if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n                if (site.x !== x0 || site.y !== y0) {\n                    d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n                    d3_geom_voronoiAddBeach(site);\n                    x0 = site.x, y0 = site.y;\n                }\n                site = sites.pop();\n            } else if (circle) {\n                d3_geom_voronoiRemoveBeach(circle.arc);\n            } else {\n                break;\n            }\n        }\n        if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n        var diagram = {\n            cells: d3_geom_voronoiCells,\n            edges: d3_geom_voronoiEdges\n        };\n        d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n        return diagram;\n    }\n    function d3_geom_voronoiVertexOrder(a, b) {\n        return b.y - a.y || b.x - a.x;\n    }\n    d3.geom.voronoi = function(points) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n        if (points) return voronoi(points);\n        function voronoi(data) {\n            var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n            d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n                var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n                    var s = e.start();\n                    return [ s.x, s.y ];\n                }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n                polygon.point = data[i];\n            });\n            return polygons;\n        }\n        function sites(data) {\n            return data.map(function(d, i) {\n                return {\n                    x: Math.round(fx(d, i) / ε) * ε,\n                    y: Math.round(fy(d, i) / ε) * ε,\n                    i: i\n                };\n            });\n        }\n        voronoi.links = function(data) {\n            return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n                return edge.l && edge.r;\n            }).map(function(edge) {\n                    return {\n                        source: data[edge.l.i],\n                        target: data[edge.r.i]\n                    };\n                });\n        };\n        voronoi.triangles = function(data) {\n            var triangles = [];\n            d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n                var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n                while (++j < m) {\n                    e0 = e1;\n                    s0 = s1;\n                    e1 = edges[j].edge;\n                    s1 = e1.l === site ? e1.r : e1.l;\n                    if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n                        triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n                    }\n                }\n            });\n            return triangles;\n        };\n        voronoi.x = function(_) {\n            return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n        };\n        voronoi.y = function(_) {\n            return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n        };\n        voronoi.clipExtent = function(_) {\n            if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n            clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n            return voronoi;\n        };\n        voronoi.size = function(_) {\n            if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n            return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n        };\n        return voronoi;\n    };\n    var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n    function d3_geom_voronoiTriangleArea(a, b, c) {\n        return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n    }\n    d3.geom.delaunay = function(vertices) {\n        return d3.geom.voronoi().triangles(vertices);\n    };\n    d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n        if (compat = arguments.length) {\n            x = d3_geom_quadtreeCompatX;\n            y = d3_geom_quadtreeCompatY;\n            if (compat === 3) {\n                y2 = y1;\n                x2 = x1;\n                y1 = x1 = 0;\n            }\n            return quadtree(points);\n        }\n        function quadtree(data) {\n            var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n            if (x1 != null) {\n                x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n            } else {\n                x2_ = y2_ = -(x1_ = y1_ = Infinity);\n                xs = [], ys = [];\n                n = data.length;\n                if (compat) for (i = 0; i < n; ++i) {\n                    d = data[i];\n                    if (d.x < x1_) x1_ = d.x;\n                    if (d.y < y1_) y1_ = d.y;\n                    if (d.x > x2_) x2_ = d.x;\n                    if (d.y > y2_) y2_ = d.y;\n                    xs.push(d.x);\n                    ys.push(d.y);\n                } else for (i = 0; i < n; ++i) {\n                    var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n                    if (x_ < x1_) x1_ = x_;\n                    if (y_ < y1_) y1_ = y_;\n                    if (x_ > x2_) x2_ = x_;\n                    if (y_ > y2_) y2_ = y_;\n                    xs.push(x_);\n                    ys.push(y_);\n                }\n            }\n            var dx = x2_ - x1_, dy = y2_ - y1_;\n            if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n            function insert(n, d, x, y, x1, y1, x2, y2) {\n                if (isNaN(x) || isNaN(y)) return;\n                if (n.leaf) {\n                    var nx = n.x, ny = n.y;\n                    if (nx != null) {\n                        if (abs(nx - x) + abs(ny - y) < .01) {\n                            insertChild(n, d, x, y, x1, y1, x2, y2);\n                        } else {\n                            var nPoint = n.point;\n                            n.x = n.y = n.point = null;\n                            insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                            insertChild(n, d, x, y, x1, y1, x2, y2);\n                        }\n                    } else {\n                        n.x = x, n.y = y, n.point = d;\n                    }\n                } else {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            }\n            function insertChild(n, d, x, y, x1, y1, x2, y2) {\n                var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n                n.leaf = false;\n                n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n                if (right) x1 = sx; else x2 = sx;\n                if (bottom) y1 = sy; else y2 = sy;\n                insert(n, d, x, y, x1, y1, x2, y2);\n            }\n            var root = d3_geom_quadtreeNode();\n            root.add = function(d) {\n                insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n            };\n            root.visit = function(f) {\n                d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n            };\n            i = -1;\n            if (x1 == null) {\n                while (++i < n) {\n                    insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n                }\n                --i;\n            } else data.forEach(root.add);\n            xs = ys = data = d = null;\n            return root;\n        }\n        quadtree.x = function(_) {\n            return arguments.length ? (x = _, quadtree) : x;\n        };\n        quadtree.y = function(_) {\n            return arguments.length ? (y = _, quadtree) : y;\n        };\n        quadtree.extent = function(_) {\n            if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n            if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0],\n                y2 = +_[1][1];\n            return quadtree;\n        };\n        quadtree.size = function(_) {\n            if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n            if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n            return quadtree;\n        };\n        return quadtree;\n    };\n    function d3_geom_quadtreeCompatX(d) {\n        return d.x;\n    }\n    function d3_geom_quadtreeCompatY(d) {\n        return d.y;\n    }\n    function d3_geom_quadtreeNode() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n    function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n            if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n    d3.interpolateRgb = d3_interpolateRgb;\n    function d3_interpolateRgb(a, b) {\n        a = d3.rgb(a);\n        b = d3.rgb(b);\n        var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n        return function(t) {\n            return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n        };\n    }\n    d3.interpolateObject = d3_interpolateObject;\n    function d3_interpolateObject(a, b) {\n        var i = {}, c = {}, k;\n        for (k in a) {\n            if (k in b) {\n                i[k] = d3_interpolate(a[k], b[k]);\n            } else {\n                c[k] = a[k];\n            }\n        }\n        for (k in b) {\n            if (!(k in a)) {\n                c[k] = b[k];\n            }\n        }\n        return function(t) {\n            for (k in i) c[k] = i[k](t);\n            return c;\n        };\n    }\n    d3.interpolateNumber = d3_interpolateNumber;\n    function d3_interpolateNumber(a, b) {\n        b -= a = +a;\n        return function(t) {\n            return a + b * t;\n        };\n    }\n    d3.interpolateString = d3_interpolateString;\n    function d3_interpolateString(a, b) {\n        var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n        a = a + \"\", b = b + \"\";\n        d3_interpolate_number.lastIndex = 0;\n        for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n            if (m.index) s.push(b.substring(s0, s1 = m.index));\n            q.push({\n                i: s.length,\n                x: m[0]\n            });\n            s.push(null);\n            s0 = d3_interpolate_number.lastIndex;\n        }\n        if (s0 < b.length) s.push(b.substring(s0));\n        for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n            o = q[i];\n            if (o.x == m[0]) {\n                if (o.i) {\n                    if (s[o.i + 1] == null) {\n                        s[o.i - 1] += o.x;\n                        s.splice(o.i, 1);\n                        for (j = i + 1; j < n; ++j) q[j].i--;\n                    } else {\n                        s[o.i - 1] += o.x + s[o.i + 1];\n                        s.splice(o.i, 2);\n                        for (j = i + 1; j < n; ++j) q[j].i -= 2;\n                    }\n                } else {\n                    if (s[o.i + 1] == null) {\n                        s[o.i] = o.x;\n                    } else {\n                        s[o.i] = o.x + s[o.i + 1];\n                        s.splice(o.i + 1, 1);\n                        for (j = i + 1; j < n; ++j) q[j].i--;\n                    }\n                }\n                q.splice(i, 1);\n                n--;\n                i--;\n            } else {\n                o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n            }\n        }\n        while (i < n) {\n            o = q.pop();\n            if (s[o.i + 1] == null) {\n                s[o.i] = o.x;\n            } else {\n                s[o.i] = o.x + s[o.i + 1];\n                s.splice(o.i + 1, 1);\n            }\n            n--;\n        }\n        if (s.length === 1) {\n            return s[0] == null ? (o = q[0].x, function(t) {\n                return o(t) + \"\";\n            }) : function() {\n                return b;\n            };\n        }\n        return function(t) {\n            for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n        };\n    }\n    var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n    d3.interpolate = d3_interpolate;\n    function d3_interpolate(a, b) {\n        var i = d3.interpolators.length, f;\n        while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n        return f;\n    }\n    d3.interpolators = [ function(a, b) {\n        var t = typeof b;\n        return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n    } ];\n    d3.interpolateArray = d3_interpolateArray;\n    function d3_interpolateArray(a, b) {\n        var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n        for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n        for (;i < na; ++i) c[i] = a[i];\n        for (;i < nb; ++i) c[i] = b[i];\n        return function(t) {\n            for (i = 0; i < n0; ++i) c[i] = x[i](t);\n            return c;\n        };\n    }\n    var d3_ease_default = function() {\n        return d3_identity;\n    };\n    var d3_ease = d3.map({\n        linear: d3_ease_default,\n        poly: d3_ease_poly,\n        quad: function() {\n            return d3_ease_quad;\n        },\n        cubic: function() {\n            return d3_ease_cubic;\n        },\n        sin: function() {\n            return d3_ease_sin;\n        },\n        exp: function() {\n            return d3_ease_exp;\n        },\n        circle: function() {\n            return d3_ease_circle;\n        },\n        elastic: d3_ease_elastic,\n        back: d3_ease_back,\n        bounce: function() {\n            return d3_ease_bounce;\n        }\n    });\n    var d3_ease_mode = d3.map({\n        \"in\": d3_identity,\n        out: d3_ease_reverse,\n        \"in-out\": d3_ease_reflect,\n        \"out-in\": function(f) {\n            return d3_ease_reflect(d3_ease_reverse(f));\n        }\n    });\n    d3.ease = function(name) {\n        var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n        t = d3_ease.get(t) || d3_ease_default;\n        m = d3_ease_mode.get(m) || d3_identity;\n        return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n    };\n    function d3_ease_clamp(f) {\n        return function(t) {\n            return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n        };\n    }\n    function d3_ease_reverse(f) {\n        return function(t) {\n            return 1 - f(1 - t);\n        };\n    }\n    function d3_ease_reflect(f) {\n        return function(t) {\n            return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n        };\n    }\n    function d3_ease_quad(t) {\n        return t * t;\n    }\n    function d3_ease_cubic(t) {\n        return t * t * t;\n    }\n    function d3_ease_cubicInOut(t) {\n        if (t <= 0) return 0;\n        if (t >= 1) return 1;\n        var t2 = t * t, t3 = t2 * t;\n        return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n    }\n    function d3_ease_poly(e) {\n        return function(t) {\n            return Math.pow(t, e);\n        };\n    }\n    function d3_ease_sin(t) {\n        return 1 - Math.cos(t * halfπ);\n    }\n    function d3_ease_exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n    }\n    function d3_ease_circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n    }\n    function d3_ease_elastic(a, p) {\n        var s;\n        if (arguments.length < 2) p = .45;\n        if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n        return function(t) {\n            return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n        };\n    }\n    function d3_ease_back(s) {\n        if (!s) s = 1.70158;\n        return function(t) {\n            return t * t * ((s + 1) * t - s);\n        };\n    }\n    function d3_ease_bounce(t) {\n        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n    }\n    d3.interpolateHcl = d3_interpolateHcl;\n    function d3_interpolateHcl(a, b) {\n        a = d3.hcl(a);\n        b = d3.hcl(b);\n        var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n        if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n        return function(t) {\n            return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n        };\n    }\n    d3.interpolateHsl = d3_interpolateHsl;\n    function d3_interpolateHsl(a, b) {\n        a = d3.hsl(a);\n        b = d3.hsl(b);\n        var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n        if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n        return function(t) {\n            return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n        };\n    }\n    d3.interpolateLab = d3_interpolateLab;\n    function d3_interpolateLab(a, b) {\n        a = d3.lab(a);\n        b = d3.lab(b);\n        var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n        return function(t) {\n            return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n        };\n    }\n    d3.interpolateRound = d3_interpolateRound;\n    function d3_interpolateRound(a, b) {\n        b -= a;\n        return function(t) {\n            return Math.round(a + b * t);\n        };\n    }\n    d3.transform = function(string) {\n        var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n        return (d3.transform = function(string) {\n            if (string != null) {\n                g.setAttribute(\"transform\", string);\n                var t = g.transform.baseVal.consolidate();\n            }\n            return new d3_transform(t ? t.matrix : d3_transformIdentity);\n        })(string);\n    };\n    function d3_transform(m) {\n        var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n        if (r0[0] * r1[1] < r1[0] * r0[1]) {\n            r0[0] *= -1;\n            r0[1] *= -1;\n            kx *= -1;\n            kz *= -1;\n        }\n        this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n        this.translate = [ m.e, m.f ];\n        this.scale = [ kx, ky ];\n        this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n    }\n    d3_transform.prototype.toString = function() {\n        return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n    };\n    function d3_transformDot(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n    function d3_transformNormalize(a) {\n        var k = Math.sqrt(d3_transformDot(a, a));\n        if (k) {\n            a[0] /= k;\n            a[1] /= k;\n        }\n        return k;\n    }\n    function d3_transformCombine(a, b, k) {\n        a[0] += k * b[0];\n        a[1] += k * b[1];\n        return a;\n    }\n    var d3_transformIdentity = {\n        a: 1,\n        b: 0,\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0\n    };\n    d3.interpolateTransform = d3_interpolateTransform;\n    function d3_interpolateTransform(a, b) {\n        var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n        if (ta[0] != tb[0] || ta[1] != tb[1]) {\n            s.push(\"translate(\", null, \",\", null, \")\");\n            q.push({\n                i: 1,\n                x: d3_interpolateNumber(ta[0], tb[0])\n            }, {\n                i: 3,\n                x: d3_interpolateNumber(ta[1], tb[1])\n            });\n        } else if (tb[0] || tb[1]) {\n            s.push(\"translate(\" + tb + \")\");\n        } else {\n            s.push(\"\");\n        }\n        if (ra != rb) {\n            if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n            q.push({\n                i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n                x: d3_interpolateNumber(ra, rb)\n            });\n        } else if (rb) {\n            s.push(s.pop() + \"rotate(\" + rb + \")\");\n        }\n        if (wa != wb) {\n            q.push({\n                i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n                x: d3_interpolateNumber(wa, wb)\n            });\n        } else if (wb) {\n            s.push(s.pop() + \"skewX(\" + wb + \")\");\n        }\n        if (ka[0] != kb[0] || ka[1] != kb[1]) {\n            n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n            q.push({\n                i: n - 4,\n                x: d3_interpolateNumber(ka[0], kb[0])\n            }, {\n                i: n - 2,\n                x: d3_interpolateNumber(ka[1], kb[1])\n            });\n        } else if (kb[0] != 1 || kb[1] != 1) {\n            s.push(s.pop() + \"scale(\" + kb + \")\");\n        }\n        n = q.length;\n        return function(t) {\n            var i = -1, o;\n            while (++i < n) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n        };\n    }\n    function d3_uninterpolateNumber(a, b) {\n        b = b - (a = +a) ? 1 / (b - a) : 0;\n        return function(x) {\n            return (x - a) * b;\n        };\n    }\n    function d3_uninterpolateClamp(a, b) {\n        b = b - (a = +a) ? 1 / (b - a) : 0;\n        return function(x) {\n            return Math.max(0, Math.min(1, (x - a) * b));\n        };\n    }\n    d3.layout = {};\n    d3.layout.bundle = function() {\n        return function(links) {\n            var paths = [], i = -1, n = links.length;\n            while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n            return paths;\n        };\n    };\n    function d3_layout_bundlePath(link) {\n        var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n        while (start !== lca) {\n            start = start.parent;\n            points.push(start);\n        }\n        var k = points.length;\n        while (end !== lca) {\n            points.splice(k, 0, end);\n            end = end.parent;\n        }\n        return points;\n    }\n    function d3_layout_bundleAncestors(node) {\n        var ancestors = [], parent = node.parent;\n        while (parent != null) {\n            ancestors.push(node);\n            node = parent;\n            parent = parent.parent;\n        }\n        ancestors.push(node);\n        return ancestors;\n    }\n    function d3_layout_bundleLeastCommonAncestor(a, b) {\n        if (a === b) return a;\n        var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n        while (aNode === bNode) {\n            sharedNode = aNode;\n            aNode = aNodes.pop();\n            bNode = bNodes.pop();\n        }\n        return sharedNode;\n    }\n    d3.layout.chord = function() {\n        var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n        function relayout() {\n            var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n            chords = [];\n            groups = [];\n            k = 0, i = -1;\n            while (++i < n) {\n                x = 0, j = -1;\n                while (++j < n) {\n                    x += matrix[i][j];\n                }\n                groupSums.push(x);\n                subgroupIndex.push(d3.range(n));\n                k += x;\n            }\n            if (sortGroups) {\n                groupIndex.sort(function(a, b) {\n                    return sortGroups(groupSums[a], groupSums[b]);\n                });\n            }\n            if (sortSubgroups) {\n                subgroupIndex.forEach(function(d, i) {\n                    d.sort(function(a, b) {\n                        return sortSubgroups(matrix[i][a], matrix[i][b]);\n                    });\n                });\n            }\n            k = (τ - padding * n) / k;\n            x = 0, i = -1;\n            while (++i < n) {\n                x0 = x, j = -1;\n                while (++j < n) {\n                    var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n                    subgroups[di + \"-\" + dj] = {\n                        index: di,\n                        subindex: dj,\n                        startAngle: a0,\n                        endAngle: a1,\n                        value: v\n                    };\n                }\n                groups[di] = {\n                    index: di,\n                    startAngle: x0,\n                    endAngle: x,\n                    value: (x - x0) / k\n                };\n                x += padding;\n            }\n            i = -1;\n            while (++i < n) {\n                j = i - 1;\n                while (++j < n) {\n                    var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n                    if (source.value || target.value) {\n                        chords.push(source.value < target.value ? {\n                            source: target,\n                            target: source\n                        } : {\n                            source: source,\n                            target: target\n                        });\n                    }\n                }\n            }\n            if (sortChords) resort();\n        }\n        function resort() {\n            chords.sort(function(a, b) {\n                return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n            });\n        }\n        chord.matrix = function(x) {\n            if (!arguments.length) return matrix;\n            n = (matrix = x) && matrix.length;\n            chords = groups = null;\n            return chord;\n        };\n        chord.padding = function(x) {\n            if (!arguments.length) return padding;\n            padding = x;\n            chords = groups = null;\n            return chord;\n        };\n        chord.sortGroups = function(x) {\n            if (!arguments.length) return sortGroups;\n            sortGroups = x;\n            chords = groups = null;\n            return chord;\n        };\n        chord.sortSubgroups = function(x) {\n            if (!arguments.length) return sortSubgroups;\n            sortSubgroups = x;\n            chords = null;\n            return chord;\n        };\n        chord.sortChords = function(x) {\n            if (!arguments.length) return sortChords;\n            sortChords = x;\n            if (chords) resort();\n            return chord;\n        };\n        chord.chords = function() {\n            if (!chords) relayout();\n            return chords;\n        };\n        chord.groups = function() {\n            if (!groups) relayout();\n            return groups;\n        };\n        return chord;\n    };\n    d3.layout.force = function() {\n        var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n        function repulse(node) {\n            return function(quad, x1, _, x2) {\n                if (quad.point !== node) {\n                    var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n                    if (dw * dw / theta2 < dn) {\n                        if (dn < chargeDistance2) {\n                            var k = quad.charge / dn;\n                            node.px -= dx * k;\n                            node.py -= dy * k;\n                        }\n                        return true;\n                    }\n                    if (quad.point && dn && dn < chargeDistance2) {\n                        var k = quad.pointCharge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                }\n                return !quad.charge;\n            };\n        }\n        force.tick = function() {\n            if ((alpha *= .99) < .005) {\n                event.end({\n                    type: \"end\",\n                    alpha: alpha = 0\n                });\n                return true;\n            }\n            var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n            for (i = 0; i < m; ++i) {\n                o = links[i];\n                s = o.source;\n                t = o.target;\n                x = t.x - s.x;\n                y = t.y - s.y;\n                if (l = x * x + y * y) {\n                    l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                    x *= l;\n                    y *= l;\n                    t.x -= x * (k = s.weight / (t.weight + s.weight));\n                    t.y -= y * k;\n                    s.x += x * (k = 1 - k);\n                    s.y += y * k;\n                }\n            }\n            if (k = alpha * gravity) {\n                x = size[0] / 2;\n                y = size[1] / 2;\n                i = -1;\n                if (k) while (++i < n) {\n                    o = nodes[i];\n                    o.x += (x - o.x) * k;\n                    o.y += (y - o.y) * k;\n                }\n            }\n            if (charge) {\n                d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n                i = -1;\n                while (++i < n) {\n                    if (!(o = nodes[i]).fixed) {\n                        q.visit(repulse(o));\n                    }\n                }\n            }\n            i = -1;\n            while (++i < n) {\n                o = nodes[i];\n                if (o.fixed) {\n                    o.x = o.px;\n                    o.y = o.py;\n                } else {\n                    o.x -= (o.px - (o.px = o.x)) * friction;\n                    o.y -= (o.py - (o.py = o.y)) * friction;\n                }\n            }\n            event.tick({\n                type: \"tick\",\n                alpha: alpha\n            });\n        };\n        force.nodes = function(x) {\n            if (!arguments.length) return nodes;\n            nodes = x;\n            return force;\n        };\n        force.links = function(x) {\n            if (!arguments.length) return links;\n            links = x;\n            return force;\n        };\n        force.size = function(x) {\n            if (!arguments.length) return size;\n            size = x;\n            return force;\n        };\n        force.linkDistance = function(x) {\n            if (!arguments.length) return linkDistance;\n            linkDistance = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.distance = force.linkDistance;\n        force.linkStrength = function(x) {\n            if (!arguments.length) return linkStrength;\n            linkStrength = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.friction = function(x) {\n            if (!arguments.length) return friction;\n            friction = +x;\n            return force;\n        };\n        force.charge = function(x) {\n            if (!arguments.length) return charge;\n            charge = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.chargeDistance = function(x) {\n            if (!arguments.length) return Math.sqrt(chargeDistance2);\n            chargeDistance2 = x * x;\n            return force;\n        };\n        force.gravity = function(x) {\n            if (!arguments.length) return gravity;\n            gravity = +x;\n            return force;\n        };\n        force.theta = function(x) {\n            if (!arguments.length) return Math.sqrt(theta2);\n            theta2 = x * x;\n            return force;\n        };\n        force.alpha = function(x) {\n            if (!arguments.length) return alpha;\n            x = +x;\n            if (alpha) {\n                if (x > 0) alpha = x; else alpha = 0;\n            } else if (x > 0) {\n                event.start({\n                    type: \"start\",\n                    alpha: alpha = x\n                });\n                d3.timer(force.tick);\n            }\n            return force;\n        };\n        force.start = function() {\n            var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n            for (i = 0; i < n; ++i) {\n                (o = nodes[i]).index = i;\n                o.weight = 0;\n            }\n            for (i = 0; i < m; ++i) {\n                o = links[i];\n                if (typeof o.source == \"number\") o.source = nodes[o.source];\n                if (typeof o.target == \"number\") o.target = nodes[o.target];\n                ++o.source.weight;\n                ++o.target.weight;\n            }\n            for (i = 0; i < n; ++i) {\n                o = nodes[i];\n                if (isNaN(o.x)) o.x = position(\"x\", w);\n                if (isNaN(o.y)) o.y = position(\"y\", h);\n                if (isNaN(o.px)) o.px = o.x;\n                if (isNaN(o.py)) o.py = o.y;\n            }\n            distances = [];\n            if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n            strengths = [];\n            if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n            charges = [];\n            if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n            function position(dimension, size) {\n                if (!neighbors) {\n                    neighbors = new Array(n);\n                    for (j = 0; j < n; ++j) {\n                        neighbors[j] = [];\n                    }\n                    for (j = 0; j < m; ++j) {\n                        var o = links[j];\n                        neighbors[o.source.index].push(o.target);\n                        neighbors[o.target.index].push(o.source);\n                    }\n                }\n                var candidates = neighbors[i], j = -1, m = candidates.length, x;\n                while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n                return Math.random() * size;\n            }\n            return force.resume();\n        };\n        force.resume = function() {\n            return force.alpha(.1);\n        };\n        force.stop = function() {\n            return force.alpha(0);\n        };\n        force.drag = function() {\n            if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n            if (!arguments.length) return drag;\n            this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n        };\n        function dragmove(d) {\n            d.px = d3.event.x, d.py = d3.event.y;\n            force.resume();\n        }\n        return d3.rebind(force, event, \"on\");\n    };\n    function d3_layout_forceDragstart(d) {\n        d.fixed |= 2;\n    }\n    function d3_layout_forceDragend(d) {\n        d.fixed &= ~6;\n    }\n    function d3_layout_forceMouseover(d) {\n        d.fixed |= 4;\n        d.px = d.x, d.py = d.y;\n    }\n    function d3_layout_forceMouseout(d) {\n        d.fixed &= ~4;\n    }\n    function d3_layout_forceAccumulate(quad, alpha, charges) {\n        var cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            var nodes = quad.nodes, n = nodes.length, i = -1, c;\n            while (++i < n) {\n                c = nodes[i];\n                if (c == null) continue;\n                d3_layout_forceAccumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - .5;\n                quad.point.y += Math.random() - .5;\n            }\n            var k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n    var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n    d3.layout.hierarchy = function() {\n        var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n        function recurse(node, depth, nodes) {\n            var childs = children.call(hierarchy, node, depth);\n            node.depth = depth;\n            nodes.push(node);\n            if (childs && (n = childs.length)) {\n                var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n                while (++i < n) {\n                    d = c[i] = recurse(childs[i], j, nodes);\n                    d.parent = node;\n                    v += d.value;\n                }\n                if (sort) c.sort(sort);\n                if (value) node.value = v;\n            } else {\n                delete node.children;\n                if (value) {\n                    node.value = +value.call(hierarchy, node, depth) || 0;\n                }\n            }\n            return node;\n        }\n        function revalue(node, depth) {\n            var children = node.children, v = 0;\n            if (children && (n = children.length)) {\n                var i = -1, n, j = depth + 1;\n                while (++i < n) v += revalue(children[i], j);\n            } else if (value) {\n                v = +value.call(hierarchy, node, depth) || 0;\n            }\n            if (value) node.value = v;\n            return v;\n        }\n        function hierarchy(d) {\n            var nodes = [];\n            recurse(d, 0, nodes);\n            return nodes;\n        }\n        hierarchy.sort = function(x) {\n            if (!arguments.length) return sort;\n            sort = x;\n            return hierarchy;\n        };\n        hierarchy.children = function(x) {\n            if (!arguments.length) return children;\n            children = x;\n            return hierarchy;\n        };\n        hierarchy.value = function(x) {\n            if (!arguments.length) return value;\n            value = x;\n            return hierarchy;\n        };\n        hierarchy.revalue = function(root) {\n            revalue(root, 0);\n            return root;\n        };\n        return hierarchy;\n    };\n    function d3_layout_hierarchyRebind(object, hierarchy) {\n        d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n        object.nodes = object;\n        object.links = d3_layout_hierarchyLinks;\n        return object;\n    }\n    function d3_layout_hierarchyChildren(d) {\n        return d.children;\n    }\n    function d3_layout_hierarchyValue(d) {\n        return d.value;\n    }\n    function d3_layout_hierarchySort(a, b) {\n        return b.value - a.value;\n    }\n    function d3_layout_hierarchyLinks(nodes) {\n        return d3.merge(nodes.map(function(parent) {\n            return (parent.children || []).map(function(child) {\n                return {\n                    source: parent,\n                    target: child\n                };\n            });\n        }));\n    }\n    d3.layout.partition = function() {\n        var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n        function position(node, x, dx, dy) {\n            var children = node.children;\n            node.x = x;\n            node.y = node.depth * dy;\n            node.dx = dx;\n            node.dy = dy;\n            if (children && (n = children.length)) {\n                var i = -1, n, c, d;\n                dx = node.value ? dx / node.value : 0;\n                while (++i < n) {\n                    position(c = children[i], x, d = c.value * dx, dy);\n                    x += d;\n                }\n            }\n        }\n        function depth(node) {\n            var children = node.children, d = 0;\n            if (children && (n = children.length)) {\n                var i = -1, n;\n                while (++i < n) d = Math.max(d, depth(children[i]));\n            }\n            return 1 + d;\n        }\n        function partition(d, i) {\n            var nodes = hierarchy.call(this, d, i);\n            position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n            return nodes;\n        }\n        partition.size = function(x) {\n            if (!arguments.length) return size;\n            size = x;\n            return partition;\n        };\n        return d3_layout_hierarchyRebind(partition, hierarchy);\n    };\n    d3.layout.pie = function() {\n        var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n        function pie(data) {\n            var values = data.map(function(d, i) {\n                return +value.call(pie, d, i);\n            });\n            var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n            var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n            var index = d3.range(data.length);\n            if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n                return values[j] - values[i];\n            } : function(i, j) {\n                return sort(data[i], data[j]);\n            });\n            var arcs = [];\n            index.forEach(function(i) {\n                var d;\n                arcs[i] = {\n                    data: data[i],\n                    value: d = values[i],\n                    startAngle: a,\n                    endAngle: a += d * k\n                };\n            });\n            return arcs;\n        }\n        pie.value = function(x) {\n            if (!arguments.length) return value;\n            value = x;\n            return pie;\n        };\n        pie.sort = function(x) {\n            if (!arguments.length) return sort;\n            sort = x;\n            return pie;\n        };\n        pie.startAngle = function(x) {\n            if (!arguments.length) return startAngle;\n            startAngle = x;\n            return pie;\n        };\n        pie.endAngle = function(x) {\n            if (!arguments.length) return endAngle;\n            endAngle = x;\n            return pie;\n        };\n        return pie;\n    };\n    var d3_layout_pieSortByValue = {};\n    d3.layout.stack = function() {\n        var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n        function stack(data, index) {\n            var series = data.map(function(d, i) {\n                return values.call(stack, d, i);\n            });\n            var points = series.map(function(d) {\n                return d.map(function(v, i) {\n                    return [ x.call(stack, v, i), y.call(stack, v, i) ];\n                });\n            });\n            var orders = order.call(stack, points, index);\n            series = d3.permute(series, orders);\n            points = d3.permute(points, orders);\n            var offsets = offset.call(stack, points, index);\n            var n = series.length, m = series[0].length, i, j, o;\n            for (j = 0; j < m; ++j) {\n                out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n                for (i = 1; i < n; ++i) {\n                    out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n                }\n            }\n            return data;\n        }\n        stack.values = function(x) {\n            if (!arguments.length) return values;\n            values = x;\n            return stack;\n        };\n        stack.order = function(x) {\n            if (!arguments.length) return order;\n            order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n            return stack;\n        };\n        stack.offset = function(x) {\n            if (!arguments.length) return offset;\n            offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n            return stack;\n        };\n        stack.x = function(z) {\n            if (!arguments.length) return x;\n            x = z;\n            return stack;\n        };\n        stack.y = function(z) {\n            if (!arguments.length) return y;\n            y = z;\n            return stack;\n        };\n        stack.out = function(z) {\n            if (!arguments.length) return out;\n            out = z;\n            return stack;\n        };\n        return stack;\n    };\n    function d3_layout_stackX(d) {\n        return d.x;\n    }\n    function d3_layout_stackY(d) {\n        return d.y;\n    }\n    function d3_layout_stackOut(d, y0, y) {\n        d.y0 = y0;\n        d.y = y;\n    }\n    var d3_layout_stackOrders = d3.map({\n        \"inside-out\": function(data) {\n            var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n                return max[a] - max[b];\n            }), top = 0, bottom = 0, tops = [], bottoms = [];\n            for (i = 0; i < n; ++i) {\n                j = index[i];\n                if (top < bottom) {\n                    top += sums[j];\n                    tops.push(j);\n                } else {\n                    bottom += sums[j];\n                    bottoms.push(j);\n                }\n            }\n            return bottoms.reverse().concat(tops);\n        },\n        reverse: function(data) {\n            return d3.range(data.length).reverse();\n        },\n        \"default\": d3_layout_stackOrderDefault\n    });\n    var d3_layout_stackOffsets = d3.map({\n        silhouette: function(data) {\n            var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n            for (j = 0; j < m; ++j) {\n                for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n                if (o > max) max = o;\n                sums.push(o);\n            }\n            for (j = 0; j < m; ++j) {\n                y0[j] = (max - sums[j]) / 2;\n            }\n            return y0;\n        },\n        wiggle: function(data) {\n            var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n            y0[0] = o = o0 = 0;\n            for (j = 1; j < m; ++j) {\n                for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n                for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n                    for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n                        s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n                    }\n                    s2 += s3 * data[i][j][1];\n                }\n                y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n                if (o < o0) o0 = o;\n            }\n            for (j = 0; j < m; ++j) y0[j] -= o0;\n            return y0;\n        },\n        expand: function(data) {\n            var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n            for (j = 0; j < m; ++j) {\n                for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n                if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n            }\n            for (j = 0; j < m; ++j) y0[j] = 0;\n            return y0;\n        },\n        zero: d3_layout_stackOffsetZero\n    });\n    function d3_layout_stackOrderDefault(data) {\n        return d3.range(data.length);\n    }\n    function d3_layout_stackOffsetZero(data) {\n        var j = -1, m = data[0].length, y0 = [];\n        while (++j < m) y0[j] = 0;\n        return y0;\n    }\n    function d3_layout_stackMaxIndex(array) {\n        var i = 1, j = 0, v = array[0][1], k, n = array.length;\n        for (;i < n; ++i) {\n            if ((k = array[i][1]) > v) {\n                j = i;\n                v = k;\n            }\n        }\n        return j;\n    }\n    function d3_layout_stackReduceSum(d) {\n        return d.reduce(d3_layout_stackSum, 0);\n    }\n    function d3_layout_stackSum(p, d) {\n        return p + d[1];\n    }\n    d3.layout.histogram = function() {\n        var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n        function histogram(data, i) {\n            var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n            while (++i < m) {\n                bin = bins[i] = [];\n                bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n                bin.y = 0;\n            }\n            if (m > 0) {\n                i = -1;\n                while (++i < n) {\n                    x = values[i];\n                    if (x >= range[0] && x <= range[1]) {\n                        bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n                        bin.y += k;\n                        bin.push(data[i]);\n                    }\n                }\n            }\n            return bins;\n        }\n        histogram.value = function(x) {\n            if (!arguments.length) return valuer;\n            valuer = x;\n            return histogram;\n        };\n        histogram.range = function(x) {\n            if (!arguments.length) return ranger;\n            ranger = d3_functor(x);\n            return histogram;\n        };\n        histogram.bins = function(x) {\n            if (!arguments.length) return binner;\n            binner = typeof x === \"number\" ? function(range) {\n                return d3_layout_histogramBinFixed(range, x);\n            } : d3_functor(x);\n            return histogram;\n        };\n        histogram.frequency = function(x) {\n            if (!arguments.length) return frequency;\n            frequency = !!x;\n            return histogram;\n        };\n        return histogram;\n    };\n    function d3_layout_histogramBinSturges(range, values) {\n        return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n    }\n    function d3_layout_histogramBinFixed(range, n) {\n        var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n        while (++x <= n) f[x] = m * x + b;\n        return f;\n    }\n    function d3_layout_histogramRange(values) {\n        return [ d3.min(values), d3.max(values) ];\n    }\n    d3.layout.tree = function() {\n        var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n        function tree(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0];\n            function firstWalk(node, previousSibling) {\n                var children = node.children, layout = node._tree;\n                if (children && (n = children.length)) {\n                    var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n                    while (++i < n) {\n                        child = children[i];\n                        firstWalk(child, previousChild);\n                        ancestor = apportion(child, previousChild, ancestor);\n                        previousChild = child;\n                    }\n                    d3_layout_treeShift(node);\n                    var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n                    if (previousSibling) {\n                        layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n                        layout.mod = layout.prelim - midpoint;\n                    } else {\n                        layout.prelim = midpoint;\n                    }\n                } else {\n                    if (previousSibling) {\n                        layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n                    }\n                }\n            }\n            function secondWalk(node, x) {\n                node.x = node._tree.prelim + x;\n                var children = node.children;\n                if (children && (n = children.length)) {\n                    var i = -1, n;\n                    x += node._tree.mod;\n                    while (++i < n) {\n                        secondWalk(children[i], x);\n                    }\n                }\n            }\n            function apportion(node, previousSibling, ancestor) {\n                if (previousSibling) {\n                    var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n                    while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n                        vom = d3_layout_treeLeft(vom);\n                        vop = d3_layout_treeRight(vop);\n                        vop._tree.ancestor = node;\n                        shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n                        if (shift > 0) {\n                            d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n                            sip += shift;\n                            sop += shift;\n                        }\n                        sim += vim._tree.mod;\n                        sip += vip._tree.mod;\n                        som += vom._tree.mod;\n                        sop += vop._tree.mod;\n                    }\n                    if (vim && !d3_layout_treeRight(vop)) {\n                        vop._tree.thread = vim;\n                        vop._tree.mod += sim - sop;\n                    }\n                    if (vip && !d3_layout_treeLeft(vom)) {\n                        vom._tree.thread = vip;\n                        vom._tree.mod += sip - som;\n                        ancestor = node;\n                    }\n                }\n                return ancestor;\n            }\n            d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n                node._tree = {\n                    ancestor: node,\n                    prelim: 0,\n                    mod: 0,\n                    change: 0,\n                    shift: 0,\n                    number: previousSibling ? previousSibling._tree.number + 1 : 0\n                };\n            });\n            firstWalk(root);\n            secondWalk(root, -root._tree.prelim);\n            var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n            d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n                node.x *= size[0];\n                node.y = node.depth * size[1];\n                delete node._tree;\n            } : function(node) {\n                node.x = (node.x - x0) / (x1 - x0) * size[0];\n                node.y = node.depth / y1 * size[1];\n                delete node._tree;\n            });\n            return nodes;\n        }\n        tree.separation = function(x) {\n            if (!arguments.length) return separation;\n            separation = x;\n            return tree;\n        };\n        tree.size = function(x) {\n            if (!arguments.length) return nodeSize ? null : size;\n            nodeSize = (size = x) == null;\n            return tree;\n        };\n        tree.nodeSize = function(x) {\n            if (!arguments.length) return nodeSize ? size : null;\n            nodeSize = (size = x) != null;\n            return tree;\n        };\n        return d3_layout_hierarchyRebind(tree, hierarchy);\n    };\n    function d3_layout_treeSeparation(a, b) {\n        return a.parent == b.parent ? 1 : 2;\n    }\n    function d3_layout_treeLeft(node) {\n        var children = node.children;\n        return children && children.length ? children[0] : node._tree.thread;\n    }\n    function d3_layout_treeRight(node) {\n        var children = node.children, n;\n        return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n    }\n    function d3_layout_treeSearch(node, compare) {\n        var children = node.children;\n        if (children && (n = children.length)) {\n            var child, n, i = -1;\n            while (++i < n) {\n                if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n                    node = child;\n                }\n            }\n        }\n        return node;\n    }\n    function d3_layout_treeRightmost(a, b) {\n        return a.x - b.x;\n    }\n    function d3_layout_treeLeftmost(a, b) {\n        return b.x - a.x;\n    }\n    function d3_layout_treeDeepest(a, b) {\n        return a.depth - b.depth;\n    }\n    function d3_layout_treeVisitAfter(node, callback) {\n        function visit(node, previousSibling) {\n            var children = node.children;\n            if (children && (n = children.length)) {\n                var child, previousChild = null, i = -1, n;\n                while (++i < n) {\n                    child = children[i];\n                    visit(child, previousChild);\n                    previousChild = child;\n                }\n            }\n            callback(node, previousSibling);\n        }\n        visit(node, null);\n    }\n    function d3_layout_treeShift(node) {\n        var shift = 0, change = 0, children = node.children, i = children.length, child;\n        while (--i >= 0) {\n            child = children[i]._tree;\n            child.prelim += shift;\n            child.mod += shift;\n            shift += child.shift + (change += child.change);\n        }\n    }\n    function d3_layout_treeMove(ancestor, node, shift) {\n        ancestor = ancestor._tree;\n        node = node._tree;\n        var change = shift / (node.number - ancestor.number);\n        ancestor.change += change;\n        node.change -= change;\n        node.shift += shift;\n        node.prelim += shift;\n        node.mod += shift;\n    }\n    function d3_layout_treeAncestor(vim, node, ancestor) {\n        return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n    }\n    d3.layout.pack = function() {\n        var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n        function pack(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n                return radius;\n            };\n            root.x = root.y = 0;\n            d3_layout_treeVisitAfter(root, function(d) {\n                d.r = +r(d.value);\n            });\n            d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n            if (padding) {\n                var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n                d3_layout_treeVisitAfter(root, function(d) {\n                    d.r += dr;\n                });\n                d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n                d3_layout_treeVisitAfter(root, function(d) {\n                    d.r -= dr;\n                });\n            }\n            d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n            return nodes;\n        }\n        pack.size = function(_) {\n            if (!arguments.length) return size;\n            size = _;\n            return pack;\n        };\n        pack.radius = function(_) {\n            if (!arguments.length) return radius;\n            radius = _ == null || typeof _ === \"function\" ? _ : +_;\n            return pack;\n        };\n        pack.padding = function(_) {\n            if (!arguments.length) return padding;\n            padding = +_;\n            return pack;\n        };\n        return d3_layout_hierarchyRebind(pack, hierarchy);\n    };\n    function d3_layout_packSort(a, b) {\n        return a.value - b.value;\n    }\n    function d3_layout_packInsert(a, b) {\n        var c = a._pack_next;\n        a._pack_next = b;\n        b._pack_prev = a;\n        b._pack_next = c;\n        c._pack_prev = b;\n    }\n    function d3_layout_packSplice(a, b) {\n        a._pack_next = b;\n        b._pack_prev = a;\n    }\n    function d3_layout_packIntersects(a, b) {\n        var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n        return .999 * dr * dr > dx * dx + dy * dy;\n    }\n    function d3_layout_packSiblings(node) {\n        if (!(nodes = node.children) || !(n = nodes.length)) return;\n        var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n        function bound(node) {\n            xMin = Math.min(node.x - node.r, xMin);\n            xMax = Math.max(node.x + node.r, xMax);\n            yMin = Math.min(node.y - node.r, yMin);\n            yMax = Math.max(node.y + node.r, yMax);\n        }\n        nodes.forEach(d3_layout_packLink);\n        a = nodes[0];\n        a.x = -a.r;\n        a.y = 0;\n        bound(a);\n        if (n > 1) {\n            b = nodes[1];\n            b.x = b.r;\n            b.y = 0;\n            bound(b);\n            if (n > 2) {\n                c = nodes[2];\n                d3_layout_packPlace(a, b, c);\n                bound(c);\n                d3_layout_packInsert(a, c);\n                a._pack_prev = c;\n                d3_layout_packInsert(c, b);\n                b = a._pack_next;\n                for (i = 3; i < n; i++) {\n                    d3_layout_packPlace(a, b, c = nodes[i]);\n                    var isect = 0, s1 = 1, s2 = 1;\n                    for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n                        if (d3_layout_packIntersects(j, c)) {\n                            isect = 1;\n                            break;\n                        }\n                    }\n                    if (isect == 1) {\n                        for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n                            if (d3_layout_packIntersects(k, c)) {\n                                break;\n                            }\n                        }\n                    }\n                    if (isect) {\n                        if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n                        i--;\n                    } else {\n                        d3_layout_packInsert(a, c);\n                        b = c;\n                        bound(c);\n                    }\n                }\n            }\n        }\n        var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n        for (i = 0; i < n; i++) {\n            c = nodes[i];\n            c.x -= cx;\n            c.y -= cy;\n            cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n        }\n        node.r = cr;\n        nodes.forEach(d3_layout_packUnlink);\n    }\n    function d3_layout_packLink(node) {\n        node._pack_next = node._pack_prev = node;\n    }\n    function d3_layout_packUnlink(node) {\n        delete node._pack_next;\n        delete node._pack_prev;\n    }\n    function d3_layout_packTransform(node, x, y, k) {\n        var children = node.children;\n        node.x = x += k * node.x;\n        node.y = y += k * node.y;\n        node.r *= k;\n        if (children) {\n            var i = -1, n = children.length;\n            while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n        }\n    }\n    function d3_layout_packPlace(a, b, c) {\n        var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n        if (db && (dx || dy)) {\n            var da = b.r + c.r, dc = dx * dx + dy * dy;\n            da *= da;\n            db *= db;\n            var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n            c.x = a.x + x * dx + y * dy;\n            c.y = a.y + x * dy - y * dx;\n        } else {\n            c.x = a.x + db;\n            c.y = a.y;\n        }\n    }\n    d3.layout.cluster = function() {\n        var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n        function cluster(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n            d3_layout_treeVisitAfter(root, function(node) {\n                var children = node.children;\n                if (children && children.length) {\n                    node.x = d3_layout_clusterX(children);\n                    node.y = d3_layout_clusterY(children);\n                } else {\n                    node.x = previousNode ? x += separation(node, previousNode) : 0;\n                    node.y = 0;\n                    previousNode = node;\n                }\n            });\n            var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n            d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n                node.x = (node.x - root.x) * size[0];\n                node.y = (root.y - node.y) * size[1];\n            } : function(node) {\n                node.x = (node.x - x0) / (x1 - x0) * size[0];\n                node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n            });\n            return nodes;\n        }\n        cluster.separation = function(x) {\n            if (!arguments.length) return separation;\n            separation = x;\n            return cluster;\n        };\n        cluster.size = function(x) {\n            if (!arguments.length) return nodeSize ? null : size;\n            nodeSize = (size = x) == null;\n            return cluster;\n        };\n        cluster.nodeSize = function(x) {\n            if (!arguments.length) return nodeSize ? size : null;\n            nodeSize = (size = x) != null;\n            return cluster;\n        };\n        return d3_layout_hierarchyRebind(cluster, hierarchy);\n    };\n    function d3_layout_clusterY(children) {\n        return 1 + d3.max(children, function(child) {\n            return child.y;\n        });\n    }\n    function d3_layout_clusterX(children) {\n        return children.reduce(function(x, child) {\n            return x + child.x;\n        }, 0) / children.length;\n    }\n    function d3_layout_clusterLeft(node) {\n        var children = node.children;\n        return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n    }\n    function d3_layout_clusterRight(node) {\n        var children = node.children, n;\n        return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n    }\n    d3.layout.treemap = function() {\n        var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n        function scale(children, k) {\n            var i = -1, n = children.length, child, area;\n            while (++i < n) {\n                area = (child = children[i]).value * (k < 0 ? 0 : k);\n                child.area = isNaN(area) || area <= 0 ? 0 : area;\n            }\n        }\n        function squarify(node) {\n            var children = node.children;\n            if (children && children.length) {\n                var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n                scale(remaining, rect.dx * rect.dy / node.value);\n                row.area = 0;\n                while ((n = remaining.length) > 0) {\n                    row.push(child = remaining[n - 1]);\n                    row.area += child.area;\n                    if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n                        remaining.pop();\n                        best = score;\n                    } else {\n                        row.area -= row.pop().area;\n                        position(row, u, rect, false);\n                        u = Math.min(rect.dx, rect.dy);\n                        row.length = row.area = 0;\n                        best = Infinity;\n                    }\n                }\n                if (row.length) {\n                    position(row, u, rect, true);\n                    row.length = row.area = 0;\n                }\n                children.forEach(squarify);\n            }\n        }\n        function stickify(node) {\n            var children = node.children;\n            if (children && children.length) {\n                var rect = pad(node), remaining = children.slice(), child, row = [];\n                scale(remaining, rect.dx * rect.dy / node.value);\n                row.area = 0;\n                while (child = remaining.pop()) {\n                    row.push(child);\n                    row.area += child.area;\n                    if (child.z != null) {\n                        position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n                        row.length = row.area = 0;\n                    }\n                }\n                children.forEach(stickify);\n            }\n        }\n        function worst(row, u) {\n            var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n            while (++i < n) {\n                if (!(r = row[i].area)) continue;\n                if (r < rmin) rmin = r;\n                if (r > rmax) rmax = r;\n            }\n            s *= s;\n            u *= u;\n            return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n        }\n        function position(row, u, rect, flush) {\n            var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n            if (u == rect.dx) {\n                if (flush || v > rect.dy) v = rect.dy;\n                while (++i < n) {\n                    o = row[i];\n                    o.x = x;\n                    o.y = y;\n                    o.dy = v;\n                    x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n                }\n                o.z = true;\n                o.dx += rect.x + rect.dx - x;\n                rect.y += v;\n                rect.dy -= v;\n            } else {\n                if (flush || v > rect.dx) v = rect.dx;\n                while (++i < n) {\n                    o = row[i];\n                    o.x = x;\n                    o.y = y;\n                    o.dx = v;\n                    y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n                }\n                o.z = false;\n                o.dy += rect.y + rect.dy - y;\n                rect.x += v;\n                rect.dx -= v;\n            }\n        }\n        function treemap(d) {\n            var nodes = stickies || hierarchy(d), root = nodes[0];\n            root.x = 0;\n            root.y = 0;\n            root.dx = size[0];\n            root.dy = size[1];\n            if (stickies) hierarchy.revalue(root);\n            scale([ root ], root.dx * root.dy / root.value);\n            (stickies ? stickify : squarify)(root);\n            if (sticky) stickies = nodes;\n            return nodes;\n        }\n        treemap.size = function(x) {\n            if (!arguments.length) return size;\n            size = x;\n            return treemap;\n        };\n        treemap.padding = function(x) {\n            if (!arguments.length) return padding;\n            function padFunction(node) {\n                var p = x.call(treemap, node, node.depth);\n                return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n            }\n            function padConstant(node) {\n                return d3_layout_treemapPad(node, x);\n            }\n            var type;\n            pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ],\n                padConstant) : padConstant;\n            return treemap;\n        };\n        treemap.round = function(x) {\n            if (!arguments.length) return round != Number;\n            round = x ? Math.round : Number;\n            return treemap;\n        };\n        treemap.sticky = function(x) {\n            if (!arguments.length) return sticky;\n            sticky = x;\n            stickies = null;\n            return treemap;\n        };\n        treemap.ratio = function(x) {\n            if (!arguments.length) return ratio;\n            ratio = x;\n            return treemap;\n        };\n        treemap.mode = function(x) {\n            if (!arguments.length) return mode;\n            mode = x + \"\";\n            return treemap;\n        };\n        return d3_layout_hierarchyRebind(treemap, hierarchy);\n    };\n    function d3_layout_treemapPadNull(node) {\n        return {\n            x: node.x,\n            y: node.y,\n            dx: node.dx,\n            dy: node.dy\n        };\n    }\n    function d3_layout_treemapPad(node, padding) {\n        var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n        if (dx < 0) {\n            x += dx / 2;\n            dx = 0;\n        }\n        if (dy < 0) {\n            y += dy / 2;\n            dy = 0;\n        }\n        return {\n            x: x,\n            y: y,\n            dx: dx,\n            dy: dy\n        };\n    }\n    d3.random = {\n        normal: function(µ, σ) {\n            var n = arguments.length;\n            if (n < 2) σ = 1;\n            if (n < 1) µ = 0;\n            return function() {\n                var x, y, r;\n                do {\n                    x = Math.random() * 2 - 1;\n                    y = Math.random() * 2 - 1;\n                    r = x * x + y * y;\n                } while (!r || r > 1);\n                return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n            };\n        },\n        logNormal: function() {\n            var random = d3.random.normal.apply(d3, arguments);\n            return function() {\n                return Math.exp(random());\n            };\n        },\n        bates: function(m) {\n            var random = d3.random.irwinHall(m);\n            return function() {\n                return random() / m;\n            };\n        },\n        irwinHall: function(m) {\n            return function() {\n                for (var s = 0, j = 0; j < m; j++) s += Math.random();\n                return s;\n            };\n        }\n    };\n    d3.scale = {};\n    function d3_scaleExtent(domain) {\n        var start = domain[0], stop = domain[domain.length - 1];\n        return start < stop ? [ start, stop ] : [ stop, start ];\n    }\n    function d3_scaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n    }\n    function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n        var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n        return function(x) {\n            return i(u(x));\n        };\n    }\n    function d3_scale_nice(domain, nice) {\n        var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n        if (x1 < x0) {\n            dx = i0, i0 = i1, i1 = dx;\n            dx = x0, x0 = x1, x1 = dx;\n        }\n        domain[i0] = nice.floor(x0);\n        domain[i1] = nice.ceil(x1);\n        return domain;\n    }\n    function d3_scale_niceStep(step) {\n        return step ? {\n            floor: function(x) {\n                return Math.floor(x / step) * step;\n            },\n            ceil: function(x) {\n                return Math.ceil(x / step) * step;\n            }\n        } : d3_scale_niceIdentity;\n    }\n    var d3_scale_niceIdentity = {\n        floor: d3_identity,\n        ceil: d3_identity\n    };\n    function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n        var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n        if (domain[k] < domain[0]) {\n            domain = domain.slice().reverse();\n            range = range.slice().reverse();\n        }\n        while (++j <= k) {\n            u.push(uninterpolate(domain[j - 1], domain[j]));\n            i.push(interpolate(range[j - 1], range[j]));\n        }\n        return function(x) {\n            var j = d3.bisect(domain, x, 1, k) - 1;\n            return i[j](u[j](x));\n        };\n    }\n    d3.scale.linear = function() {\n        return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n    };\n    function d3_scale_linear(domain, range, interpolate, clamp) {\n        var output, input;\n        function rescale() {\n            var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n            output = linear(domain, range, uninterpolate, interpolate);\n            input = linear(range, domain, uninterpolate, d3_interpolate);\n            return scale;\n        }\n        function scale(x) {\n            return output(x);\n        }\n        scale.invert = function(y) {\n            return input(y);\n        };\n        scale.domain = function(x) {\n            if (!arguments.length) return domain;\n            domain = x.map(Number);\n            return rescale();\n        };\n        scale.range = function(x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.rangeRound = function(x) {\n            return scale.range(x).interpolate(d3_interpolateRound);\n        };\n        scale.clamp = function(x) {\n            if (!arguments.length) return clamp;\n            clamp = x;\n            return rescale();\n        };\n        scale.interpolate = function(x) {\n            if (!arguments.length) return interpolate;\n            interpolate = x;\n            return rescale();\n        };\n        scale.ticks = function(m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        scale.tickFormat = function(m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        scale.nice = function(m) {\n            d3_scale_linearNice(domain, m);\n            return rescale();\n        };\n        scale.copy = function() {\n            return d3_scale_linear(domain, range, interpolate, clamp);\n        };\n        return rescale();\n    }\n    function d3_scale_linearRebind(scale, linear) {\n        return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n    }\n    function d3_scale_linearNice(domain, m) {\n        return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    }\n    function d3_scale_linearTickRange(domain, m) {\n        if (m == null) m = 10;\n        var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n        if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n        extent[0] = Math.ceil(extent[0] / step) * step;\n        extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n        extent[2] = step;\n        return extent;\n    }\n    function d3_scale_linearTicks(domain, m) {\n        return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n    }\n    function d3_scale_linearTickFormat(domain, m, format) {\n        var range = d3_scale_linearTickRange(domain, m);\n        return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n            return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n        }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n    }\n    var d3_scale_linearFormatSignificant = {\n        s: 1,\n        g: 1,\n        p: 1,\n        r: 1,\n        e: 1\n    };\n    function d3_scale_linearPrecision(value) {\n        return -Math.floor(Math.log(value) / Math.LN10 + .01);\n    }\n    function d3_scale_linearFormatPrecision(type, range) {\n        var p = d3_scale_linearPrecision(range[2]);\n        return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n    }\n    d3.scale.log = function() {\n        return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n    };\n    function d3_scale_log(linear, base, positive, domain) {\n        function log(x) {\n            return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n        }\n        function pow(x) {\n            return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n        }\n        function scale(x) {\n            return linear(log(x));\n        }\n        scale.invert = function(x) {\n            return pow(linear.invert(x));\n        };\n        scale.domain = function(x) {\n            if (!arguments.length) return domain;\n            positive = x[0] >= 0;\n            linear.domain((domain = x.map(Number)).map(log));\n            return scale;\n        };\n        scale.base = function(_) {\n            if (!arguments.length) return base;\n            base = +_;\n            linear.domain(domain.map(log));\n            return scale;\n        };\n        scale.nice = function() {\n            var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n            linear.domain(niced);\n            domain = niced.map(pow);\n            return scale;\n        };\n        scale.ticks = function() {\n            var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n            if (isFinite(j - i)) {\n                if (positive) {\n                    for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n                    ticks.push(pow(i));\n                } else {\n                    ticks.push(pow(i));\n                    for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n                }\n                for (i = 0; ticks[i] < u; i++) {}\n                for (j = ticks.length; ticks[j - 1] > v; j--) {}\n                ticks = ticks.slice(i, j);\n            }\n            return ticks;\n        };\n        scale.tickFormat = function(n, format) {\n            if (!arguments.length) return d3_scale_logFormat;\n            if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n            var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12,\n                Math.floor), e;\n            return function(d) {\n                return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n            };\n        };\n        scale.copy = function() {\n            return d3_scale_log(linear.copy(), base, positive, domain);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n    var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n        floor: function(x) {\n            return -Math.ceil(-x);\n        },\n        ceil: function(x) {\n            return -Math.floor(-x);\n        }\n    };\n    d3.scale.pow = function() {\n        return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n    };\n    function d3_scale_pow(linear, exponent, domain) {\n        var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n        function scale(x) {\n            return linear(powp(x));\n        }\n        scale.invert = function(x) {\n            return powb(linear.invert(x));\n        };\n        scale.domain = function(x) {\n            if (!arguments.length) return domain;\n            linear.domain((domain = x.map(Number)).map(powp));\n            return scale;\n        };\n        scale.ticks = function(m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        scale.tickFormat = function(m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        scale.nice = function(m) {\n            return scale.domain(d3_scale_linearNice(domain, m));\n        };\n        scale.exponent = function(x) {\n            if (!arguments.length) return exponent;\n            powp = d3_scale_powPow(exponent = x);\n            powb = d3_scale_powPow(1 / exponent);\n            linear.domain(domain.map(powp));\n            return scale;\n        };\n        scale.copy = function() {\n            return d3_scale_pow(linear.copy(), exponent, domain);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n    function d3_scale_powPow(e) {\n        return function(x) {\n            return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n        };\n    }\n    d3.scale.sqrt = function() {\n        return d3.scale.pow().exponent(.5);\n    };\n    d3.scale.ordinal = function() {\n        return d3_scale_ordinal([], {\n            t: \"range\",\n            a: [ [] ]\n        });\n    };\n    function d3_scale_ordinal(domain, ranger) {\n        var index, range, rangeBand;\n        function scale(x) {\n            return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n        }\n        function steps(start, step) {\n            return d3.range(domain.length).map(function(i) {\n                return start + step * i;\n            });\n        }\n        scale.domain = function(x) {\n            if (!arguments.length) return domain;\n            domain = [];\n            index = new d3_Map();\n            var i = -1, n = x.length, xi;\n            while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n            return scale[ranger.t].apply(scale, ranger.a);\n        };\n        scale.range = function(x) {\n            if (!arguments.length) return range;\n            range = x;\n            rangeBand = 0;\n            ranger = {\n                t: \"range\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangePoints = function(x, padding) {\n            if (arguments.length < 2) padding = 0;\n            var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n            range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n            rangeBand = 0;\n            ranger = {\n                t: \"rangePoints\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeBands = function(x, padding, outerPadding) {\n            if (arguments.length < 2) padding = 0;\n            if (arguments.length < 3) outerPadding = padding;\n            var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n            range = steps(start + step * outerPadding, step);\n            if (reverse) range.reverse();\n            rangeBand = step * (1 - padding);\n            ranger = {\n                t: \"rangeBands\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeRoundBands = function(x, padding, outerPadding) {\n            if (arguments.length < 2) padding = 0;\n            if (arguments.length < 3) outerPadding = padding;\n            var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n            range = steps(start + Math.round(error / 2), step);\n            if (reverse) range.reverse();\n            rangeBand = Math.round(step * (1 - padding));\n            ranger = {\n                t: \"rangeRoundBands\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeBand = function() {\n            return rangeBand;\n        };\n        scale.rangeExtent = function() {\n            return d3_scaleExtent(ranger.a[0]);\n        };\n        scale.copy = function() {\n            return d3_scale_ordinal(domain, ranger);\n        };\n        return scale.domain(domain);\n    }\n    d3.scale.category10 = function() {\n        return d3.scale.ordinal().range(d3_category10);\n    };\n    d3.scale.category20 = function() {\n        return d3.scale.ordinal().range(d3_category20);\n    };\n    d3.scale.category20b = function() {\n        return d3.scale.ordinal().range(d3_category20b);\n    };\n    d3.scale.category20c = function() {\n        return d3.scale.ordinal().range(d3_category20c);\n    };\n    var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n    var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n    var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n    var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n    d3.scale.quantile = function() {\n        return d3_scale_quantile([], []);\n    };\n    function d3_scale_quantile(domain, range) {\n        var thresholds;\n        function rescale() {\n            var k = 0, q = range.length;\n            thresholds = [];\n            while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n            return scale;\n        }\n        function scale(x) {\n            if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n        }\n        scale.domain = function(x) {\n            if (!arguments.length) return domain;\n            domain = x.filter(function(d) {\n                return !isNaN(d);\n            }).sort(d3.ascending);\n            return rescale();\n        };\n        scale.range = function(x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.quantiles = function() {\n            return thresholds;\n        };\n        scale.invertExtent = function(y) {\n            y = range.indexOf(y);\n            return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n        };\n        scale.copy = function() {\n            return d3_scale_quantile(domain, range);\n        };\n        return rescale();\n    }\n    d3.scale.quantize = function() {\n        return d3_scale_quantize(0, 1, [ 0, 1 ]);\n    };\n    function d3_scale_quantize(x0, x1, range) {\n        var kx, i;\n        function scale(x) {\n            return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n        }\n        function rescale() {\n            kx = range.length / (x1 - x0);\n            i = range.length - 1;\n            return scale;\n        }\n        scale.domain = function(x) {\n            if (!arguments.length) return [ x0, x1 ];\n            x0 = +x[0];\n            x1 = +x[x.length - 1];\n            return rescale();\n        };\n        scale.range = function(x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.invertExtent = function(y) {\n            y = range.indexOf(y);\n            y = y < 0 ? NaN : y / kx + x0;\n            return [ y, y + 1 / kx ];\n        };\n        scale.copy = function() {\n            return d3_scale_quantize(x0, x1, range);\n        };\n        return rescale();\n    }\n    d3.scale.threshold = function() {\n        return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n    };\n    function d3_scale_threshold(domain, range) {\n        function scale(x) {\n            if (x <= x) return range[d3.bisect(domain, x)];\n        }\n        scale.domain = function(_) {\n            if (!arguments.length) return domain;\n            domain = _;\n            return scale;\n        };\n        scale.range = function(_) {\n            if (!arguments.length) return range;\n            range = _;\n            return scale;\n        };\n        scale.invertExtent = function(y) {\n            y = range.indexOf(y);\n            return [ domain[y - 1], domain[y] ];\n        };\n        scale.copy = function() {\n            return d3_scale_threshold(domain, range);\n        };\n        return scale;\n    }\n    d3.scale.identity = function() {\n        return d3_scale_identity([ 0, 1 ]);\n    };\n    function d3_scale_identity(domain) {\n        function identity(x) {\n            return +x;\n        }\n        identity.invert = identity;\n        identity.domain = identity.range = function(x) {\n            if (!arguments.length) return domain;\n            domain = x.map(identity);\n            return identity;\n        };\n        identity.ticks = function(m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        identity.tickFormat = function(m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        identity.copy = function() {\n            return d3_scale_identity(domain);\n        };\n        return identity;\n    }\n    d3.svg = {};\n    d3.svg.arc = function() {\n        var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n        function arc() {\n            var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0,\n                a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n            return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n        }\n        arc.innerRadius = function(v) {\n            if (!arguments.length) return innerRadius;\n            innerRadius = d3_functor(v);\n            return arc;\n        };\n        arc.outerRadius = function(v) {\n            if (!arguments.length) return outerRadius;\n            outerRadius = d3_functor(v);\n            return arc;\n        };\n        arc.startAngle = function(v) {\n            if (!arguments.length) return startAngle;\n            startAngle = d3_functor(v);\n            return arc;\n        };\n        arc.endAngle = function(v) {\n            if (!arguments.length) return endAngle;\n            endAngle = d3_functor(v);\n            return arc;\n        };\n        arc.centroid = function() {\n            var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n            return [ Math.cos(a) * r, Math.sin(a) * r ];\n        };\n        return arc;\n    };\n    var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n    function d3_svg_arcInnerRadius(d) {\n        return d.innerRadius;\n    }\n    function d3_svg_arcOuterRadius(d) {\n        return d.outerRadius;\n    }\n    function d3_svg_arcStartAngle(d) {\n        return d.startAngle;\n    }\n    function d3_svg_arcEndAngle(d) {\n        return d.endAngle;\n    }\n    function d3_svg_line(projection) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n        function line(data) {\n            var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n            function segment() {\n                segments.push(\"M\", interpolate(projection(points), tension));\n            }\n            while (++i < n) {\n                if (defined.call(this, d = data[i], i)) {\n                    points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n                } else if (points.length) {\n                    segment();\n                    points = [];\n                }\n            }\n            if (points.length) segment();\n            return segments.length ? segments.join(\"\") : null;\n        }\n        line.x = function(_) {\n            if (!arguments.length) return x;\n            x = _;\n            return line;\n        };\n        line.y = function(_) {\n            if (!arguments.length) return y;\n            y = _;\n            return line;\n        };\n        line.defined = function(_) {\n            if (!arguments.length) return defined;\n            defined = _;\n            return line;\n        };\n        line.interpolate = function(_) {\n            if (!arguments.length) return interpolateKey;\n            if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n            return line;\n        };\n        line.tension = function(_) {\n            if (!arguments.length) return tension;\n            tension = _;\n            return line;\n        };\n        return line;\n    }\n    d3.svg.line = function() {\n        return d3_svg_line(d3_identity);\n    };\n    var d3_svg_lineInterpolators = d3.map({\n        linear: d3_svg_lineLinear,\n        \"linear-closed\": d3_svg_lineLinearClosed,\n        step: d3_svg_lineStep,\n        \"step-before\": d3_svg_lineStepBefore,\n        \"step-after\": d3_svg_lineStepAfter,\n        basis: d3_svg_lineBasis,\n        \"basis-open\": d3_svg_lineBasisOpen,\n        \"basis-closed\": d3_svg_lineBasisClosed,\n        bundle: d3_svg_lineBundle,\n        cardinal: d3_svg_lineCardinal,\n        \"cardinal-open\": d3_svg_lineCardinalOpen,\n        \"cardinal-closed\": d3_svg_lineCardinalClosed,\n        monotone: d3_svg_lineMonotone\n    });\n    d3_svg_lineInterpolators.forEach(function(key, value) {\n        value.key = key;\n        value.closed = /-closed$/.test(key);\n    });\n    function d3_svg_lineLinear(points) {\n        return points.join(\"L\");\n    }\n    function d3_svg_lineLinearClosed(points) {\n        return d3_svg_lineLinear(points) + \"Z\";\n    }\n    function d3_svg_lineStep(points) {\n        var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n        while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n        if (n > 1) path.push(\"H\", p[0]);\n        return path.join(\"\");\n    }\n    function d3_svg_lineStepBefore(points) {\n        var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n        while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n        return path.join(\"\");\n    }\n    function d3_svg_lineStepAfter(points) {\n        var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n        while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n        return path.join(\"\");\n    }\n    function d3_svg_lineCardinalOpen(points, tension) {\n        return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n    }\n    function d3_svg_lineCardinalClosed(points, tension) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]),\n            points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n    }\n    function d3_svg_lineCardinal(points, tension) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n    }\n    function d3_svg_lineHermite(points, tangents) {\n        if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n            return d3_svg_lineLinear(points);\n        }\n        var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n        if (quad) {\n            path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n            p0 = points[1];\n            pi = 2;\n        }\n        if (tangents.length > 1) {\n            t = tangents[1];\n            p = points[pi];\n            pi++;\n            path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n            for (var i = 2; i < tangents.length; i++, pi++) {\n                p = points[pi];\n                t = tangents[i];\n                path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n            }\n        }\n        if (quad) {\n            var lp = points[pi];\n            path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n        }\n        return path;\n    }\n    function d3_svg_lineCardinalTangents(points, tension) {\n        var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n        while (++i < n) {\n            p0 = p1;\n            p1 = p2;\n            p2 = points[i];\n            tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n        }\n        return tangents;\n    }\n    function d3_svg_lineBasis(points) {\n        if (points.length < 3) return d3_svg_lineLinear(points);\n        var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n        points.push(points[n - 1]);\n        while (++i <= n) {\n            pi = points[i];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        points.pop();\n        path.push(\"L\", pi);\n        return path.join(\"\");\n    }\n    function d3_svg_lineBasisOpen(points) {\n        if (points.length < 4) return d3_svg_lineLinear(points);\n        var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n        while (++i < 3) {\n            pi = points[i];\n            px.push(pi[0]);\n            py.push(pi[1]);\n        }\n        path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n        --i;\n        while (++i < n) {\n            pi = points[i];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        return path.join(\"\");\n    }\n    function d3_svg_lineBasisClosed(points) {\n        var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n        while (++i < 4) {\n            pi = points[i % n];\n            px.push(pi[0]);\n            py.push(pi[1]);\n        }\n        path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n        --i;\n        while (++i < m) {\n            pi = points[i % n];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        return path.join(\"\");\n    }\n    function d3_svg_lineBundle(points, tension) {\n        var n = points.length - 1;\n        if (n) {\n            var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n            while (++i <= n) {\n                p = points[i];\n                t = i / n;\n                p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n                p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n            }\n        }\n        return d3_svg_lineBasis(points);\n    }\n    function d3_svg_lineDot4(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n    function d3_svg_lineBasisBezier(path, x, y) {\n        path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n    }\n    function d3_svg_lineSlope(p0, p1) {\n        return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n    }\n    function d3_svg_lineFiniteDifferences(points) {\n        var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n        while (++i < j) {\n            m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n        }\n        m[i] = d;\n        return m;\n    }\n    function d3_svg_lineMonotoneTangents(points) {\n        var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n        while (++i < j) {\n            d = d3_svg_lineSlope(points[i], points[i + 1]);\n            if (abs(d) < ε) {\n                m[i] = m[i + 1] = 0;\n            } else {\n                a = m[i] / d;\n                b = m[i + 1] / d;\n                s = a * a + b * b;\n                if (s > 9) {\n                    s = d * 3 / Math.sqrt(s);\n                    m[i] = s * a;\n                    m[i + 1] = s * b;\n                }\n            }\n        }\n        i = -1;\n        while (++i <= j) {\n            s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n            tangents.push([ s || 0, m[i] * s || 0 ]);\n        }\n        return tangents;\n    }\n    function d3_svg_lineMonotone(points) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n    }\n    d3.svg.line.radial = function() {\n        var line = d3_svg_line(d3_svg_lineRadial);\n        line.radius = line.x, delete line.x;\n        line.angle = line.y, delete line.y;\n        return line;\n    };\n    function d3_svg_lineRadial(points) {\n        var point, i = -1, n = points.length, r, a;\n        while (++i < n) {\n            point = points[i];\n            r = point[0];\n            a = point[1] + d3_svg_arcOffset;\n            point[0] = r * Math.cos(a);\n            point[1] = r * Math.sin(a);\n        }\n        return points;\n    }\n    function d3_svg_area(projection) {\n        var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n        function area(data) {\n            var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n                return x;\n            } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n                return y;\n            } : d3_functor(y1), x, y;\n            function segment() {\n                segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n            }\n            while (++i < n) {\n                if (defined.call(this, d = data[i], i)) {\n                    points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n                    points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n                } else if (points0.length) {\n                    segment();\n                    points0 = [];\n                    points1 = [];\n                }\n            }\n            if (points0.length) segment();\n            return segments.length ? segments.join(\"\") : null;\n        }\n        area.x = function(_) {\n            if (!arguments.length) return x1;\n            x0 = x1 = _;\n            return area;\n        };\n        area.x0 = function(_) {\n            if (!arguments.length) return x0;\n            x0 = _;\n            return area;\n        };\n        area.x1 = function(_) {\n            if (!arguments.length) return x1;\n            x1 = _;\n            return area;\n        };\n        area.y = function(_) {\n            if (!arguments.length) return y1;\n            y0 = y1 = _;\n            return area;\n        };\n        area.y0 = function(_) {\n            if (!arguments.length) return y0;\n            y0 = _;\n            return area;\n        };\n        area.y1 = function(_) {\n            if (!arguments.length) return y1;\n            y1 = _;\n            return area;\n        };\n        area.defined = function(_) {\n            if (!arguments.length) return defined;\n            defined = _;\n            return area;\n        };\n        area.interpolate = function(_) {\n            if (!arguments.length) return interpolateKey;\n            if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n            interpolateReverse = interpolate.reverse || interpolate;\n            L = interpolate.closed ? \"M\" : \"L\";\n            return area;\n        };\n        area.tension = function(_) {\n            if (!arguments.length) return tension;\n            tension = _;\n            return area;\n        };\n        return area;\n    }\n    d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n    d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n    d3.svg.area = function() {\n        return d3_svg_area(d3_identity);\n    };\n    d3.svg.area.radial = function() {\n        var area = d3_svg_area(d3_svg_lineRadial);\n        area.radius = area.x, delete area.x;\n        area.innerRadius = area.x0, delete area.x0;\n        area.outerRadius = area.x1, delete area.x1;\n        area.angle = area.y, delete area.y;\n        area.startAngle = area.y0, delete area.y0;\n        area.endAngle = area.y1, delete area.y1;\n        return area;\n    };\n    d3.svg.chord = function() {\n        var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n        function chord(d, i) {\n            var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n            return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n        }\n        function subgroup(self, f, d, i) {\n            var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n            return {\n                r: r,\n                a0: a0,\n                a1: a1,\n                p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n                p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n            };\n        }\n        function equals(a, b) {\n            return a.a0 == b.a0 && a.a1 == b.a1;\n        }\n        function arc(r, p, a) {\n            return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n        }\n        function curve(r0, p0, r1, p1) {\n            return \"Q 0,0 \" + p1;\n        }\n        chord.radius = function(v) {\n            if (!arguments.length) return radius;\n            radius = d3_functor(v);\n            return chord;\n        };\n        chord.source = function(v) {\n            if (!arguments.length) return source;\n            source = d3_functor(v);\n            return chord;\n        };\n        chord.target = function(v) {\n            if (!arguments.length) return target;\n            target = d3_functor(v);\n            return chord;\n        };\n        chord.startAngle = function(v) {\n            if (!arguments.length) return startAngle;\n            startAngle = d3_functor(v);\n            return chord;\n        };\n        chord.endAngle = function(v) {\n            if (!arguments.length) return endAngle;\n            endAngle = d3_functor(v);\n            return chord;\n        };\n        return chord;\n    };\n    function d3_svg_chordRadius(d) {\n        return d.radius;\n    }\n    d3.svg.diagonal = function() {\n        var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n        function diagonal(d, i) {\n            var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n                x: p0.x,\n                y: m\n            }, {\n                x: p3.x,\n                y: m\n            }, p3 ];\n            p = p.map(projection);\n            return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n        }\n        diagonal.source = function(x) {\n            if (!arguments.length) return source;\n            source = d3_functor(x);\n            return diagonal;\n        };\n        diagonal.target = function(x) {\n            if (!arguments.length) return target;\n            target = d3_functor(x);\n            return diagonal;\n        };\n        diagonal.projection = function(x) {\n            if (!arguments.length) return projection;\n            projection = x;\n            return diagonal;\n        };\n        return diagonal;\n    };\n    function d3_svg_diagonalProjection(d) {\n        return [ d.x, d.y ];\n    }\n    d3.svg.diagonal.radial = function() {\n        var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n        diagonal.projection = function(x) {\n            return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n        };\n        return diagonal;\n    };\n    function d3_svg_diagonalRadialProjection(projection) {\n        return function() {\n            var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n            return [ r * Math.cos(a), r * Math.sin(a) ];\n        };\n    }\n    d3.svg.symbol = function() {\n        var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n        function symbol(d, i) {\n            return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n        }\n        symbol.type = function(x) {\n            if (!arguments.length) return type;\n            type = d3_functor(x);\n            return symbol;\n        };\n        symbol.size = function(x) {\n            if (!arguments.length) return size;\n            size = d3_functor(x);\n            return symbol;\n        };\n        return symbol;\n    };\n    function d3_svg_symbolSize() {\n        return 64;\n    }\n    function d3_svg_symbolType() {\n        return \"circle\";\n    }\n    function d3_svg_symbolCircle(size) {\n        var r = Math.sqrt(size / π);\n        return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n    }\n    var d3_svg_symbols = d3.map({\n        circle: d3_svg_symbolCircle,\n        cross: function(size) {\n            var r = Math.sqrt(size / 5) / 2;\n            return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n        },\n        diamond: function(size) {\n            var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n            return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n        },\n        square: function(size) {\n            var r = Math.sqrt(size) / 2;\n            return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n        },\n        \"triangle-down\": function(size) {\n            var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n            return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n        },\n        \"triangle-up\": function(size) {\n            var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n            return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n        }\n    });\n    d3.svg.symbolTypes = d3_svg_symbols.keys();\n    var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n    function d3_transition(groups, id) {\n        d3_subclass(groups, d3_transitionPrototype);\n        groups.id = id;\n        return groups;\n    }\n    var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n    d3_transitionPrototype.call = d3_selectionPrototype.call;\n    d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n    d3_transitionPrototype.node = d3_selectionPrototype.node;\n    d3_transitionPrototype.size = d3_selectionPrototype.size;\n    d3.transition = function(selection) {\n        return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n    };\n    d3.transition.prototype = d3_transitionPrototype;\n    d3_transitionPrototype.select = function(selector) {\n        var id = this.id, subgroups = [], subgroup, subnode, node;\n        selector = d3_selection_selector(selector);\n        for (var j = -1, m = this.length; ++j < m; ) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n                if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n                    if (\"__data__\" in node) subnode.__data__ = node.__data__;\n                    d3_transitionNode(subnode, i, id, node.__transition__[id]);\n                    subgroup.push(subnode);\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_transitionPrototype.selectAll = function(selector) {\n        var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n        selector = d3_selection_selectorAll(selector);\n        for (var j = -1, m = this.length; ++j < m; ) {\n            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n                if (node = group[i]) {\n                    transition = node.__transition__[id];\n                    subnodes = selector.call(node, node.__data__, i, j);\n                    subgroups.push(subgroup = []);\n                    for (var k = -1, o = subnodes.length; ++k < o; ) {\n                        if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n                        subgroup.push(subnode);\n                    }\n                }\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_transitionPrototype.filter = function(filter) {\n        var subgroups = [], subgroup, group, node;\n        if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n                    subgroup.push(node);\n                }\n            }\n        }\n        return d3_transition(subgroups, this.id);\n    };\n    d3_transitionPrototype.tween = function(name, tween) {\n        var id = this.id;\n        if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n        return d3_selection_each(this, tween == null ? function(node) {\n            node.__transition__[id].tween.remove(name);\n        } : function(node) {\n            node.__transition__[id].tween.set(name, tween);\n        });\n    };\n    function d3_transition_tween(groups, name, value, tween) {\n        var id = groups.id;\n        return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n            node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n        } : (value = tween(value), function(node) {\n            node.__transition__[id].tween.set(name, value);\n        }));\n    }\n    d3_transitionPrototype.attr = function(nameNS, value) {\n        if (arguments.length < 2) {\n            for (value in nameNS) this.attr(value, nameNS[value]);\n            return this;\n        }\n        var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n        function attrNull() {\n            this.removeAttribute(name);\n        }\n        function attrNullNS() {\n            this.removeAttributeNS(name.space, name.local);\n        }\n        function attrTween(b) {\n            return b == null ? attrNull : (b += \"\", function() {\n                var a = this.getAttribute(name), i;\n                return a !== b && (i = interpolate(a, b), function(t) {\n                    this.setAttribute(name, i(t));\n                });\n            });\n        }\n        function attrTweenNS(b) {\n            return b == null ? attrNullNS : (b += \"\", function() {\n                var a = this.getAttributeNS(name.space, name.local), i;\n                return a !== b && (i = interpolate(a, b), function(t) {\n                    this.setAttributeNS(name.space, name.local, i(t));\n                });\n            });\n        }\n        return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n    };\n    d3_transitionPrototype.attrTween = function(nameNS, tween) {\n        var name = d3.ns.qualify(nameNS);\n        function attrTween(d, i) {\n            var f = tween.call(this, d, i, this.getAttribute(name));\n            return f && function(t) {\n                this.setAttribute(name, f(t));\n            };\n        }\n        function attrTweenNS(d, i) {\n            var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n            return f && function(t) {\n                this.setAttributeNS(name.space, name.local, f(t));\n            };\n        }\n        return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n    };\n    d3_transitionPrototype.style = function(name, value, priority) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof name !== \"string\") {\n                if (n < 2) value = \"\";\n                for (priority in name) this.style(priority, name[priority], value);\n                return this;\n            }\n            priority = \"\";\n        }\n        function styleNull() {\n            this.style.removeProperty(name);\n        }\n        function styleString(b) {\n            return b == null ? styleNull : (b += \"\", function() {\n                var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n                return a !== b && (i = d3_interpolate(a, b), function(t) {\n                    this.style.setProperty(name, i(t), priority);\n                });\n            });\n        }\n        return d3_transition_tween(this, \"style.\" + name, value, styleString);\n    };\n    d3_transitionPrototype.styleTween = function(name, tween, priority) {\n        if (arguments.length < 3) priority = \"\";\n        function styleTween(d, i) {\n            var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n            return f && function(t) {\n                this.style.setProperty(name, f(t), priority);\n            };\n        }\n        return this.tween(\"style.\" + name, styleTween);\n    };\n    d3_transitionPrototype.text = function(value) {\n        return d3_transition_tween(this, \"text\", value, d3_transition_text);\n    };\n    function d3_transition_text(b) {\n        if (b == null) b = \"\";\n        return function() {\n            this.textContent = b;\n        };\n    }\n    d3_transitionPrototype.remove = function() {\n        return this.each(\"end.transition\", function() {\n            var p;\n            if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n        });\n    };\n    d3_transitionPrototype.ease = function(value) {\n        var id = this.id;\n        if (arguments.length < 1) return this.node().__transition__[id].ease;\n        if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n        return d3_selection_each(this, function(node) {\n            node.__transition__[id].ease = value;\n        });\n    };\n    d3_transitionPrototype.delay = function(value) {\n        var id = this.id;\n        return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n            node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n        } : (value = +value, function(node) {\n            node.__transition__[id].delay = value;\n        }));\n    };\n    d3_transitionPrototype.duration = function(value) {\n        var id = this.id;\n        return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n            node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n        } : (value = Math.max(1, value), function(node) {\n            node.__transition__[id].duration = value;\n        }));\n    };\n    d3_transitionPrototype.each = function(type, listener) {\n        var id = this.id;\n        if (arguments.length < 2) {\n            var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n            d3_transitionInheritId = id;\n            d3_selection_each(this, function(node, i, j) {\n                d3_transitionInherit = node.__transition__[id];\n                type.call(node, node.__data__, i, j);\n            });\n            d3_transitionInherit = inherit;\n            d3_transitionInheritId = inheritId;\n        } else {\n            d3_selection_each(this, function(node) {\n                var transition = node.__transition__[id];\n                (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n            });\n        }\n        return this;\n    };\n    d3_transitionPrototype.transition = function() {\n        var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                if (node = group[i]) {\n                    transition = Object.create(node.__transition__[id0]);\n                    transition.delay += transition.duration;\n                    d3_transitionNode(node, i, id1, transition);\n                }\n                subgroup.push(node);\n            }\n        }\n        return d3_transition(subgroups, id1);\n    };\n    function d3_transitionNode(node, i, id, inherit) {\n        var lock = node.__transition__ || (node.__transition__ = {\n            active: 0,\n            count: 0\n        }), transition = lock[id];\n        if (!transition) {\n            var time = inherit.time;\n            transition = lock[id] = {\n                tween: new d3_Map(),\n                time: time,\n                ease: inherit.ease,\n                delay: inherit.delay,\n                duration: inherit.duration\n            };\n            ++lock.count;\n            d3.timer(function(elapsed) {\n                var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n                timer.t = delay + time;\n                if (delay <= elapsed) return start(elapsed - delay);\n                timer.c = start;\n                function start(elapsed) {\n                    if (lock.active > id) return stop();\n                    lock.active = id;\n                    transition.event && transition.event.start.call(node, d, i);\n                    transition.tween.forEach(function(key, value) {\n                        if (value = value.call(node, d, i)) {\n                            tweened.push(value);\n                        }\n                    });\n                    d3.timer(function() {\n                        timer.c = tick(elapsed || 1) ? d3_true : tick;\n                        return 1;\n                    }, 0, time);\n                }\n                function tick(elapsed) {\n                    if (lock.active !== id) return stop();\n                    var t = elapsed / duration, e = ease(t), n = tweened.length;\n                    while (n > 0) {\n                        tweened[--n].call(node, e);\n                    }\n                    if (t >= 1) {\n                        transition.event && transition.event.end.call(node, d, i);\n                        return stop();\n                    }\n                }\n                function stop() {\n                    if (--lock.count) delete lock[id]; else delete node.__transition__;\n                    return 1;\n                }\n            }, 0, time);\n        }\n    }\n    d3.svg.axis = function() {\n        var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n        function axis(g) {\n            g.each(function() {\n                var g = d3.select(this);\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n                var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n                var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"),\n                    d3.transition(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n                var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n                switch (orient) {\n                    case \"bottom\":\n                    {\n                        tickTransform = d3_svg_axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n                        text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n\n                    case \"top\":\n                    {\n                        tickTransform = d3_svg_axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n\n                    case \"left\":\n                    {\n                        tickTransform = d3_svg_axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n                        text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n\n                    case \"right\":\n                    {\n                        tickTransform = d3_svg_axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n                        text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n        axis.scale = function(x) {\n            if (!arguments.length) return scale;\n            scale = x;\n            return axis;\n        };\n        axis.orient = function(x) {\n            if (!arguments.length) return orient;\n            orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n            return axis;\n        };\n        axis.ticks = function() {\n            if (!arguments.length) return tickArguments_;\n            tickArguments_ = arguments;\n            return axis;\n        };\n        axis.tickValues = function(x) {\n            if (!arguments.length) return tickValues;\n            tickValues = x;\n            return axis;\n        };\n        axis.tickFormat = function(x) {\n            if (!arguments.length) return tickFormat_;\n            tickFormat_ = x;\n            return axis;\n        };\n        axis.tickSize = function(x) {\n            var n = arguments.length;\n            if (!n) return innerTickSize;\n            innerTickSize = +x;\n            outerTickSize = +arguments[n - 1];\n            return axis;\n        };\n        axis.innerTickSize = function(x) {\n            if (!arguments.length) return innerTickSize;\n            innerTickSize = +x;\n            return axis;\n        };\n        axis.outerTickSize = function(x) {\n            if (!arguments.length) return outerTickSize;\n            outerTickSize = +x;\n            return axis;\n        };\n        axis.tickPadding = function(x) {\n            if (!arguments.length) return tickPadding;\n            tickPadding = +x;\n            return axis;\n        };\n        axis.tickSubdivide = function() {\n            return arguments.length && axis;\n        };\n        return axis;\n    };\n    var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1\n    };\n    function d3_svg_axisX(selection, x) {\n        selection.attr(\"transform\", function(d) {\n            return \"translate(\" + x(d) + \",0)\";\n        });\n    }\n    function d3_svg_axisY(selection, y) {\n        selection.attr(\"transform\", function(d) {\n            return \"translate(0,\" + y(d) + \")\";\n        });\n    }\n    d3.svg.brush = function() {\n        var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n        function brush(g) {\n            g.each(function() {\n                var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n                var background = g.selectAll(\".background\").data([ 0 ]);\n                background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n                g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n                var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n                resize.exit().remove();\n                resize.enter().append(\"g\").attr(\"class\", function(d) {\n                    return \"resize \" + d;\n                }).style(\"cursor\", function(d) {\n                        return d3_svg_brushCursor[d];\n                    }).append(\"rect\").attr(\"x\", function(d) {\n                        return /[ew]$/.test(d) ? -3 : null;\n                    }).attr(\"y\", function(d) {\n                        return /^[ns]/.test(d) ? -3 : null;\n                    }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n                resize.style(\"display\", brush.empty() ? \"none\" : null);\n                var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n                if (x) {\n                    range = d3_scaleRange(x);\n                    backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n                    redrawX(gUpdate);\n                }\n                if (y) {\n                    range = d3_scaleRange(y);\n                    backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n                    redrawY(gUpdate);\n                }\n                redraw(gUpdate);\n            });\n        }\n        brush.event = function(g) {\n            g.each(function() {\n                var event_ = event.of(this, arguments), extent1 = {\n                    x: xExtent,\n                    y: yExtent,\n                    i: xExtentDomain,\n                    j: yExtentDomain\n                }, extent0 = this.__chart__ || extent1;\n                this.__chart__ = extent1;\n                if (d3_transitionInheritId) {\n                    d3.select(this).transition().each(\"start.brush\", function() {\n                        xExtentDomain = extent0.i;\n                        yExtentDomain = extent0.j;\n                        xExtent = extent0.x;\n                        yExtent = extent0.y;\n                        event_({\n                            type: \"brushstart\"\n                        });\n                    }).tween(\"brush:brush\", function() {\n                            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n                            xExtentDomain = yExtentDomain = null;\n                            return function(t) {\n                                xExtent = extent1.x = xi(t);\n                                yExtent = extent1.y = yi(t);\n                                event_({\n                                    type: \"brush\",\n                                    mode: \"resize\"\n                                });\n                            };\n                        }).each(\"end.brush\", function() {\n                            xExtentDomain = extent1.i;\n                            yExtentDomain = extent1.j;\n                            event_({\n                                type: \"brush\",\n                                mode: \"resize\"\n                            });\n                            event_({\n                                type: \"brushend\"\n                            });\n                        });\n                } else {\n                    event_({\n                        type: \"brushstart\"\n                    });\n                    event_({\n                        type: \"brush\",\n                        mode: \"resize\"\n                    });\n                    event_({\n                        type: \"brushend\"\n                    });\n                }\n            });\n        };\n        function redraw(g) {\n            g.selectAll(\".resize\").attr(\"transform\", function(d) {\n                return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n            });\n        }\n        function redrawX(g) {\n            g.select(\".extent\").attr(\"x\", xExtent[0]);\n            g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n        }\n        function redrawY(g) {\n            g.select(\".extent\").attr(\"y\", yExtent[0]);\n            g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n        }\n        function brushstart() {\n            var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n            var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n            if (d3.event.changedTouches) {\n                w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n            } else {\n                w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n            }\n            g.interrupt().selectAll(\"*\").interrupt();\n            if (dragging) {\n                origin[0] = xExtent[0] - origin[0];\n                origin[1] = yExtent[0] - origin[1];\n            } else if (resizing) {\n                var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n                offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n                origin[0] = xExtent[ex];\n                origin[1] = yExtent[ey];\n            } else if (d3.event.altKey) center = origin.slice();\n            g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n            d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n            event_({\n                type: \"brushstart\"\n            });\n            brushmove();\n            function keydown() {\n                if (d3.event.keyCode == 32) {\n                    if (!dragging) {\n                        center = null;\n                        origin[0] -= xExtent[1];\n                        origin[1] -= yExtent[1];\n                        dragging = 2;\n                    }\n                    d3_eventPreventDefault();\n                }\n            }\n            function keyup() {\n                if (d3.event.keyCode == 32 && dragging == 2) {\n                    origin[0] += xExtent[1];\n                    origin[1] += yExtent[1];\n                    dragging = 0;\n                    d3_eventPreventDefault();\n                }\n            }\n            function brushmove() {\n                var point = d3.mouse(target), moved = false;\n                if (offset) {\n                    point[0] += offset[0];\n                    point[1] += offset[1];\n                }\n                if (!dragging) {\n                    if (d3.event.altKey) {\n                        if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n                        origin[0] = xExtent[+(point[0] < center[0])];\n                        origin[1] = yExtent[+(point[1] < center[1])];\n                    } else center = null;\n                }\n                if (resizingX && move1(point, x, 0)) {\n                    redrawX(g);\n                    moved = true;\n                }\n                if (resizingY && move1(point, y, 1)) {\n                    redrawY(g);\n                    moved = true;\n                }\n                if (moved) {\n                    redraw(g);\n                    event_({\n                        type: \"brush\",\n                        mode: dragging ? \"move\" : \"resize\"\n                    });\n                }\n            }\n            function move1(point, scale, i) {\n                var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n                if (dragging) {\n                    r0 -= position;\n                    r1 -= size + position;\n                }\n                min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n                if (dragging) {\n                    max = (min += position) + size;\n                } else {\n                    if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n                    if (position < min) {\n                        max = min;\n                        min = position;\n                    } else {\n                        max = position;\n                    }\n                }\n                if (extent[0] != min || extent[1] != max) {\n                    if (i) yExtentDomain = null; else xExtentDomain = null;\n                    extent[0] = min;\n                    extent[1] = max;\n                    return true;\n                }\n            }\n            function brushend() {\n                brushmove();\n                g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n                d3.select(\"body\").style(\"cursor\", null);\n                w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n                dragRestore();\n                event_({\n                    type: \"brushend\"\n                });\n            }\n        }\n        brush.x = function(z) {\n            if (!arguments.length) return x;\n            x = z;\n            resizes = d3_svg_brushResizes[!x << 1 | !y];\n            return brush;\n        };\n        brush.y = function(z) {\n            if (!arguments.length) return y;\n            y = z;\n            resizes = d3_svg_brushResizes[!x << 1 | !y];\n            return brush;\n        };\n        brush.clamp = function(z) {\n            if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n            if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n            return brush;\n        };\n        brush.extent = function(z) {\n            var x0, x1, y0, y1, t;\n            if (!arguments.length) {\n                if (x) {\n                    if (xExtentDomain) {\n                        x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n                    } else {\n                        x0 = xExtent[0], x1 = xExtent[1];\n                        if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n                        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                    }\n                }\n                if (y) {\n                    if (yExtentDomain) {\n                        y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n                    } else {\n                        y0 = yExtent[0], y1 = yExtent[1];\n                        if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n                        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                    }\n                }\n                return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n            }\n            if (x) {\n                x0 = z[0], x1 = z[1];\n                if (y) x0 = x0[0], x1 = x1[0];\n                xExtentDomain = [ x0, x1 ];\n                if (x.invert) x0 = x(x0), x1 = x(x1);\n                if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n            }\n            if (y) {\n                y0 = z[0], y1 = z[1];\n                if (x) y0 = y0[1], y1 = y1[1];\n                yExtentDomain = [ y0, y1 ];\n                if (y.invert) y0 = y(y0), y1 = y(y1);\n                if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n            }\n            return brush;\n        };\n        brush.clear = function() {\n            if (!brush.empty()) {\n                xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n                xExtentDomain = yExtentDomain = null;\n            }\n            return brush;\n        };\n        brush.empty = function() {\n            return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n        };\n        return d3.rebind(brush, event, \"on\");\n    };\n    var d3_svg_brushCursor = {\n        n: \"ns-resize\",\n        e: \"ew-resize\",\n        s: \"ns-resize\",\n        w: \"ew-resize\",\n        nw: \"nwse-resize\",\n        ne: \"nesw-resize\",\n        se: \"nwse-resize\",\n        sw: \"nesw-resize\"\n    };\n    var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n    var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n    var d3_time_formatUtc = d3_time_format.utc;\n    var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n    d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n    function d3_time_formatIsoNative(date) {\n        return date.toISOString();\n    }\n    d3_time_formatIsoNative.parse = function(string) {\n        var date = new Date(string);\n        return isNaN(date) ? null : date;\n    };\n    d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n    d3_time.second = d3_time_interval(function(date) {\n        return new d3_date(Math.floor(date / 1e3) * 1e3);\n    }, function(date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n    }, function(date) {\n        return date.getSeconds();\n    });\n    d3_time.seconds = d3_time.second.range;\n    d3_time.seconds.utc = d3_time.second.utc.range;\n    d3_time.minute = d3_time_interval(function(date) {\n        return new d3_date(Math.floor(date / 6e4) * 6e4);\n    }, function(date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n    }, function(date) {\n        return date.getMinutes();\n    });\n    d3_time.minutes = d3_time.minute.range;\n    d3_time.minutes.utc = d3_time.minute.utc.range;\n    d3_time.hour = d3_time_interval(function(date) {\n        var timezone = date.getTimezoneOffset() / 60;\n        return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n    }, function(date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n    }, function(date) {\n        return date.getHours();\n    });\n    d3_time.hours = d3_time.hour.range;\n    d3_time.hours.utc = d3_time.hour.utc.range;\n    d3_time.month = d3_time_interval(function(date) {\n        date = d3_time.day(date);\n        date.setDate(1);\n        return date;\n    }, function(date, offset) {\n        date.setMonth(date.getMonth() + offset);\n    }, function(date) {\n        return date.getMonth();\n    });\n    d3_time.months = d3_time.month.range;\n    d3_time.months.utc = d3_time.month.utc.range;\n    function d3_time_scale(linear, methods, format) {\n        function scale(x) {\n            return linear(x);\n        }\n        scale.invert = function(x) {\n            return d3_time_scaleDate(linear.invert(x));\n        };\n        scale.domain = function(x) {\n            if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n            linear.domain(x);\n            return scale;\n        };\n        function tickMethod(extent, count) {\n            var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n            return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n                return d / 31536e6;\n            }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n        }\n        scale.nice = function(interval, skip) {\n            var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n            if (method) interval = method[0], skip = method[1];\n            function skipped(date) {\n                return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n            }\n            return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n                floor: function(date) {\n                    while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n                    return date;\n                },\n                ceil: function(date) {\n                    while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n                    return date;\n                }\n            } : interval));\n        };\n        scale.ticks = function(interval, skip) {\n            var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n                range: interval\n            }, skip ];\n            if (method) interval = method[0], skip = method[1];\n            return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n        };\n        scale.tickFormat = function() {\n            return format;\n        };\n        scale.copy = function() {\n            return d3_time_scale(linear.copy(), methods, format);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n    function d3_time_scaleDate(t) {\n        return new Date(t);\n    }\n    var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n    var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n    var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n        return d.getMilliseconds();\n    } ], [ \":%S\", function(d) {\n        return d.getSeconds();\n    } ], [ \"%I:%M\", function(d) {\n        return d.getMinutes();\n    } ], [ \"%I %p\", function(d) {\n        return d.getHours();\n    } ], [ \"%a %d\", function(d) {\n        return d.getDay() && d.getDate() != 1;\n    } ], [ \"%b %d\", function(d) {\n        return d.getDate() != 1;\n    } ], [ \"%B\", function(d) {\n        return d.getMonth();\n    } ], [ \"%Y\", d3_true ] ]);\n    var d3_time_scaleMilliseconds = {\n        range: function(start, stop, step) {\n            return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n        },\n        floor: d3_identity,\n        ceil: d3_identity\n    };\n    d3_time_scaleLocalMethods.year = d3_time.year;\n    d3_time.scale = function() {\n        return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n    };\n    var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n        return [ m[0].utc, m[1] ];\n    });\n    var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n        return d.getUTCMilliseconds();\n    } ], [ \":%S\", function(d) {\n        return d.getUTCSeconds();\n    } ], [ \"%I:%M\", function(d) {\n        return d.getUTCMinutes();\n    } ], [ \"%I %p\", function(d) {\n        return d.getUTCHours();\n    } ], [ \"%a %d\", function(d) {\n        return d.getUTCDay() && d.getUTCDate() != 1;\n    } ], [ \"%b %d\", function(d) {\n        return d.getUTCDate() != 1;\n    } ], [ \"%B\", function(d) {\n        return d.getUTCMonth();\n    } ], [ \"%Y\", d3_true ] ]);\n    d3_time_scaleUtcMethods.year = d3_time.year.utc;\n    d3_time.scale.utc = function() {\n        return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n    };\n    d3.text = d3_xhrType(function(request) {\n        return request.responseText;\n    });\n    d3.json = function(url, callback) {\n        return d3_xhr(url, \"application/json\", d3_json, callback);\n    };\n    function d3_json(request) {\n        return JSON.parse(request.responseText);\n    }\n    d3.html = function(url, callback) {\n        return d3_xhr(url, \"text/html\", d3_html, callback);\n    };\n    function d3_html(request) {\n        var range = d3_document.createRange();\n        range.selectNode(d3_document.body);\n        return range.createContextualFragment(request.responseText);\n    }\n    d3.xml = d3_xhrType(function(request) {\n        return request.responseXML;\n    });\n    if (typeof define === \"function\" && define.amd) {\n        define('lib.d3',d3);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = d3;\n    } else {\n        this.d3 = d3;\n    }\n}();\n","/**\n * Created by mcandela on 05/11/13.\n */\n\ndefine('view.template-manager',[\n    \"env.utils\"\n], function(utils){\n\n    /**\n     * TemplateManagerView is the component in charge of creating and manipulating the HTML dom elements.\n     *\n     * @class TemplateManagerView\n     * @constructor\n     * @module view\n     */\n\n    var TemplateManagerView = function(env){\n        var widgetUrl, config;\n\n        widgetUrl = env.widgetUrl;\n        config = env.config;\n\n        this.loadingImage = '<img src=\"' + widgetUrl + 'view/img/loading.gif\" class=\"loading-image\"/> ';\n\n        this.timeMargins = '<div class=\"time-margins\"><div style=\"position: absolute; left: 0;\"></div> <div style=\"position: absolute; right: 0;\"></div></div>';\n\n        this.controlPanel =\n            '<div class=\"button-group control-panel\">' +\n                '<div class=\"legend-controller\">' +\n                '<select class=\"legend-controller-select\" title=\"' + env.lang.viewSelectboxTitle + '\"></select>' +\n                '</div>' +\n                '<div class=\"legend\">' +\n                '<div class=\"legend-pls\">' +\n                '<div class=\"legend-pls-item\"><div class=\"pls-color\"></div>&nbsp;&gt;&nbsp;<span class=\"pls-percentage\"></span><span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '<div class=\"legend-pls-item\"><div class=\"pls-color\"></div>&nbsp;&le;&nbsp;<span class=\"pls-percentage\"></span><span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '</div>' +\n                '<div class=\"legend-agr-level\">' +\n                '</div>'\n                +\n                '</div>' +\n\n\n                '<div class=\"button forward\">' +\n                '<img src=\"' + widgetUrl + 'view/img/dnsmon_forward_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button right\">' +\n                '<img src=\"' + widgetUrl + 'view/img/right_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button zoom-in\">' +\n                '<img src=\"' + widgetUrl + 'view/img/zoomin_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button zoom-out\">' +\n                '<img src=\"' + widgetUrl + 'view/img/zoomout_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button allrows\">' +\n                '<img src=\"' + widgetUrl + 'view/img/allrows_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button left\">' +\n                '<img src=\"' + widgetUrl + 'view/img/left_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button timepicker\">' +\n                '<img src=\"' + widgetUrl + 'view/img/calendar_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button thresholds\">' +\n                '<img src=\"' + widgetUrl + 'view/img/thresholds_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button keep-updated\">' +\n                '<img src=\"' + widgetUrl + 'view/img/keep_updated_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button filters\">' +\n                '<img src=\"' + widgetUrl + 'view/img/filter_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button full-screen\">' +\n                '<img src=\"' + widgetUrl + 'view/img/dnsmon_fullscreen_icon.png\"/>' +\n                '</div>' +\n\n\n                '<div class=\"dnsmon-popup default-text\">' +\n                '</div>' +\n\n                '</div>';\n\n        this.timepickersPopup =\n            '<div style=\"float: left;\">' + env.lang.startDateLabel + ' <br/><input type=\"text\" class=\"timepicker-start date-field\" /></div>' +\n                '<div style=\"position: absolute; top: 15px; left: 145px;\"><img style=\"\" src=\"' + widgetUrl + 'view/img/double_arrow.gif\" /></div>' +\n                '<div style=\"float: right;\">' + env.lang.endDateLabel + ' <br/><input type=\"text\" class=\"timepicker-stop date-field\" /></div>';\n\n        this.thresholdsPopup =\n            '<div>' +\n                '<div class=\"thresholds-internal-legend\">' + '<div class=\"popup-pls-text\"></div>' +\n                '<div class=\"popup-pls-item\"><div class=\"pls-color\"></div>&nbsp;&gt;&nbsp;<input class=\"pls-percentage max-val\" value=\"0\"/>&nbsp;<span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '<div class=\"popup-pls-item\"><div class=\"pls-color\"></div>&nbsp;&le;&nbsp;<input class=\"pls-percentage min-val\" value=\"0\"/>&nbsp;<span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '</div>' +\n                '<div class=\"popup-pls-apply\">' + env.lang.pressToApply + '</div>' +\n                '<div class=\"thresholds-slider\"></div>' +\n                '</div>';\n\n        this.slidingMenu = '<div class=\"sliding-panel\">' +\n            '</div>';\n\n        this.openTimeOverviewImage = '<img src=\"' + widgetUrl + 'view/img/open_time_overview.png\" class=\"open-timeoverview-button\"/>';\n\n        this.getLastData = '<div>5h</div>' +\n            '<div>1d</div>' +\n            '<div>1w</div>' +\n            '<div>1m</div>';\n\n\n        this.extraDataPopup =\n            '<div>' +\n                '<div>' + env.lang.extraInfoDialogTextSample + ':' +\n                '<div class=\"popup-raw-data\"></div>' +\n                '</div>' +\n\n                '<div style=\"margin-top: 10px;\">' + env.lang.extraInfoDialogTextOverview + ':' +\n                '<div class=\"popup-overview-raw-data\"></div>' +\n                '</div>' +\n                '<div class=\"popup-tabs\">' +\n                    '<ul>' +\n                        '<li><a href=\"#tabs-1\">' + env.lang.tab1Title + '</a></li>' +\n                        '<li><a href=\"#tabs-2\">' + env.lang.tab2Title + '</a></li>' +\n                        '<li><a href=\"#tabs-3\">' + env.lang.tab3Title + '</a></li>' +\n                    '</ul>' +\n                    '<div id=\"tabs-1\">' +\n                        '<div class=\"popup-dns-response\"></div>' +\n                    '</div>' +\n                    '<div id=\"tabs-2\">' +\n                        '<div class=\"popup-traceroute\"></div>' +\n                    '</div>' +\n                    '<div id=\"tabs-3\">' +\n                        '<div class=\"popup-hostnamebind-response\"></div>' +\n                    '</div>' +\n                '</div>' +\n                '</div>';\n\n        this.dnsResponse =\n            '<table class=\"dns-response-table\" border=\"1\">' +\n                '<tr class=\"dns-response-top\">' +\n                '<td>' + env.lang.dnsResponsePrbId + ': <span class=\"dns-response-prbid\"></span>' + '</td>' +\n                '<td>' + env.lang.dnsResponseRt + ': <span class=\"dns-response-rt\"></span>' + '</td>' +\n                '<td>' + env.lang.dnsResponseDate + ': <span class=\"dns-response-date\"></span>' + '</td>' +\n                '</tr>' +\n                '<tr class=\"dns-response-nsid-rd\">' +\n                '<td colspan = \"3\">' + env.lang.dnsResponseNsId + ': <span class=\"dns-response-nsid\"></span></td>' +\n                '</tr>' +\n                '<tr class=\"dns-response-bottom\">' +\n                '<td colspan = \"3\"><span class=\"dns-response-plaintext\"></span></td>' +\n                '</tr>' +\n            '</table>';\n\n        this.hostBindResponse =\n            '<table class=\"hostbind-response-table\" border=\"1\">' +\n            '<tr class=\"hostbind-response-top\">' +\n            '<td>' + env.lang.hostBindResponsePrbId + ': <span class=\"hostbind-response-prbid\"></span>' + '</td>' +\n            '<td>' + env.lang.hostBindResponseRt + ': <span class=\"hostbind-response-rt\"></span>' + '</td>' +\n            '<td>' + env.lang.hostBindResponseDate + ': <span class=\"hostbind-response-date\"></span>' + '</td>' +\n            '</tr>' +\n            '<tr class=\"hostbind-response-msmId-rd\">' +\n            '<td colspan = \"3\">' + env.lang.hostBindResponseMsmId + ': <span class=\"hostbind-response-msmId\"></span></td>' +\n            '</tr>' +\n            '<tr class=\"hostbind-response-bottom\">' +\n            '<td colspan = \"3\"><span class=\"hostbind-response-plaintext\"></span></td>' +\n            '</tr>' +\n            '</table>';\n\n        this.tracerouteRensponse =\n            '<div>' +\n            '<div class=\"traceroute-title\">' + env.lang.closestTracerouteLabel + '</div>' +\n            '</div>';\n\n        this.fullScreenThrobber = '<img class=\"full-screen-throbber\" src=\"' + widgetUrl + 'view/img/full_screen_loader.gif\"/>';\n\n        this.filtersPopup =\n            '<div>' +\n                '<label>' + env.lang.filterSelectionTitle + '</label><br/>' +\n                '<div class=\"filter-popup-item\">' +\n                  env.lang.excludeErrorsFilterLabel + '<input type=\"checkbox\" class=\"exclude-errors\" name=\"exclude-errors\">' +\n                '</div>' +\n\n                '<div class=\"filter-popup-item\">' +\n                  '<span>' + env.lang.protocol3SelectionFilterLabel + ': ' +\n                    '<select class=\"dnsmon-filter-3protocol\">' +\n                      '<option value=\"both\">IPv4 and IPv6</option>' +\n                      '<option value=\"4\">IPv4 only</option>' +\n                      '<option value=\"6\">IPv6 only</option>' +\n                    '</select>' +\n                  '</span>' +\n                '</div>' +\n\n              '<div class=\"filter-popup-item\">' +\n              '<span>' + env.lang.protocol4SelectionFilterLabel + ': ' +\n              '<select class=\"dnsmon-filter-4protocol\">' +\n                '<option value=\"udp\">UDP</option>' +\n                '<option value=\"tcp\">TCP</option>' +\n              '</select>' +\n              '</span>' +\n              '</div>' +\n\n            '</div>';\n\n        this.breadcrumbs = '<div class=\"stacked-title\"></div>';\n\n        this.overlayMessage = '<div class=\"dnsmon-message\"></div>';\n\n\n        /**\n         * This method creates all the basic DOM elements needed to the widget\n         *\n         * @method createDom\n         * @input {Object} parentDom A DOM element to be filled with the initial DOM of the widget\n         * @input {Object} instanceParams A vector of initialisation parameter\n         */\n\n        this.createDom = function(parentDom, instanceParams){\n            var containerDom, svgContainerDom, externalDom, timeMargins, timeOvervireContainerDom, bottomInfoSection;\n\n            this.dom = {};\n\n            /*\n             * Set the DOM container\n             */\n            externalDom = $('<div></div>').addClass(config.domClasses.externalDom).css(\"border-width\", config.style.externalBorderWidth);\n            containerDom = $('<div></div>').addClass(config.domClasses.mainDom).css(\"margin\", config.style.containerMargin);\n            svgContainerDom = $('<div></div>').addClass(config.domClasses.svgContainerDom);\n            timeOvervireContainerDom = $('<div></div>').addClass(config.domClasses.timeOvervireContainerDom);\n            bottomInfoSection = $('<div>' + env.lang.bottomInfoSection + '</div>').addClass(config.domClasses.bottomInfoNoticeClass);\n            timeMargins = $(this.timeMargins).css(\"top\", config.style.controlPanelHeight);\n\n            /*\n             * Style the container\n             */\n            if (instanceParams.width < config.containerMinWidth){\n                console.log(\"The minimum possible with is \" + config.containerMinWidth);\n                instanceParams.width = null;\n            }\n\n            externalDom.css(\"width\", (instanceParams.width || config.containerWidthDefault) - (config.style.externalBorderWidth * 2));\n            timeOvervireContainerDom.css(\"margin-left\", config.labelWidth - config.timeOverviewMargins.left);\n\n            containerDom.tooltip(\n                {\n                    tooltipClass: 'custom-jquery-ui-tooltip',\n                    hide: {\n                        effect: \"fade\",\n                        duration: config.tooltipFade\n                    }\n                }\n            );\n\n            /*\n             * Build DOM tree\n             */\n            containerDom.append(svgContainerDom);\n            externalDom.append(containerDom);\n            $(parentDom).append(externalDom);\n\n            /*\n             * Build DOM js vectors\n             */\n            env.mainDom = utils.encapsulateDom(containerDom);\n            env.externalDom = utils.encapsulateDom(externalDom);\n\n            this.dom.svgContainer = utils.encapsulateDom(svgContainerDom);\n\n            env.mainDom.$.append(timeMargins);\n            this.dom.timeMargins = utils.encapsulateDom(timeMargins);\n\n            env.mainDom.$.append(timeOvervireContainerDom);\n            this.dom.timeOverviewContainer = utils.encapsulateDom(timeOvervireContainerDom);\n\n            env.mainDom.$.append(bottomInfoSection);\n            this.dom.bottomInfoSection = utils.encapsulateDom(bottomInfoSection);\n\n            this.dom.loadingImage = utils.encapsulateDom($(this.loadingImage));\n            env.mainDom.$.append(this.dom.loadingImage.$);\n\n\n            this.dom.message = utils.encapsulateDom($(this.overlayMessage));\n            env.mainDom.$.append(this.dom.message.$);\n\n\n            if (utils.getUrlParam(\"dnsmon_info\") == \"true\" && window.atob){\n                // - Christopher Amin (data-api), Massimo Candela (web tool), Andreas Strikos (deployment) - RIPE NCC\n                bottomInfoSection.html(\"Version: \" + env.version + window.atob(\"IC0gQ2hyaXN0b3BoZXIgQW1pbiAoZGF0YS1hcGkpLCBNYXNzaW1vIENhbmRlbGEgKHdlYiB0b29sKSwgQW5kcmVhcyBTdHJpa29zIChkZXBsb3ltZW50KSAtIFJJUEUgTkND\"));\n            }\n\n        };\n\n    };\n\n\n    return TemplateManagerView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/2/13\n * Time: 10:42 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('view.time-overview',[\n    \"lib.d3\" // Load d3 - put your path here\n], function(d3){\n\n    /**\n     * TimeOverviewView is the view component providing the time overview bar.\n     * It allows the user to easily interact with the TimeController.\n     *\n     * @class TimeOverviewView\n     * @constructor\n     * @module view\n     */\n\n    var TimeOverviewView = function(options, callbacks){\n        var timeMapper, timeTicker, brusherBucketLevelsMinutes, timeGrid, margins, width, hideIfLessThanSeconds,\n            height, brush, xAxis, svg, groupOverview, timeUnitGrid, $this, dom, labels, verticalLabels,\n            format, innerWidth, innerHeight, endCallback, interactionCallback, changeCallback, initCallback,\n            parent, borderMargin;\n\n        $this = this;\n        margins = options.margins;\n        brusherBucketLevelsMinutes = options.granularityLevels;\n        hideIfLessThanSeconds = options.hideIfLessThanSeconds;\n        verticalLabels = (options.verticalLabels != null) ? options.verticalLabels : true;\n        format = options.format || d3.time.format.utc(\"%Y-%m-%d\");\n        endCallback = callbacks.end;\n        interactionCallback = callbacks.interaction;\n        changeCallback = callbacks.change;\n        initCallback = callbacks.init;\n        width = options.width;\n        height = options.height;\n\n        borderMargin = 1;\n\n\n        /**\n         * This method initialises the time overview\n         *\n         * @method init\n         * @input {Object} domElement A DOM element to be filled with the time overview representation\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.init = function(domElement, domainRange, currentSelection){\n            var points;\n\n            parent = d3.select(domElement);\n            dom = parent\n                .append('div')\n                .attr('class', 'time-overview-container');\n\n            if (domainRange && currentSelection){\n                this.render(domainRange, currentSelection);\n                points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                initCallback.call(this, currentSelection[0], currentSelection[1], points);\n            }\n        };\n\n\n        /**\n         * This is a callback triggered after the interaction with the time overview\n         *\n         * @method _afterInteraction\n         * @private\n         */\n\n        this._afterInteraction = function(){\n            if (!d3.event.sourceEvent) return;\n            var extent0, selectionPoints, boundedLeft, boundedRight, selectionPointsRounded, magneticEffect, points;\n\n            extent0 = brush.extent();\n\n            boundedLeft = false;\n            boundedRight = false;\n            magneticEffect = 10 * 60 * 60 * 1000;\n\n            selectionPoints = extent0; // Normal selection\n            selectionPointsRounded = extent0.map(timeUnitGrid.round); // Magnetic effect\n\n            // If empty or reversed align it to the minimum unit possible\n            if (selectionPointsRounded[0] >= selectionPointsRounded[1]) {\n                selectionPointsRounded[0] = timeUnitGrid.floor(extent0[0]);\n                selectionPointsRounded[1] = timeUnitGrid.ceil(extent0[1]);\n            }\n\n            if (selectionPoints[0].getTime() <= $this.domainRange[0].getTime() + magneticEffect){\n                selectionPoints[0] = $this.domainRange[0];\n                boundedLeft = true;\n            }\n\n            if (selectionPoints[1].getTime()  >= $this.domainRange[1].getTime() - magneticEffect){\n                selectionPoints[1] = $this.domainRange[1];\n                boundedRight = true;\n            }\n\n            if (boundedLeft && !boundedRight){\n                selectionPoints[1] = selectionPointsRounded[1];\n            }else if (!boundedLeft && boundedRight){\n                selectionPoints[0] = selectionPointsRounded[0];\n            }else if (!boundedLeft && !boundedRight){\n                selectionPoints[0] = selectionPointsRounded[0];\n                selectionPoints[1] = selectionPointsRounded[1];\n            }\n\n            // Apply magnetic feedback\n            d3.select(this).transition()\n                .call(brush.extent(selectionPoints));\n\n            points = [xAxis(selectionPoints[0]), xAxis(selectionPoints[1])];\n\n            endCallback.call(this, selectionPoints[0], selectionPoints[1], points);\n        };\n\n\n        /**\n         * This is a callback triggered during the interaction with the time overview\n         *\n         * @method _duringInteraction\n         * @private\n         */\n\n        this._duringInteraction = function(){\n            if (!d3.event.sourceEvent) return;\n            var extent0, selectionPoints, points;\n\n            extent0 = brush.extent();\n\n            selectionPoints = extent0;\n\n            points = [xAxis(selectionPoints[0]), xAxis(selectionPoints[1])];\n            interactionCallback.call(this, selectionPoints[0], selectionPoints[1], points);\n        };\n\n\n        /**\n         * This method renders the time overview\n         *\n         * @method render\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.render = function(domainRange, currentSelection){\n            var timeWindow;\n\n            this.domainRange = domainRange;\n            this.currentSelection = currentSelection;\n\n            timeWindow = domainRange[1] - domainRange[0];\n\n            if (timeWindow < hideIfLessThanSeconds * 1000){\n                return false;\n            }\n\n            if (timeWindow < (brusherBucketLevelsMinutes.day * 60 * 1000)){\n                timeMapper = d3.time.day.utc;\n                timeTicker = d3.time.days.utc;\n                timeGrid = d3.time.hours.utc;\n                timeUnitGrid = d3.time.hour.utc;\n            }else if (timeWindow < (brusherBucketLevelsMinutes.week * 60 * 1000)){\n                timeMapper = d3.time.week.utc;\n                timeTicker = d3.time.weeks.utc;\n                timeGrid = d3.time.days.utc;\n                timeUnitGrid = d3.time.day.utc;\n            }else if (timeWindow < (brusherBucketLevelsMinutes.month * 60 * 1000)){\n                timeMapper = d3.time.month.utc;\n                timeTicker = d3.time.months.utc;\n                timeGrid = d3.time.weeks.utc;\n                timeUnitGrid = d3.time.week.utc;\n            }else{\n                timeMapper = d3.time.year.utc;\n                timeTicker = d3.time.years.utc;\n                timeGrid = d3.time.months.utc;\n                timeUnitGrid = d3.time.month.utc;\n            }\n\n            innerWidth = width - margins.left - margins.right - borderMargin;\n            innerHeight = height - margins.top - margins.bottom;\n\n            xAxis = d3\n                .time\n                .scale\n                .utc()\n                .domain(domainRange)\n                .range([0, innerWidth]);\n\n            brush = d3.svg.brush()\n                .x(xAxis)\n                .extent(currentSelection)\n                .on(\"brush\", $this._duringInteraction)\n                .on(\"brushend\", $this._afterInteraction);\n\n            svg = dom\n                .append(\"svg\")\n                .attr(\"class\", \"time-overview\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margins.left + \",\" + margins.top + \")\");\n\n            svg.append(\"rect\")\n                .attr(\"class\", \"grid-background\")\n                .attr(\"width\", innerWidth)\n                .attr(\"height\", innerHeight);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x grid\")\n                .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n                .call(d3.svg.axis()\n                    .scale(xAxis)\n                    .orient(\"bottom\")\n                    .ticks(timeGrid)\n                    .tickSize(-innerHeight)\n                    .tickFormat(\"\"))\n                .selectAll(\".tick\")\n                .classed(\"minor\", function(d) { return d.getHours(); });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n                .call(d3.svg.axis()\n                    .scale(xAxis)\n                    .orient(\"bottom\")\n                    .ticks(timeTicker)\n                    .tickFormat(format)\n                    .tickPadding(0))\n                .selectAll(\"text\")\n                .attr(\"x\", 6)\n                .style(\"text-anchor\", null);\n\n            groupOverview = svg.append(\"g\")\n                .attr(\"class\", \"brush\")\n                .call(brush);\n\n            groupOverview.selectAll(\"rect\")\n                .attr(\"height\", innerHeight);\n\n            labels = svg.selectAll(\"text\")\n                .style(\"text-anchor\", \"end\");\n\n            if (verticalLabels){\n                labels\n                    .attr(\"dx\", \"-1.2em\")\n                    .attr(\"dy\", \".15em\")\n                    .attr('transform', 'rotate(-65)');\n            }\n\n            return true;\n        };\n\n\n        /**\n         * This method updates the time overview. If the domainRange changes, a complete redraw is triggered.\n         *\n         * @method update\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.update = function(domainRange, currentSelection){\n            var points, out;\n\n            if (this.domainRange[0] == domainRange[0] && this.domainRange[1] == domainRange[1]){\n                return this.updateSelection(currentSelection);\n            }else{\n                dom\n                    .select(\".time-overview\")\n                    .remove();\n\n                out = this.render(domainRange, currentSelection);\n                points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                changeCallback.call(this, currentSelection[0], currentSelection[1], points);\n\n                return out;\n            }\n        };\n\n\n\n        /**\n         * This method redraws the time overview imposing a different width\n         *\n         * @method width\n         * @input {Number} newWidth The new width in pixels\n         */\n\n        this.width = function(newWidth){\n            if (newWidth == null){\n                return width;\n            }else{\n                if (width != newWidth && this.domainRange && this.currentSelection){\n\n                    width = newWidth;\n                    dom\n                        .select(\".time-overview\")\n                        .remove();\n\n                    this.render(this.domainRange, this.currentSelection);\n                }\n            }\n        };\n\n\n        /**\n         * This method updates the selection on the time overview\n         *\n         * @method updateSelection\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.updateSelection = function(currentSelection){\n            var points;\n\n            if (this.currentSelection != currentSelection){\n                groupOverview\n                    .call(brush.extent(currentSelection));\n\n                points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                changeCallback.call(this, currentSelection[0], currentSelection[1], points);\n\n                return true;\n            }\n            return false;\n        };\n};\n\nreturn TimeOverviewView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:25 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('view.svg.chart',[\n    \"env.utils\",\n    \"env.config\",\n    \"lib.d3\"\n], function(utils, config, d3){\n\n    /**\n     * SvgChartView is the view component representing the chart in SVG terms\n     *\n     * @class SvgChartView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgChartView = function(container, margins, options) {\n        var jqueryDom, $this, padding, lineFunction, duration, chartMaxHeight, chartMinHeight, cellsMinHeight,\n            cellsMaxHeight, maxHeight, minHeight;\n\n        $this = this;\n\n        this.margin = margins;\n\n        padding = options.trackerPadding;\n        maxHeight = options.maxHeight;\n        minHeight = options.minHeight;\n        duration = options.animationDuration || 0;\n\n        lineFunction = d3.svg.line()\n            .x(function(d) { return d.x; })\n            .y(function(d) { return d.y; })\n            .interpolate(\"linear\");\n\n        this.width = function() {\n            return container.width() - (this.margin.left + this.margin.right);\n        };\n\n        this.height = function() {\n            return container.height() - (this.margin.top + this.margin.bottom);\n        };\n\n        chartMaxHeight = maxHeight;\n        chartMinHeight = minHeight;\n\n        cellsMinHeight = config.cellsMinHeight;\n        cellsMaxHeight = config.cellsMaxHeight;\n\n        this.computeBestHeight = function(numberOfRows){\n            var totalCellsMinHeight, totalCellsMaxHeight, height, residualSpace;\n\n            totalCellsMinHeight = numberOfRows * cellsMinHeight;\n            totalCellsMaxHeight = numberOfRows * cellsMaxHeight;\n\n            if (totalCellsMaxHeight <= chartMinHeight){\n                height = chartMinHeight;\n            }else if (totalCellsMaxHeight >= chartMaxHeight){\n                height = chartMaxHeight;\n            }else{\n                residualSpace = (chartMaxHeight - totalCellsMaxHeight);\n                height = Math.min(Math.max((Math.log(residualSpace) + totalCellsMinHeight), chartMinHeight), chartMaxHeight);\n            }\n\n            height = Math.min(height, chartMaxHeight);\n            height = Math.max(height, chartMinHeight);\n\n            return height;\n        };\n\n        this.chartSelectorVertical = container.svg\n            .append(\"rect\")\n            .attr(\"class\", config.domClasses.chartSelectorVertical)\n            .attr(\"fill\", config.style.chartBackground)\n            .attr(\"x\", margins.left)\n            .attr(\"y\", margins.top)\n            .style(\"stroke\", config.style.selectorRectColor)\n            .style(\"shape-rendering\", \"crispEdges\")\n            .attr(\"height\", $this.height());\n\n        this.timeBoundaries = container.svg\n            .append(\"path\")\n            .attr(\"class\", \"cone-time-boundaries\");\n\n        this.svg = container.svg\n            .append(\"g\")\n            .attr(\"class\", config.domClasses.chartDom)\n            .attr(\"transform\", \"translate(\" + margins.left + \", \" + margins.top + \")\");\n\n        this.trackerBackground = this.svg\n            .append(\"svg:rect\")\n            .attr(\"class\", \"selectionTracker\")\n            .attr(\"fill\", config.style.chartBackground)\n            .attr(\"opacity\", 0)\n            .attr(\"transform\", \"translate(-\" + padding + \", -\" + padding + \")\")\n            .attr(\"width\", $this.width() + padding + padding)\n            .attr(\"height\", $this.height() + padding + padding);\n\n        jqueryDom = $(\".\" + config.domClasses.chartDom);\n\n        this.dom = utils.encapsulateDom(jqueryDom);\n\n        this.update = function(){\n            this.svg\n                .transition()\n                .duration(duration)\n                .attr(\"height\", $this.height())\n                .attr(\"width\", $this.width());\n\n            this.chartSelectorVertical\n                .attr(\"height\", $this.height());\n\n            this.trackerBackground\n                .attr(\"width\", $this.width() + padding + padding)\n                .attr(\"height\", $this.height() + padding + padding);\n\n        };\n\n        this.updateBoundaries = function(points){\n            this.timeBoundaries\n                .attr(\"d\", lineFunction([\n                    {x: margins.left, y: $this.height() + margins.top},\n                    {x: points[0] + margins.left, y: $this.height() + margins.top + margins.bottom},\n                    {x: points[1] + margins.left, y: $this.height() + margins.top + margins.bottom},\n                    {x: $this.width() + margins.left, y: $this.height() + margins.top}\n                ]));\n        };\n\n        this.getCenter = function(){\n            var center = {};\n\n            center.x = this.width() / 2;\n            center.y = this.height() / 2;\n\n            return center;\n        };\n\n        container.updateList.push({update: this.update, context: this});\n    };\n\n    return SvgChartView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:24 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('view.svg.container',[\n    \"env.utils\",\n    \"env.config\",\n    \"lib.d3\",\n    \"view.svg.chart\"\n], function(utils, config, d3, SvgChartView){\n\n    /**\n     * SvgContainerView is the view component representing the SVG container\n     *\n     * @class SvgContainerView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgContainerView = function(parentDom, chartMargins, options){\n        var node, svg, duration;\n\n        node = d3.select(parentDom.plain);\n\n        this.dom = parentDom;\n        this.updateList = [];\n\n        duration = options.animationDuration || 0;\n\n        this.svg = node\n            .append('svg')\n            .attr(\"class\", \"dnsmon-svg\");\n\n        this.width = function(val) {\n            if (val != null){\n                parentDom.$.width(val);\n                this.updateDimensions();\n            }\n            return parentDom.$.width();\n        };\n\n        this.height = function(val) {\n            if (val != null){\n                parentDom.$.height(val);\n                this.updateDimensions();\n            }\n\n            return parentDom.$.height();\n        };\n\n        this.updateDimensions = function(){\n            var updateFuncElement;\n\n            this.svg\n                .transition()\n                .duration(duration)\n                .attr(\"width\", parentDom.$.width())\n                .attr(\"height\", parentDom.$.height())\n                .style(\"width\", parentDom.$.width())\n                .style(\"height\", parentDom.$.height());\n\n            for (var n=0, length=this.updateList.length; n<length; n++){\n                updateFuncElement = this.updateList[n];\n                updateFuncElement.update.call(updateFuncElement.context);\n            }\n        };\n\n\n        /*\n         * Draw chart\n         */\n\n        this.chart = new SvgChartView(this, chartMargins, options);\n        this.chart.hidden = false;\n\n    };\n\n    return SvgContainerView;\n});\n","/**\n * Created by mcandela on 19/11/13.\n */\ndefine('view.pop-up',[\n    \"lib.d3\",\n    \"env.utils\"\n], function(d3, utils){\n\n    /**\n     * PopUpView is the view component for the cell's pop-up function\n     *\n     * @class PopUpView\n     * @constructor\n     * @module view\n     */\n\n    var PopUpView = function(env){\n        var config;\n\n        config = env.config;\n\n\n        /**\n         * This method hides the pop-up describing a cell\n         *\n         * @method hide\n         */\n\n        this.hide = function(){\n            clearTimeout(this._popupDelayTimer);\n\n            if (this.svgBalloon){\n                this.svgBalloon.group\n                    .remove();\n\n                this.svgBalloon = null;\n            }\n        };\n\n\n        /**\n         * This method shows the pop-up describing a cell\n         *\n         * @method show\n         * @input {Object} cell A cell\n         * @input {Object} mouseCoords The coordinates of the mouse cursor\n         */\n\n        this.show = function(cell, mouseCoords){\n            if (env.timeEventsActive){\n                var $this, container, chart;\n                $this = this;\n\n                clearTimeout(this._popupDelayTimer);\n\n                if (!container){\n                    container = env.container;\n                    chart = container.chart;\n                }\n\n                this._popupDelayTimer = setTimeout(function(){\n                        var balloonWidth, balloonHeight, svgBallonLeft, svgBallonRight, cursorOffset, arrowPoint,\n                            chartCenter, translationVector, arrowTop, absTranslationVector, balloonArray, lineFunction,\n                            cursorOffsetUnit, roundingFactor, balloonCellPosition, cellText, fontCharWidth, fontCharHeight,\n                            defaultYTranslation;\n\n                        fontCharWidth = 7; // Pixels\n                        fontCharHeight = 20; // Pixels\n                        defaultYTranslation = chart.margin.top + 20; // Pixels\n\n\n                        if (env.timeEventsActive){\n                            chartCenter = chart.getCenter();\n\n                            cellText = cell.toArrayString();\n\n                            balloonWidth = utils.getLongestString(cellText) * fontCharWidth;\n                            balloonHeight = cellText.length * fontCharHeight;\n\n                            chartCenter.y = Math.max(balloonHeight + defaultYTranslation, chartCenter.y); // This line avoids the pop-up to overflow the chart top margin\n\n                            cursorOffsetUnit = 3;\n\n                            absTranslationVector = {x: balloonWidth/4, y: balloonHeight/4};\n                            translationVector = {x: 0, y: 0};\n\n                            arrowTop = false;\n\n                            svgBallonLeft = [];\n                            svgBallonRight = [];\n\n                            roundingFactor = 3;\n\n                            //Balloon points\n\n                            // ---Left\n                            svgBallonLeft.push({x: balloonWidth/4, y: 0});\n\n                            svgBallonLeft.push({x: roundingFactor, y: 0}); //Rounded\n                            svgBallonLeft.push({x: 0, y: roundingFactor}); //Rounded\n\n                            svgBallonLeft.push({x: 0, y: balloonHeight - roundingFactor}); //Rounded\n                            svgBallonLeft.push({x: roundingFactor, y: balloonHeight}); //Rounded\n\n                            svgBallonLeft.push({x: balloonWidth/4, y: balloonHeight});\n\n\n                            // ---Right\n                            svgBallonRight.push({x: (balloonWidth/4)*3, y: balloonHeight});\n\n                            svgBallonRight.push({x: balloonWidth - roundingFactor, y: balloonHeight}); //Rounded\n                            svgBallonRight.push({x: balloonWidth, y: balloonHeight - roundingFactor}); //Rounded\n\n                            svgBallonRight.push({x: balloonWidth, y: roundingFactor}); //Rounded\n                            svgBallonRight.push({x: balloonWidth - roundingFactor, y: 0}); //Rounded\n\n                            svgBallonRight.push({x: (balloonWidth/4)*3, y: 0});\n\n                            if (mouseCoords.x > chartCenter.x && mouseCoords.y < chartCenter.y){ //First quadrant\n                                arrowTop = true;\n                                cursorOffset = {x: -cursorOffsetUnit, y: cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x - (absTranslationVector.x + balloonWidth);\n                                translationVector.y = mouseCoords.y + absTranslationVector.y;\n\n                            }else if (mouseCoords.x < chartCenter.x && mouseCoords.y < chartCenter.y){ //Second quadrant\n                                arrowTop = true;\n                                cursorOffset = {x: cursorOffsetUnit, y: cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x + absTranslationVector.x;\n                                translationVector.y = mouseCoords.y + absTranslationVector.y;\n\n                            }else if (mouseCoords.x < chartCenter.x && mouseCoords.y > chartCenter.y){ //Third quadrant\n                                arrowTop = false;\n                                cursorOffset = {x: cursorOffsetUnit, y: -cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x + absTranslationVector.x;\n                                translationVector.y = mouseCoords.y - (absTranslationVector.y + balloonHeight);\n\n                            }else{ //Fourth quadrant\n                                arrowTop = false;\n                                cursorOffset = {x: -cursorOffsetUnit, y: -cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x - (absTranslationVector.x + balloonWidth);\n                                translationVector.y = mouseCoords.y - (absTranslationVector.y + balloonHeight);\n\n                            }\n\n                            svgBallonLeft = utils.translate(svgBallonLeft, translationVector);\n                            svgBallonRight = utils.translate(svgBallonRight, translationVector);\n\n                            arrowPoint = {x: mouseCoords.x + cursorOffset.x , y: mouseCoords.y + cursorOffset.y};\n\n                            //Add the arrow\n                            if (arrowTop == false){\n                                svgBallonLeft.push(arrowPoint);\n                                balloonArray = svgBallonLeft.concat(svgBallonRight);\n                            }else{\n                                svgBallonRight.push(arrowPoint);\n                                balloonArray = svgBallonRight.concat(svgBallonLeft);\n                            }\n\n                            lineFunction = d3.svg.line()\n                                .x(function(d) { return d.x; })\n                                .y(function(d) { return d.y; })\n                                .interpolate(\"linear-closed\");\n\n\n                            if (!$this.svgBalloon){\n\n                                $this.svgBalloon = {};\n\n                                $this.svgBalloon.group = container.svg\n                                    .append('g');\n\n                                $this.svgBalloon.cloud = $this.svgBalloon.group\n                                    .append(\"path\")\n                                    .attr(\"class\", \"svg-balloon\");\n\n                                $this.svgBalloon.cell = $this.svgBalloon.group\n                                    .append(\"rect\")\n                                    .attr(\"class\", \"balloon-rect\");\n\n                                $this.svgBalloon.text = $this.svgBalloon.group\n                                    .append('g');\n                            }\n\n                            $this.svgBalloon.cloud\n                                .attr(\"d\", lineFunction(balloonArray))\n                                .attr(\"stroke\", \"#757575\")\n                                .attr(\"stroke-width\", 2)\n                                .attr(\"opacity\", 0.8)\n                                .attr(\"fill\", \"white\");\n\n                            balloonCellPosition = utils.translate([{x: 0, y: 0}], translationVector)[0];\n\n                            $this.svgBalloon.cell\n                                .attr(\"width\", balloonWidth - 10)\n                                .attr(\"height\", balloonHeight - 10)\n                                .attr(\"rx\", 3)\n                                .attr(\"ry\", 3)\n                                .attr(\"x\", balloonCellPosition.x + 5)\n                                .attr(\"y\", balloonCellPosition.y + 5)\n                                .attr(\"fill\", function(){\n                                    return env.mainView.getCellColor(cell);\n                                });\n\n                            utils.writeSvgText($this.svgBalloon.text, cellText, balloonCellPosition, {left: 10, top: 20});\n                        }\n                    },\n                    config.popupDelay);\n\n            }\n        };\n    };\n    return PopUpView;\n});\n","/**\n * Created by mcandela on 28/11/13.\n */\n\ndefine('view.breadcrumbs',[\n    \"env.utils\",\n    \"env.params-manager\"\n], function(utils, paramsManager){\n\n    /**\n     * BreadcrumbsView is the view component for the breadcrumbs function\n     *\n     * @class BreadcrumbsView\n     * @constructor\n     * @module view\n     */\n\n    var BreadcrumbsView = function(env){\n        var levelsIndex, dom, stateStack, config;\n\n        config = env.config;\n        levelsIndex = [];\n        stateStack = {};\n\n        dom = $(env.mainView.templateManager.breadcrumbs);\n\n        env.mainDom.$.append(dom);\n\n        dom.css(\"margin-left\", config.labelWidth + \"px\");\n\n\n        /**\n         * This method updates the html representing the breadcrumbs\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            var domElement, $this, item, positionIndex;\n\n            $this = this;\n            domElement = $(this._getTitle());\n\n            domElement\n                .off(\"click\")\n                .on(\"click\", function(){\n\n                    item = $(this).text();\n\n                    env.params = utils.lightClone(stateStack[item]); // Rebuild the status\n\n                    positionIndex = utils.indexOf(item, levelsIndex);\n                    if (positionIndex != levelsIndex.length){\n                        levelsIndex = levelsIndex.slice(0, $.inArray(item, levelsIndex) + 1);\n\n                        $this.update();\n                    }\n                    env.mainView.redraw();\n                });\n\n            dom.html(domElement);\n        };\n\n\n        /**\n         * This method removes the last entry of the breadcrumbs\n         *\n         * @method removeLastLevel\n         */\n\n        this.removeLastLevel = function(){\n            var index;\n\n            if (levelsIndex.length > 0){\n                index = levelsIndex.pop();\n                delete stateStack[index];\n\n                this.update();\n            }\n        };\n\n\n        /**\n         * This method removes all the entries of the breadcrumbs\n         *\n         * @method resetLevels\n         */\n\n        this.resetLevels = function(){\n            levelsIndex = [];\n            stateStack = {};\n\n            dom.children().off('click');\n            this.update();\n        };\n\n\n        /**\n         * This method initialises the breadcrumbs\n         *\n         * @method init\n         */\n\n        this.init = function(){\n            if (env.initialHistory){\n                this.pushHistory(env.initialHistory);\n            }else{\n                this.addLevel(env.connector.getGroup().label);\n            }\n        };\n\n\n        /**\n         * This method pushes a new entry in the breadcrumbs based on the actual query parameters\n         *\n         * @method addLevel\n         * @input {String} levelString A string describing the new state\n         */\n\n        this.addLevel = function(levelString){\n\n            this._addLevelWithParams(levelString, env.params);\n        };\n\n\n        /**\n         * This method pushes a new entries and a vector of query parameters fot that entry\n         *\n         * @method _addLevelWithParams\n         * @private\n         * @input {String} levelString A string describing the new state\n         * @input {Object} levelString A vector of query parameters\n         */\n\n        this._addLevelWithParams = function(levelString, params){\n            var label;\n\n            label = this._getLabelPrefix(params.type);\n            levelString = label + levelString;\n\n            if (utils.indexOf(levelString, levelsIndex) == -1){\n                levelsIndex.push(levelString);\n\n\n                stateStack[levelString] = utils.lightClone(params);\n                this.update();\n            }\n        };\n\n\n        /**\n         * This method returns the actual html representation for the breadcrumbs\n         *\n         * @method _getTitle\n         * @private\n         * @return {Array} A set of DOM elements\n         */\n\n        this._getTitle = function(){\n            var domElements, index;\n\n            domElements = [];\n\n            for (var n=0,length=levelsIndex.length; n<length; n++){\n                index = levelsIndex[n];\n                domElements.push('<span class=\"stacked-title-item\">' + index + '</span>');\n            }\n\n            return utils.join(domElements, \"&nbsp;&gt;&nbsp;\");\n        };\n\n\n        /**\n         * This method imposes a set of items based on a given history object\n         *\n         * @method pushHistory\n         * @input {Object} history A history object\n         */\n\n        this.pushHistory = function(history){\n            var historicParams, historicParamItem, group, entryId;\n\n            this.resetLevels();\n\n            for (var n=0,length=history.length; n<length; n++){\n                historicParamItem = history[n];\n                historicParams = paramsManager.mergeParams(utils.lightClone(env.params), historicParamItem.params);\n\n                group = env.connector.getGroup();\n\n                entryId = (group && group.id == historicParamItem.id) ? group.label : historicParamItem.id; // To be improved\n\n                this._addLevelWithParams(paramsManager.convertLocalToRemoteId(entryId), historicParams);\n            }\n        };\n\n\n        /**\n         * This method returns the introducing label of an entry based on its type\n         *\n         * @method _getLabelPrefix\n         * @private\n         * @input {String} type An entry type\n         * @return {String} A label\n         */\n\n        this._getLabelPrefix = function(type){\n            var label;\n\n            switch(type){\n\n                case \"servers\":\n                    label = env.lang.zoneLevelLabel;\n                    break;\n\n                case \"probes\":\n                    label = env.lang.serverLevelLabel;\n                    break;\n\n                case \"instance\":\n                    label = ''; // For now\n                    break;\n            }\n\n            return label + ': ';\n        }\n\n    };\n\n    return BreadcrumbsView;\n});\n","/**\n * Created by mcandela on 19/11/13.\n */\ndefine('view.full-screen',[\n    \"env.utils\"\n], function(utils){\n\n    /**\n     * FullScreenView is the view component for the full screen feature\n     *\n     * @class FullScreenView\n     * @constructor\n     * @module view\n     */\n\n    var FullScreenView = function(env){\n\n        var oldDimensions, oldDomDimensions, oldBackground, config, templateManager, margin, body, fullScreenThrobber,\n            timeOverviewContainer, oldTimeOverviewDimensions, openTimeOverviewImage, $this, isTimeOverviewOpened,\n            windowWidth, windowHeight;\n\n        $this = this;\n        config = env.config;\n        templateManager = env.mainView.templateManager;\n        body = $('body');\n        margin = config.style.fullScreenMargin;\n        fullScreenThrobber = $(templateManager.fullScreenThrobber);\n        timeOverviewContainer = templateManager.dom.timeOverviewContainer;\n        openTimeOverviewImage = $(templateManager.openTimeOverviewImage);\n        isTimeOverviewOpened = config.timeOverviewOpenedByDefaultInFullScreen;\n\n        /**\n         * This method manages the full screen mode\n         *\n         * @method fullScreenMode\n         * @input {Boolean} fullScreen If true the full screen will be enabled\n         */\n\n        this.fullScreenMode = function(fullScreen){\n            if (fullScreen){\n                this._openFullScreen();\n            }else{\n                this._closeFullScreen();\n            }\n        };\n\n\n        /**\n         * This method shows the time overview\n         *\n         * @method openTimeOverviewPanel\n         */\n\n        this.openTimeOverviewPanel = function(){\n            timeOverviewContainer.$.css({\"position\": \"relative\"}).animate({\"height\": oldTimeOverviewDimensions.height}, 800);\n\n            env.mainView.defaultDimensions.height = windowHeight;\n            env.container.height(env.mainView.defaultDimensions.height);\n            env.mainView.redraw(function(){\n                env.container.chart.timeBoundaries.style(\"visibility\", \"visible\");\n            }, this);\n\n            openTimeOverviewImage\n                .css(\"opacity\", 0.8);\n        };\n\n\n        /**\n         * This method hides the time overview\n         *\n         * @method closeTimeOverviewPanel\n         */\n\n        this.closeTimeOverviewPanel = function(){\n            timeOverviewContainer.$.animate({\"height\": \"0\"}, 800);\n\n\n            env.mainView.defaultDimensions.height = windowHeight + config.style.timeOverviewHeight;\n            env.container.height(env.mainView.defaultDimensions.height);\n            env.mainView.redraw();\n\n            env.mainDom.$\n                .append(openTimeOverviewImage);\n\n            env.container.chart.timeBoundaries.style(\"visibility\", \"hidden\");\n\n            openTimeOverviewImage\n                .css(\"opacity\", 1)\n                .off(\"click\")\n                .on(\"click\", function(){\n\n                    if (isTimeOverviewOpened){\n                        $this.closeTimeOverviewPanel();\n                    }else{\n                        $this.openTimeOverviewPanel();\n                    }\n                    isTimeOverviewOpened = !isTimeOverviewOpened;\n                });\n        };\n\n\n        /**\n         * This method starts the full screen mode\n         *\n         * @method _openFullScreen\n         * @private\n         */\n\n        this._openFullScreen = function(){\n            oldDimensions = {width: env.container.width(), height: env.container.height()};\n            oldTimeOverviewDimensions = {width: timeOverviewContainer.$.width(), height: timeOverviewContainer.$.height()};\n            oldDomDimensions = {width: env.externalDom.$.width(), height: env.externalDom.$.height()};\n\n            oldBackground = body.css(\"background\");\n\n            windowWidth = $(window).width() - margin;\n            windowHeight = $(window).height() - margin;\n\n            env.mainView.templateManager.dom.bottomInfoSection.$.hide();\n\n            env.mainView.defaultDimensions.height = windowHeight;\n            env.container.width(windowWidth);\n\n            body.css({\n                \"visibility\": \"hidden\", // Hide the rest of the page\n                \"background\": config.style.fullScreenBackground\n            }).append(fullScreenThrobber);\n\n            timeOverviewContainer.$.addClass(\"floating-panel\");\n\n            env.externalDom.$.css({\n                width: \"auto\",\n                visibility: \"visible\",\n                position: \"fixed\",\n                opacity: 0,\n                \"z-index\": config.style.fullScreenZIndex,\n                top: \"0\",\n                left: \"0\"\n            });\n\n            env.mainView.redraw(function(){\n                env.externalDom.$.animate({\"opacity\": \"1\"}, 400);\n                fullScreenThrobber.remove();\n                if (!isTimeOverviewOpened){\n                    $this.closeTimeOverviewPanel();\n                }\n            }, this);\n        };\n\n\n        /**\n         * This method closes the full screen mode\n         *\n         * @method _closeFullScreen\n         * @private\n         */\n\n        this._closeFullScreen = function(){\n\n            isTimeOverviewOpened = config.timeOverviewOpenedByDefaultInFullScreen;\n            body.css({\n                \"visibility\":  \"visible\",\n                \"background\": oldBackground\n            });\n\n            env.container.chart.timeBoundaries.style(\"visibility\", \"visible\");\n            timeOverviewContainer.$.removeClass(\"floating-panel\").css(\"height\", oldTimeOverviewDimensions.height);\n\n            env.mainView.defaultDimensions = oldDomDimensions;\n            env.container.width(oldDimensions.width);\n\n            env.mainView.templateManager.dom.bottomInfoSection.$.show();\n\n            env.externalDom.$.css({\n                position: \"relative\",\n                visibility: \"visible\",\n                opacity: 0,\n                width: oldDomDimensions.width\n            });\n\n            env.mainView.redraw(function(){\n                env.externalDom.$.animate({\"opacity\": \"1\"}, 400);\n                openTimeOverviewImage.remove();\n            }, this);\n        };\n\n\n    };\n\n    return FullScreenView;\n});\n","(function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f=\"1.10.2\",d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=/\\S+/g,C=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,k=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,E=/^[\\],:{}\\s]*$/,S=/(?:^|:|,)(?:\\s*\\[)+/g,A=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,j=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,D=/^-ms-/,L=/-([\\da-z])/gi,H=function(e,t){return t.toUpperCase()},q=function(e){(a.addEventListener||\"load\"===e.type||\"complete\"===a.readyState)&&(_(),x.ready())},_=function(){a.addEventListener?(a.removeEventListener(\"DOMContentLoaded\",q,!1),e.removeEventListener(\"load\",q,!1)):(a.detachEvent(\"onreadystatechange\",q),e.detachEvent(\"onload\",q))};x.fn=x.prototype={jquery:f,constructor:x,init:function(e,n,r){var i,o;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof x?n[0]:n,x.merge(this,x.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:a,!0)),k.test(i[1])&&x.isPlainObject(n))for(i in n)x.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(o=a.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=a,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:\"\",length:0,toArray:function(){return g.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(g.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},l=2),\"object\"==typeof s||x.isFunction(s)||(s={}),u===l&&(s=this,--l);u>l;l++)if(null!=(o=arguments[l]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(x.isPlainObject(r)||(n=x.isArray(r)))?(n?(n=!1,a=e&&x.isArray(e)?e:[]):a=e&&x.isPlainObject(e)?e:{},s[i]=x.extend(c,a,r)):r!==t&&(s[i]=r));return s},x.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=l),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){if(e===!0?!--x.readyWait:!x.isReady){if(!a.body)return setTimeout(x.ready);x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(a,[x]),x.fn.trigger&&x(a).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===x.type(e)},isArray:Array.isArray||function(e){return\"array\"===x.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?c[y.call(e)]||\"object\":typeof e},isPlainObject:function(e){var n;if(!e||\"object\"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!v.call(e,\"constructor\")&&!v.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(r){return!1}if(x.support.ownLast)for(n in e)return v.call(e,n);for(n in e);return n===t||v.call(e,n)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||a;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=x.trim(n),n&&E.test(n.replace(A,\"@\").replace(j,\"]\").replace(S,\"\")))?Function(\"return \"+n)():(x.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||x.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&x.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(D,\"ms-\").replace(L,H)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:b&&!b.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":b.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(C,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?x.merge(n,\"string\"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(m)return m.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return d.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),x.isFunction(e)?(r=g.call(arguments,2),i=function(){return e.apply(n||this,r.concat(g.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):t},access:function(e,n,r,i,o,a,s){var l=0,u=e.length,c=null==r;if(\"object\"===x.type(r)){o=!0;for(l in r)x.access(e,n,l,r[l],!0,a,s)}else if(i!==t&&(o=!0,x.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(x(e),n)})),n))for(;u>l;l++)n(e[l],r,s?i:i.call(e[l],l,n(e[l],r)));return o?e:c?n.call(e):u?n(e[0],r):a},now:function(){return(new Date).getTime()},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),x.ready.promise=function(t){if(!n)if(n=x.Deferred(),\"complete\"===a.readyState)setTimeout(x.ready);else if(a.addEventListener)a.addEventListener(\"DOMContentLoaded\",q,!1),e.addEventListener(\"load\",q,!1);else{a.attachEvent(\"onreadystatechange\",q),e.attachEvent(\"onload\",q);var r=!1;try{r=null==e.frameElement&&a.documentElement}catch(i){}r&&r.doScroll&&function o(){if(!x.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(o,50)}_(),x.ready()}}()}return n.promise(t)},x.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){c[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=x(a),function(e,t){var n,r,i,o,a,s,l,u,c,p,f,d,h,g,m,y,v,b=\"sizzle\"+-new Date,w=e.document,T=0,C=0,N=st(),k=st(),E=st(),S=!1,A=function(e,t){return e===t?(S=!0,0):0},j=typeof t,D=1<<31,L={}.hasOwnProperty,H=[],q=H.pop,_=H.push,M=H.push,O=H.slice,F=H.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},B=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",P=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",R=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",W=R.replace(\"w\",\"w#\"),$=\"\\\\[\"+P+\"*(\"+R+\")\"+P+\"*(?:([*^$|!~]?=)\"+P+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+W+\")|)|)\"+P+\"*\\\\]\",I=\":(\"+R+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+$.replace(3,8)+\")*)|.*)\\\\)|)\",z=RegExp(\"^\"+P+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+P+\"+$\",\"g\"),X=RegExp(\"^\"+P+\"*,\"+P+\"*\"),U=RegExp(\"^\"+P+\"*([>+~]|\"+P+\")\"+P+\"*\"),V=RegExp(P+\"*[+~]\"),Y=RegExp(\"=\"+P+\"*([^\\\\]'\\\"]*)\"+P+\"*\\\\]\",\"g\"),J=RegExp(I),G=RegExp(\"^\"+W+\"$\"),Q={ID:RegExp(\"^#(\"+R+\")\"),CLASS:RegExp(\"^\\\\.(\"+R+\")\"),TAG:RegExp(\"^(\"+R.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+$),PSEUDO:RegExp(\"^\"+I),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+P+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+P+\"*(?:([+-]|)\"+P+\"*(\\\\d+)|))\"+P+\"*\\\\)|)\",\"i\"),bool:RegExp(\"^(?:\"+B+\")$\",\"i\"),needsContext:RegExp(\"^\"+P+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+P+\"*((?:-\\\\d)?\\\\d*)\"+P+\"*\\\\)|)(?=[^-]|$)\",\"i\")},K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,et=/^(?:input|select|textarea|button)$/i,tt=/^h\\d$/i,nt=/'|\\\\/g,rt=RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+P+\"?|(\"+P+\")|.)\",\"ig\"),it=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(55296|r>>10,56320|1023&r)};try{M.apply(H=O.call(w.childNodes),w.childNodes),H[w.childNodes.length].nodeType}catch(ot){M={apply:H.length?function(e,t){_.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function at(e,t,n,i){var o,a,s,l,u,c,d,m,y,x;if((t?t.ownerDocument||t:w)!==f&&p(t),t=t||f,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(l=t.nodeType)&&9!==l)return[];if(h&&!i){if(o=Z.exec(e))if(s=o[1]){if(9===l){if(a=t.getElementById(s),!a||!a.parentNode)return n;if(a.id===s)return n.push(a),n}else if(t.ownerDocument&&(a=t.ownerDocument.getElementById(s))&&v(t,a)&&a.id===s)return n.push(a),n}else{if(o[2])return M.apply(n,t.getElementsByTagName(e)),n;if((s=o[3])&&r.getElementsByClassName&&t.getElementsByClassName)return M.apply(n,t.getElementsByClassName(s)),n}if(r.qsa&&(!g||!g.test(e))){if(m=d=b,y=t,x=9===l&&e,1===l&&\"object\"!==t.nodeName.toLowerCase()){c=mt(e),(d=t.getAttribute(\"id\"))?m=d.replace(nt,\"\\\\$&\"):t.setAttribute(\"id\",m),m=\"[id='\"+m+\"'] \",u=c.length;while(u--)c[u]=m+yt(c[u]);y=V.test(e)&&t.parentNode||t,x=c.join(\",\")}if(x)try{return M.apply(n,y.querySelectorAll(x)),n}catch(T){}finally{d||t.removeAttribute(\"id\")}}}return kt(e.replace(z,\"$1\"),t,n,i)}function st(){var e=[];function t(n,r){return e.push(n+=\" \")>o.cacheLength&&delete t[e.shift()],t[n]=r}return t}function lt(e){return e[b]=!0,e}function ut(e){var t=f.createElement(\"div\");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ct(e,t){var n=e.split(\"|\"),r=e.length;while(r--)o.attrHandle[n[r]]=t}function pt(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||D)-(~e.sourceIndex||D);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function ft(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function dt(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function ht(e){return lt(function(t){return t=+t,lt(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}s=at.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},r=at.support={},p=at.setDocument=function(e){var n=e?e.ownerDocument||e:w,i=n.defaultView;return n!==f&&9===n.nodeType&&n.documentElement?(f=n,d=n.documentElement,h=!s(n),i&&i.attachEvent&&i!==i.top&&i.attachEvent(\"onbeforeunload\",function(){p()}),r.attributes=ut(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),r.getElementsByTagName=ut(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),r.getElementsByClassName=ut(function(e){return e.innerHTML=\"<div class='a'></div><div class='a i'></div>\",e.firstChild.className=\"i\",2===e.getElementsByClassName(\"i\").length}),r.getById=ut(function(e){return d.appendChild(e).id=b,!n.getElementsByName||!n.getElementsByName(b).length}),r.getById?(o.find.ID=function(e,t){if(typeof t.getElementById!==j&&h){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){return e.getAttribute(\"id\")===t}}):(delete o.find.ID,o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){var n=typeof e.getAttributeNode!==j&&e.getAttributeNode(\"id\");return n&&n.value===t}}),o.find.TAG=r.getElementsByTagName?function(e,n){return typeof n.getElementsByTagName!==j?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},o.find.CLASS=r.getElementsByClassName&&function(e,n){return typeof n.getElementsByClassName!==j&&h?n.getElementsByClassName(e):t},m=[],g=[],(r.qsa=K.test(n.querySelectorAll))&&(ut(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||g.push(\"\\\\[\"+P+\"*(?:value|\"+B+\")\"),e.querySelectorAll(\":checked\").length||g.push(\":checked\")}),ut(function(e){var t=n.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"t\",\"\"),e.querySelectorAll(\"[t^='']\").length&&g.push(\"[*^$]=\"+P+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":enabled\").length||g.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),g.push(\",.*:\")})),(r.matchesSelector=K.test(y=d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&ut(function(e){r.disconnectedMatch=y.call(e,\"div\"),y.call(e,\"[s!='']:x\"),m.push(\"!=\",I)}),g=g.length&&RegExp(g.join(\"|\")),m=m.length&&RegExp(m.join(\"|\")),v=K.test(d.contains)||d.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},A=d.compareDocumentPosition?function(e,t){if(e===t)return S=!0,0;var i=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t);return i?1&i||!r.sortDetached&&t.compareDocumentPosition(e)===i?e===n||v(w,e)?-1:t===n||v(w,t)?1:c?F.call(c,e)-F.call(c,t):0:4&i?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return S=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:c?F.call(c,e)-F.call(c,t):0;if(o===a)return pt(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?pt(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},n):f},at.matches=function(e,t){return at(e,null,null,t)},at.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&p(e),t=t.replace(Y,\"='$1']\"),!(!r.matchesSelector||!h||m&&m.test(t)||g&&g.test(t)))try{var n=y.call(e,t);if(n||r.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(i){}return at(t,f,null,[e]).length>0},at.contains=function(e,t){return(e.ownerDocument||e)!==f&&p(e),v(e,t)},at.attr=function(e,n){(e.ownerDocument||e)!==f&&p(e);var i=o.attrHandle[n.toLowerCase()],a=i&&L.call(o.attrHandle,n.toLowerCase())?i(e,n,!h):t;return a===t?r.attributes||!h?e.getAttribute(n):(a=e.getAttributeNode(n))&&a.specified?a.value:null:a},at.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},at.uniqueSort=function(e){var t,n=[],i=0,o=0;if(S=!r.detectDuplicates,c=!r.sortStable&&e.slice(0),e.sort(A),S){while(t=e[o++])t===e[o]&&(i=n.push(o));while(i--)e.splice(n[i],1)}return e},a=at.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=a(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=a(t);return n},o=at.selectors={cacheLength:50,createPseudo:lt,match:Q,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(rt,it),e[3]=(e[4]||e[5]||\"\").replace(rt,it),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||at.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&at.error(e[0]),e},PSEUDO:function(e){var n,r=!e[5]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]&&e[4]!==t?e[2]=e[4]:r&&J.test(r)&&(n=mt(r,!0))&&(n=r.indexOf(\")\",r.length-n)-r.length)&&(e[0]=e[0].slice(0,n),e[2]=r.slice(0,n)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(rt,it).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=N[e+\" \"];return t||(t=RegExp(\"(^|\"+P+\")\"+e+\"(\"+P+\"|$)\"))&&N(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||typeof e.getAttribute!==j&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=at.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!l&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[b]||(m[b]={}),u=c[e]||[],d=u[0]===T&&u[1],f=u[0]===T&&u[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[T,d,f];break}}else if(v&&(u=(t[b]||(t[b]={}))[e])&&u[0]===T)f=u[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[b]||(p[b]={}))[e]=[T,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=o.pseudos[e]||o.setFilters[e.toLowerCase()]||at.error(\"unsupported pseudo: \"+e);return r[b]?r(t):r.length>1?(n=[e,e,\"\",t],o.setFilters.hasOwnProperty(e.toLowerCase())?lt(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=F.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:lt(function(e){var t=[],n=[],r=l(e.replace(z,\"$1\"));return r[b]?lt(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:lt(function(e){return function(t){return at(e,t).length>0}}),contains:lt(function(e){return function(t){return(t.textContent||t.innerText||a(t)).indexOf(e)>-1}}),lang:lt(function(e){return G.test(e||\"\")||at.error(\"unsupported lang: \"+e),e=e.replace(rt,it).toLowerCase(),function(t){var n;do if(n=h?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===d},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!o.pseudos.empty(e)},header:function(e){return tt.test(e.nodeName)},input:function(e){return et.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:ht(function(){return[0]}),last:ht(function(e,t){return[t-1]}),eq:ht(function(e,t,n){return[0>n?n+t:n]}),even:ht(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:ht(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:ht(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:ht(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}},o.pseudos.nth=o.pseudos.eq;for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[n]=ft(n);for(n in{submit:!0,reset:!0})o.pseudos[n]=dt(n);function gt(){}gt.prototype=o.filters=o.pseudos,o.setFilters=new gt;function mt(e,t){var n,r,i,a,s,l,u,c=k[e+\" \"];if(c)return t?0:c.slice(0);s=e,l=[],u=o.preFilter;while(s){(!n||(r=X.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=U.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(z,\" \")}),s=s.slice(n.length));for(a in o.filter)!(r=Q[a].exec(s))||u[a]&&!(r=u[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?at.error(e):k(e,l).slice(0)}function yt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function vt(e,t,n){var r=t.dir,o=n&&\"parentNode\"===r,a=C++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||o)return e(t,n,i)}:function(t,n,s){var l,u,c,p=T+\" \"+a;if(s){while(t=t[r])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[r])if(1===t.nodeType||o)if(c=t[b]||(t[b]={}),(u=c[r])&&u[0]===p){if((l=u[1])===!0||l===i)return l===!0}else if(u=c[r]=[p],u[1]=e(t,n,s)||i,u[1]===!0)return!0}}function bt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function xt(e,t,n,r,i){var o,a=[],s=0,l=e.length,u=null!=t;for(;l>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),u&&t.push(s));return a}function wt(e,t,n,r,i,o){return r&&!r[b]&&(r=wt(r)),i&&!i[b]&&(i=wt(i,o)),lt(function(o,a,s,l){var u,c,p,f=[],d=[],h=a.length,g=o||Nt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:xt(g,f,e,s,l),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,l),r){u=xt(y,d),r(u,[],s,l),c=u.length;while(c--)(p=u[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){u=[],c=y.length;while(c--)(p=y[c])&&u.push(m[c]=p);i(null,y=[],u,l)}c=y.length;while(c--)(p=y[c])&&(u=i?F.call(o,p):f[c])>-1&&(o[u]=!(a[u]=p))}}else y=xt(y===a?y.splice(h,y.length):y),i?i(null,a,y,l):M.apply(a,y)})}function Tt(e){var t,n,r,i=e.length,a=o.relative[e[0].type],s=a||o.relative[\" \"],l=a?1:0,c=vt(function(e){return e===t},s,!0),p=vt(function(e){return F.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==u)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;i>l;l++)if(n=o.relative[e[l].type])f=[vt(bt(f),n)];else{if(n=o.filter[e[l].type].apply(null,e[l].matches),n[b]){for(r=++l;i>r;r++)if(o.relative[e[r].type])break;return wt(l>1&&bt(f),l>1&&yt(e.slice(0,l-1).concat({value:\" \"===e[l-2].type?\"*\":\"\"})).replace(z,\"$1\"),n,r>l&&Tt(e.slice(l,r)),i>r&&Tt(e=e.slice(r)),i>r&&yt(e))}f.push(n)}return bt(f)}function Ct(e,t){var n=0,r=t.length>0,a=e.length>0,s=function(s,l,c,p,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,C=u,N=s||a&&o.find.TAG(\"*\",d&&l.parentNode||l),k=T+=null==C?1:Math.random()||.1;for(w&&(u=l!==f&&l,i=n);null!=(h=N[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,l,c)){p.push(h);break}w&&(T=k,i=++n)}r&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,r&&b!==v){g=0;while(m=t[g++])m(x,y,l,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=q.call(p));y=xt(y)}M.apply(p,y),w&&!s&&y.length>0&&v+t.length>1&&at.uniqueSort(p)}return w&&(T=k,u=C),x};return r?lt(s):s}l=at.compile=function(e,t){var n,r=[],i=[],o=E[e+\" \"];if(!o){t||(t=mt(e)),n=t.length;while(n--)o=Tt(t[n]),o[b]?r.push(o):i.push(o);o=E(e,Ct(i,r))}return o};function Nt(e,t,n){var r=0,i=t.length;for(;i>r;r++)at(e,t[r],n);return n}function kt(e,t,n,i){var a,s,u,c,p,f=mt(e);if(!i&&1===f.length){if(s=f[0]=f[0].slice(0),s.length>2&&\"ID\"===(u=s[0]).type&&r.getById&&9===t.nodeType&&h&&o.relative[s[1].type]){if(t=(o.find.ID(u.matches[0].replace(rt,it),t)||[])[0],!t)return n;e=e.slice(s.shift().value.length)}a=Q.needsContext.test(e)?0:s.length;while(a--){if(u=s[a],o.relative[c=u.type])break;if((p=o.find[c])&&(i=p(u.matches[0].replace(rt,it),V.test(s[0].type)&&t.parentNode||t))){if(s.splice(a,1),e=i.length&&yt(s),!e)return M.apply(n,i),n;break}}}return l(e,f)(i,t,!h,n,V.test(e)),n}r.sortStable=b.split(\"\").sort(A).join(\"\")===b,r.detectDuplicates=S,p(),r.sortDetached=ut(function(e){return 1&e.compareDocumentPosition(f.createElement(\"div\"))}),ut(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||ct(\"type|href|height|width\",function(e,n,r){return r?t:e.getAttribute(n,\"type\"===n.toLowerCase()?1:2)}),r.attributes&&ut(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||ct(\"value\",function(e,n,r){return r||\"input\"!==e.nodeName.toLowerCase()?t:e.defaultValue}),ut(function(e){return null==e.getAttribute(\"disabled\")})||ct(B,function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&i.specified?i.value:e[n]===!0?n.toLowerCase():null}),x.find=at,x.expr=at.selectors,x.expr[\":\"]=x.expr.pseudos,x.unique=at.uniqueSort,x.text=at.getText,x.isXMLDoc=at.isXML,x.contains=at.contains}(e);var O={};function F(e){var t=O[e]={};return x.each(e.match(T)||[],function(e,n){t[n]=!0}),t}x.Callbacks=function(e){e=\"string\"==typeof e?O[e]||F(e):x.extend({},e);var n,r,i,o,a,s,l=[],u=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=l.length,n=!0;l&&o>a;a++)if(l[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,l&&(u?u.length&&c(u.shift()):r?l=[]:p.disable())},p={add:function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);\"function\"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this},remove:function(){return l&&x.each(arguments,function(e,t){var r;while((r=x.inArray(t,l,r))>-1)l.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?x.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],o=0,this},disable:function(){return l=u=r=t,this},disabled:function(){return!l},lock:function(){return u=t,r||p.disable(),this},locked:function(){return!u},fireWith:function(e,t){return!l||i&&!u||(t=t||[],t=[e,t.slice?t.slice():t],n?u.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},x.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",x.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",x.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",x.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&x.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?x.extend(e,r):r}},i={};return r.pipe=r.then,x.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=g.call(arguments),r=n.length,i=1!==r||e&&x.isFunction(e.promise)?r:0,o=1===i?e:x.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?g.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,l,u;if(r>1)for(s=Array(r),l=Array(r),u=Array(r);r>t;t++)n[t]&&x.isFunction(n[t].promise)?n[t].promise().done(a(t,u,n)).fail(o.reject).progress(a(t,l,s)):--i;return i||o.resolveWith(u,n),o.promise()}}),x.support=function(t){var n,r,o,s,l,u,c,p,f,d=a.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\")||[],r=d.getElementsByTagName(\"a\")[0],!r||!r.style||!n.length)return t;s=a.createElement(\"select\"),u=s.appendChild(a.createElement(\"option\")),o=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t.getSetAttribute=\"t\"!==d.className,t.leadingWhitespace=3===d.firstChild.nodeType,t.tbody=!d.getElementsByTagName(\"tbody\").length,t.htmlSerialize=!!d.getElementsByTagName(\"link\").length,t.style=/top/.test(r.getAttribute(\"style\")),t.hrefNormalized=\"/a\"===r.getAttribute(\"href\"),t.opacity=/^0.5/.test(r.style.opacity),t.cssFloat=!!r.style.cssFloat,t.checkOn=!!o.value,t.optSelected=u.selected,t.enctype=!!a.createElement(\"form\").enctype,t.html5Clone=\"<:nav></:nav>\"!==a.createElement(\"nav\").cloneNode(!0).outerHTML,t.inlineBlockNeedsLayout=!1,t.shrinkWrapBlocks=!1,t.pixelPosition=!1,t.deleteExpando=!0,t.noCloneEvent=!0,t.reliableMarginRight=!0,t.boxSizingReliable=!0,o.checked=!0,t.noCloneChecked=o.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!u.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}o=a.createElement(\"input\"),o.setAttribute(\"value\",\"\"),t.input=\"\"===o.getAttribute(\"value\"),o.value=\"t\",o.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===o.value,o.setAttribute(\"checked\",\"t\"),o.setAttribute(\"name\",\"t\"),l=a.createDocumentFragment(),l.appendChild(o),t.appendChecked=o.checked,t.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip;for(f in x(t))break;return t.ownLast=\"0\"!==f,x(function(){var n,r,o,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",l=a.getElementsByTagName(\"body\")[0];l&&(n=a.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",l.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",o=d.getElementsByTagName(\"td\"),o[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===o[0].offsetHeight,o[0].style.display=\"\",o[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===o[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",x.swap(l,null!=l.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===d.offsetWidth}),e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(a.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(l.style.zoom=1)),l.removeChild(n),n=d=o=r=null)}),n=s=l=u=r=o=null,t\n}({});var B=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,P=/([A-Z])/g;function R(e,n,r,i){if(x.acceptData(e)){var o,a,s=x.expando,l=e.nodeType,u=l?x.cache:e,c=l?e[s]:e[s]&&s;if(c&&u[c]&&(i||u[c].data)||r!==t||\"string\"!=typeof n)return c||(c=l?e[s]=p.pop()||x.guid++:s),u[c]||(u[c]=l?{}:{toJSON:x.noop}),(\"object\"==typeof n||\"function\"==typeof n)&&(i?u[c]=x.extend(u[c],n):u[c].data=x.extend(u[c].data,n)),a=u[c],i||(a.data||(a.data={}),a=a.data),r!==t&&(a[x.camelCase(n)]=r),\"string\"==typeof n?(o=a[n],null==o&&(o=a[x.camelCase(n)])):o=a,o}}function W(e,t,n){if(x.acceptData(e)){var r,i,o=e.nodeType,a=o?x.cache:e,s=o?e[x.expando]:x.expando;if(a[s]){if(t&&(r=n?a[s]:a[s].data)){x.isArray(t)?t=t.concat(x.map(t,x.camelCase)):t in r?t=[t]:(t=x.camelCase(t),t=t in r?[t]:t.split(\" \")),i=t.length;while(i--)delete r[t[i]];if(n?!I(r):!x.isEmptyObject(r))return}(n||(delete a[s].data,I(a[s])))&&(o?x.cleanData([e],!0):x.support.deleteExpando||a!=a.window?delete a[s]:a[s]=null)}}}x.extend({cache:{},noData:{applet:!0,embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"},hasData:function(e){return e=e.nodeType?x.cache[e[x.expando]]:e[x.expando],!!e&&!I(e)},data:function(e,t,n){return R(e,t,n)},removeData:function(e,t){return W(e,t)},_data:function(e,t,n){return R(e,t,n,!0)},_removeData:function(e,t){return W(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&x.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),x.fn.extend({data:function(e,n){var r,i,o=null,a=0,s=this[0];if(e===t){if(this.length&&(o=x.data(s),1===s.nodeType&&!x._data(s,\"parsedAttrs\"))){for(r=s.attributes;r.length>a;a++)i=r[a].name,0===i.indexOf(\"data-\")&&(i=x.camelCase(i.slice(5)),$(s,i,o[i]));x._data(s,\"parsedAttrs\",!0)}return o}return\"object\"==typeof e?this.each(function(){x.data(this,e)}):arguments.length>1?this.each(function(){x.data(this,e,n)}):s?$(s,e,x.data(s,e)):null},removeData:function(e){return this.each(function(){x.removeData(this,e)})}});function $(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(P,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:B.test(r)?x.parseJSON(r):r}catch(o){}x.data(e,n,r)}else r=t}return r}function I(e){var t;for(t in e)if((\"data\"!==t||!x.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}x.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=x._data(e,n),r&&(!i||x.isArray(r)?i=x._data(e,n,x.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=x.queue(e,t),r=n.length,i=n.shift(),o=x._queueHooks(e,t),a=function(){x.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return x._data(e,n)||x._data(e,n,{empty:x.Callbacks(\"once memory\").add(function(){x._removeData(e,t+\"queue\"),x._removeData(e,n)})})}}),x.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?x.queue(this[0],e):n===t?this:this.each(function(){var t=x.queue(this,e,n);x._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&x.dequeue(this,e)})},dequeue:function(e){return this.each(function(){x.dequeue(this,e)})},delay:function(e,t){return e=x.fx?x.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=x.Deferred(),a=this,s=this.length,l=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=x._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(l));return l(),o.promise(n)}});var z,X,U=/[\\t\\r\\n\\f]/g,V=/\\r/g,Y=/^(?:input|select|textarea|button|object)$/i,J=/^(?:a|area)$/i,G=/^(?:checked|selected)$/i,Q=x.support.getSetAttribute,K=x.support.input;x.fn.extend({attr:function(e,t){return x.access(this,x.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){x.removeAttr(this,e)})},prop:function(e,t){return x.access(this,x.prop,e,t,arguments.length>1)},removeProp:function(e){return e=x.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).addClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=x.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=0===arguments.length||\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).removeClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?x.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e;return\"boolean\"==typeof t&&\"string\"===n?t?this.addClass(e):this.removeClass(e):x.isFunction(e)?this.each(function(n){x(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var t,r=0,o=x(this),a=e.match(T)||[];while(t=a[r++])o.hasClass(t)?o.removeClass(t):o.addClass(t)}else(n===i||\"boolean\"===n)&&(this.className&&x._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":x._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(U,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=x.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,x(this).val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":x.isArray(o)&&(o=x.map(o,function(e){return null==e?\"\":e+\"\"})),r=x.valHooks[this.type]||x.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=x.valHooks[o.type]||x.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(V,\"\"):null==n?\"\":n)}}}),x.extend({valHooks:{option:{get:function(e){var t=x.find.attr(e,\"value\");return null!=t?t:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,l=0>i?s:o?i:0;for(;s>l;l++)if(n=r[l],!(!n.selected&&l!==i||(x.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&x.nodeName(n.parentNode,\"optgroup\"))){if(t=x(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n,r,i=e.options,o=x.makeArray(t),a=i.length;while(a--)r=i[a],(r.selected=x.inArray(x(r).val(),o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}},attr:function(e,n,r){var o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute===i?x.prop(e,n,r):(1===s&&x.isXMLDoc(e)||(n=n.toLowerCase(),o=x.attrHooks[n]||(x.expr.match.bool.test(n)?X:z)),r===t?o&&\"get\"in o&&null!==(a=o.get(e,n))?a:(a=x.find.attr(e,n),null==a?t:a):null!==r?o&&\"set\"in o&&(a=o.set(e,r,n))!==t?a:(e.setAttribute(n,r+\"\"),r):(x.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(T);if(o&&1===e.nodeType)while(n=o[i++])r=x.propFix[n]||n,x.expr.match.bool.test(n)?K&&Q||!G.test(n)?e[r]=!1:e[x.camelCase(\"default-\"+n)]=e[r]=!1:x.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!x.support.radioValue&&\"radio\"===t&&x.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!x.isXMLDoc(e),a&&(n=x.propFix[n]||n,o=x.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var t=x.find.attr(e,\"tabindex\");return t?parseInt(t,10):Y.test(e.nodeName)||J.test(e.nodeName)&&e.href?0:-1}}}}),X={set:function(e,t,n){return t===!1?x.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&x.propFix[n]||n,n):e[x.camelCase(\"default-\"+n)]=e[n]=!0,n}},x.each(x.expr.match.bool.source.match(/\\w+/g),function(e,n){var r=x.expr.attrHandle[n]||x.find.attr;x.expr.attrHandle[n]=K&&Q||!G.test(n)?function(e,n,i){var o=x.expr.attrHandle[n],a=i?t:(x.expr.attrHandle[n]=t)!=r(e,n,i)?n.toLowerCase():null;return x.expr.attrHandle[n]=o,a}:function(e,n,r){return r?t:e[x.camelCase(\"default-\"+n)]?n.toLowerCase():null}}),K&&Q||(x.attrHooks.value={set:function(e,n,r){return x.nodeName(e,\"input\")?(e.defaultValue=n,t):z&&z.set(e,n,r)}}),Q||(z={set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},x.expr.attrHandle.id=x.expr.attrHandle.name=x.expr.attrHandle.coords=function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&\"\"!==i.value?i.value:null},x.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&r.specified?r.value:t},set:z.set},x.attrHooks.contenteditable={set:function(e,t,n){z.set(e,\"\"===t?!1:t,n)}},x.each([\"width\",\"height\"],function(e,n){x.attrHooks[n]={set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}}})),x.support.hrefNormalized||x.each([\"href\",\"src\"],function(e,t){x.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),x.support.style||(x.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),x.support.optSelected||(x.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),x.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){x.propFix[this.toLowerCase()]=this}),x.support.enctype||(x.propFix.enctype=\"encoding\"),x.each([\"radio\",\"checkbox\"],function(){x.valHooks[this]={set:function(e,n){return x.isArray(n)?e.checked=x.inArray(x(e).val(),n)>=0:t}},x.support.checkOn||(x.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}function at(){try{return a.activeElement}catch(e){}}x.event={global:{},add:function(e,n,r,o,a){var s,l,u,c,p,f,d,h,g,m,y,v=x._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=x.guid++),(l=v.events)||(l=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof x===i||e&&x.event.triggered===e.type?t:x.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(T)||[\"\"],u=n.length;while(u--)s=rt.exec(n[u])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),g&&(p=x.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=x.event.special[g]||{},d=x.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&x.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=l[g])||(h=l[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),x.event.global[g]=!0);e=null}},remove:function(e,t,n,r,i){var o,a,s,l,u,c,p,f,d,h,g,m=x.hasData(e)&&x._data(e);if(m&&(c=m.events)){t=(t||\"\").match(T)||[\"\"],u=t.length;while(u--)if(s=rt.exec(t[u])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=x.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),l=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));l&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||x.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)x.event.remove(e,d+t[u],n,r,!0);x.isEmptyObject(c)&&(delete m.handle,x._removeData(e,\"events\"))}},trigger:function(n,r,i,o){var s,l,u,c,p,f,d,h=[i||a],g=v.call(n,\"type\")?n.type:n,m=v.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(u=f=i=i||a,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+x.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),l=0>g.indexOf(\":\")&&\"on\"+g,n=n[x.expando]?n:new x.Event(g,\"object\"==typeof n&&n),n.isTrigger=o?2:3,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:x.makeArray(r,[n]),p=x.event.special[g]||{},o||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!o&&!p.noBubble&&!x.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(u=u.parentNode);u;u=u.parentNode)h.push(u),f=u;f===(i.ownerDocument||a)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((u=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(x._data(u,\"events\")||{})[n.type]&&x._data(u,\"handle\"),s&&s.apply(u,r),s=l&&u[l],s&&x.acceptData(u)&&s.apply&&s.apply(u,r)===!1&&n.preventDefault();if(n.type=g,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(h.pop(),r)===!1)&&x.acceptData(i)&&l&&i[g]&&!x.isWindow(i)){f=i[l],f&&(i[l]=null),x.event.triggered=g;try{i[g]()}catch(y){}x.event.triggered=t,f&&(i[l]=f)}return n.result}},dispatch:function(e){e=x.event.fix(e);var n,r,i,o,a,s=[],l=g.call(arguments),u=(x._data(this,\"events\")||{})[e.type]||[],c=x.event.special[e.type]||{};if(l[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=x.event.handlers.call(this,e,u),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((x.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,l),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],l=n.delegateCount,u=e.target;if(l&&u.nodeType&&(!e.button||\"click\"!==e.type))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(u.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;l>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?x(r,this).index(u)>=0:x.find(r,this,null,[u]).length),o[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return n.length>l&&s.push({elem:this,handlers:n.slice(l)}),s},fix:function(e){if(e[x.expando])return e;var t,n,r,i=e.type,o=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new x.Event(o),t=r.length;while(t--)n=r[t],e[n]=o[n];return e.target||(e.target=o.srcElement||a),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,o):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,o,s=n.button,l=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||a,o=i.documentElement,r=i.body,e.pageX=n.clientX+(o&&o.scrollLeft||r&&r.scrollLeft||0)-(o&&o.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(o&&o.scrollTop||r&&r.scrollTop||0)-(o&&o.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&l&&(e.relatedTarget=l===e.target?n.toElement:l),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==at()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===at()&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},click:{trigger:function(){return x.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t},_default:function(e){return x.nodeName(e.target,\"a\")}},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=x.extend(new x.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?x.event.trigger(i,null,t):x.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},x.removeEvent=a.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},x.Event=function(e,n){return this instanceof x.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&x.extend(this,n),this.timeStamp=e&&e.timeStamp||x.now(),this[x.expando]=!0,t):new x.Event(e,n)},x.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},x.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){x.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!x.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),x.support.submitBubbles||(x.event.special.submit={setup:function(){return x.nodeName(this,\"form\")?!1:(x.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=x.nodeName(n,\"input\")||x.nodeName(n,\"button\")?n.form:t;r&&!x._data(r,\"submitBubbles\")&&(x.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),x._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&x.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return x.nodeName(this,\"form\")?!1:(x.event.remove(this,\"._submit\"),t)}}),x.support.changeBubbles||(x.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(x.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),x.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),x.event.simulate(\"change\",this,e,!0)})),!1):(x.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!x._data(t,\"changeBubbles\")&&(x.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||x.event.simulate(\"change\",this.parentNode,e,!0)}),x._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return x.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),x.support.focusinBubbles||x.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){x.event.simulate(t,e.target,x.event.fix(e),!0)};x.event.special[t]={setup:function(){0===n++&&a.addEventListener(e,r,!0)},teardown:function(){0===--n&&a.removeEventListener(e,r,!0)}}}),x.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return x().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=x.guid++)),this.each(function(){x.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,x(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){x.event.remove(this,e,r,n)})},trigger:function(e,t){return this.each(function(){x.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?x.event.trigger(e,n,r,!0):t}});var st=/^.[^:#\\[\\.,]*$/,lt=/^(?:parents|prev(?:Until|All))/,ut=x.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};x.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if(\"string\"!=typeof e)return this.pushStack(x(e).filter(function(){for(t=0;i>t;t++)if(x.contains(r[t],this))return!0}));for(t=0;i>t;t++)x.find(e,r[t],n);return n=this.pushStack(i>1?x.unique(n):n),n.selector=this.selector?this.selector+\" \"+e:e,n},has:function(e){var t,n=x(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(x.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e||[],!0))},filter:function(e){return this.pushStack(ft(this,e||[],!1))},is:function(e){return!!ft(this,\"string\"==typeof e&&ut.test(e)?x(e):e||[],!1).length},closest:function(e,t){var n,r=0,i=this.length,o=[],a=ut.test(e)||\"string\"!=typeof e?x(e,t||this.context):0;for(;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(11>n.nodeType&&(a?a.index(n)>-1:1===n.nodeType&&x.find.matchesSelector(n,e))){n=o.push(n);break}return this.pushStack(o.length>1?x.unique(o):o)},index:function(e){return e?\"string\"==typeof e?x.inArray(this[0],x(e)):x.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?x(e,t):x.makeArray(e&&e.nodeType?[e]:e),r=x.merge(this.get(),n);return this.pushStack(x.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}x.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return x.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return x.dir(e,\"nextSibling\")},prevAll:function(e){return x.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return x.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return x.dir(e,\"previousSibling\",n)},siblings:function(e){return x.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return x.sibling(e.firstChild)},contents:function(e){return x.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:x.merge([],e.childNodes)}},function(e,t){x.fn[e]=function(n,r){var i=x.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(i=x.filter(r,i)),this.length>1&&(ct[e]||(i=x.unique(i)),lt.test(e)&&(i=i.reverse())),this.pushStack(i)}}),x.extend({filter:function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?x.find.matchesSelector(r,e)?[r]:[]:x.find.matches(e,x.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!x(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(x.isFunction(t))return x.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return x.grep(e,function(e){return e===t!==n});if(\"string\"==typeof t){if(st.test(t))return x.filter(t,e,n);t=x.filter(t,e)}return x.grep(e,function(e){return x.inArray(e,t)>=0!==n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Ct=/^(?:checkbox|radio)$/i,Nt=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:x.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(a),Dt=jt.appendChild(a.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,x.fn.extend({text:function(e){return x.access(this,function(e){return e===t?x.text(this):this.empty().append((this[0]&&this[0].ownerDocument||a).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=e?x.filter(e,this):this,i=0;for(;null!=(n=r[i]);i++)t||1!==n.nodeType||x.cleanData(Ft(n)),n.parentNode&&(t&&x.contains(n.ownerDocument,n)&&_t(Ft(n,\"script\")),n.parentNode.removeChild(n));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&x.cleanData(Ft(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&x.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return x.clone(this,e,t)})},html:function(e){return x.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!x.support.htmlSerialize&&mt.test(e)||!x.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(x.cleanData(Ft(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=x.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],i=e[t++];i&&(r&&r.parentNode!==i&&(r=this.nextSibling),x(this).remove(),i.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=d.apply([],e);var r,i,o,a,s,l,u=0,c=this.length,p=this,f=c-1,h=e[0],g=x.isFunction(h);if(g||!(1>=c||\"string\"!=typeof h||x.support.checkClone)&&Nt.test(h))return this.each(function(r){var i=p.eq(r);g&&(e[0]=h.call(this,r,i.html())),i.domManip(e,t,n)});if(c&&(l=x.buildFragment(e,this[0].ownerDocument,!1,!n&&this),r=l.firstChild,1===l.childNodes.length&&(l=r),r)){for(a=x.map(Ft(l,\"script\"),Ht),o=a.length;c>u;u++)i=l,u!==f&&(i=x.clone(i,!0,!0),o&&x.merge(a,Ft(i,\"script\"))),t.call(this[u],i,u);if(o)for(s=a[a.length-1].ownerDocument,x.map(a,qt),u=0;o>u;u++)i=a[u],kt.test(i.type||\"\")&&!x._data(i,\"globalEval\")&&x.contains(s,i)&&(i.src?x._evalUrl(i.src):x.globalEval((i.text||i.textContent||i.innerHTML||\"\").replace(St,\"\")));l=r=null}return this}});function Lt(e,t){return x.nodeName(e,\"table\")&&x.nodeName(1===t.nodeType?t:t.firstChild,\"tr\")?e.getElementsByTagName(\"tbody\")[0]||e.appendChild(e.ownerDocument.createElement(\"tbody\")):e}function Ht(e){return e.type=(null!==x.find.attr(e,\"type\"))+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function _t(e,t){var n,r=0;for(;null!=(n=e[r]);r++)x._data(n,\"globalEval\",!t||x._data(t[r],\"globalEval\"))}function Mt(e,t){if(1===t.nodeType&&x.hasData(e)){var n,r,i,o=x._data(e),a=x._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)x.event.add(t,n,s[n][r])}a.data&&(a.data=x.extend({},a.data))}}function Ot(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!x.support.noCloneEvent&&t[x.expando]){i=x._data(t);for(r in i.events)x.removeEvent(t,r,i.handle);t.removeAttribute(x.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),x.support.html5Clone&&e.innerHTML&&!x.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Ct.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}x.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){x.fn[e]=function(e){var n,r=0,i=[],o=x(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),x(o[r])[t](n),h.apply(i,n.get());return this.pushStack(i)}});function Ft(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||x.nodeName(o,n)?s.push(o):x.merge(s,Ft(o,n));return n===t||n&&x.nodeName(e,n)?x.merge([e],s):s}function Bt(e){Ct.test(e.type)&&(e.defaultChecked=e.checked)}x.extend({clone:function(e,t,n){var r,i,o,a,s,l=x.contains(e.ownerDocument,e);if(x.support.html5Clone||x.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(x.support.noCloneEvent&&x.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||x.isXMLDoc(e)))for(r=Ft(o),s=Ft(e),a=0;null!=(i=s[a]);++a)r[a]&&Ot(i,r[a]);if(t)if(n)for(s=s||Ft(e),r=r||Ft(o),a=0;null!=(i=s[a]);a++)Mt(i,r[a]);else Mt(e,o);return r=Ft(o,\"script\"),r.length>0&&_t(r,!l&&Ft(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,l,u,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===x.type(o))x.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),l=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[l]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!x.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!x.support.tbody){o=\"table\"!==l||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)x.nodeName(u=o.childNodes[i],\"tbody\")&&!u.childNodes.length&&o.removeChild(u)}x.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),x.support.appendChecked||x.grep(Ft(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===x.inArray(o,r))&&(a=x.contains(o.ownerDocument,o),s=Ft(f.appendChild(o),\"script\"),a&&_t(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,l=x.expando,u=x.cache,c=x.support.deleteExpando,f=x.event.special;for(;null!=(n=e[s]);s++)if((t||x.acceptData(n))&&(o=n[l],a=o&&u[o])){if(a.events)for(r in a.events)f[r]?x.event.remove(n,r):x.removeEvent(n,r,a.handle);\nu[o]&&(delete u[o],c?delete n[l]:typeof n.removeAttribute!==i?n.removeAttribute(l):n[l]=null,p.push(o))}},_evalUrl:function(e){return x.ajax({url:e,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})}}),x.fn.extend({wrapAll:function(e){if(x.isFunction(e))return this.each(function(t){x(this).wrapAll(e.call(this,t))});if(this[0]){var t=x(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return x.isFunction(e)?this.each(function(t){x(this).wrapInner(e.call(this,t))}):this.each(function(){var t=x(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=x.isFunction(e);return this.each(function(n){x(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){x.nodeName(this,\"body\")||x(this).replaceWith(this.childNodes)}).end()}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+w+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+w+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+w+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===x.css(e,\"display\")||!x.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=x._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=x._data(r,\"olddisplay\",ln(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&x._data(r,\"olddisplay\",i?n:x.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}x.fn.extend({css:function(e,n){return x.access(this,function(e,n,r){var i,o,a={},s=0;if(x.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=x.css(e,n[s],!1,o);return a}return r!==t?x.style(e,n,r):x.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){nn(this)?x(this).show():x(this).hide()})}}),x.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":x.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,l=x.camelCase(n),u=e.style;if(n=x.cssProps[l]||(x.cssProps[l]=tn(u,l)),s=x.cssHooks[n]||x.cssHooks[l],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:u[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(x.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||x.cssNumber[l]||(r+=\"px\"),x.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(u[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{u[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,l=x.camelCase(n);return n=x.cssProps[l]||(x.cssProps[l]=tn(e.style,l)),s=x.cssHooks[n]||x.cssHooks[l],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||x.isNumeric(o)?o||0:a):a}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s.getPropertyValue(n)||s[n]:t,u=e.style;return s&&(\"\"!==l||x.contains(e.ownerDocument,e)||(l=x.style(e,n)),Yt.test(l)&&Ut.test(n)&&(i=u.width,o=u.minWidth,a=u.maxWidth,u.minWidth=u.maxWidth=u.width=l,l=s.width,u.width=i,u.minWidth=o,u.maxWidth=a)),l}):a.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s[n]:t,u=e.style;return null==l&&u&&u[n]&&(l=u[n]),Yt.test(l)&&!zt.test(n)&&(i=u.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),u.left=\"fontSize\"===n?\"1em\":l,l=u.pixelLeft+\"px\",u.left=i,a&&(o.left=a)),\"\"===l?\"auto\":l});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=x.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=x.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=x.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(x.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function ln(e){var t=a,n=Gt[e];return n||(n=un(e,t),\"none\"!==n&&n||(Pt=(Pt||x(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=un(e,t),Pt.detach()),Gt[e]=n),n}function un(e,t){var n=x(t.createElement(e)).appendTo(t.body),r=x.css(n[0],\"display\");return n.remove(),r}x.each([\"height\",\"width\"],function(e,n){x.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(x.css(e,\"display\"))?x.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,i),i):0)}}}),x.support.opacity||(x.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=x.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===x.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),x(function(){x.support.reliableMarginRight||(x.cssHooks.marginRight={get:function(e,n){return n?x.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!x.support.pixelPosition&&x.fn.position&&x.each([\"top\",\"left\"],function(e,n){x.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?x(e).position()[n]+\"px\":r):t}}})}),x.expr&&x.expr.filters&&(x.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!x.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||x.css(e,\"display\"))},x.expr.filters.visible=function(e){return!x.expr.filters.hidden(e)}),x.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){x.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(x.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;x.fn.extend({serialize:function(){return x.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=x.prop(this,\"elements\");return e?x.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!x(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Ct.test(e))}).map(function(e,t){var n=x(this).val();return null==n?null:x.isArray(n)?x.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),x.param=function(e,n){var r,i=[],o=function(e,t){t=x.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=x.ajaxSettings&&x.ajaxSettings.traditional),x.isArray(e)||e.jquery&&!x.isPlainObject(e))x.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(x.isArray(t))x.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==x.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}x.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){x.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),x.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}});var mn,yn,vn=x.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Cn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Nn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=x.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=o.href}catch(Ln){yn=a.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(T)||[];if(x.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(l){var u;return o[l]=!0,x.each(e[l]||[],function(e,l){var c=l(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(u=c):t:(n.dataTypes.unshift(c),s(c),!1)}),u}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function _n(e,n){var r,i,o=x.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&x.extend(!0,e,r),e}x.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,l=e.indexOf(\" \");return l>=0&&(i=e.slice(l,e.length),e=e.slice(0,l)),x.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&x.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?x(\"<div>\").append(x.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},x.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){x.fn[t]=function(e){return this.on(t,e)}}),x.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Cn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":x.parseJSON,\"text xml\":x.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?_n(_n(e,x.ajaxSettings),t):_n(x.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,l,u,c,p=x.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?x(f):x.event,h=x.Deferred(),g=x.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},b=0,w=\"canceled\",C={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)m[t]=[m[t],e[t]];else C.always(e[C.status]);return this},abort:function(e){var t=e||w;return u&&u.abort(t),k(0,t),this}};if(h.promise(C).complete=g.add,C.success=C.done,C.error=C.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=x.trim(p.dataType||\"*\").toLowerCase().match(T)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?\"80\":\"443\"))===(mn[3]||(\"http:\"===mn[1]?\"80\":\"443\")))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=x.param(p.data,p.traditional)),qn(An,p,n,C),2===b)return C;l=p.global,l&&0===x.active++&&x.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Nn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(x.lastModified[o]&&C.setRequestHeader(\"If-Modified-Since\",x.lastModified[o]),x.etag[o]&&C.setRequestHeader(\"If-None-Match\",x.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&C.setRequestHeader(\"Content-Type\",p.contentType),C.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)C.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,C,p)===!1||2===b))return C.abort();w=\"abort\";for(i in{success:1,error:1,complete:1})C[i](p[i]);if(u=qn(jn,p,n,C)){C.readyState=1,l&&d.trigger(\"ajaxSend\",[C,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){C.abort(\"timeout\")},p.timeout));try{b=1,u.send(y,k)}catch(N){if(!(2>b))throw N;k(-1,N)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,N=n;2!==b&&(b=2,s&&clearTimeout(s),u=t,a=i||\"\",C.readyState=e>0?4:0,c=e>=200&&300>e||304===e,r&&(w=Mn(p,C,r)),w=On(p,w,C,c),c?(p.ifModified&&(T=C.getResponseHeader(\"Last-Modified\"),T&&(x.lastModified[o]=T),T=C.getResponseHeader(\"etag\"),T&&(x.etag[o]=T)),204===e||\"HEAD\"===p.type?N=\"nocontent\":304===e?N=\"notmodified\":(N=w.state,y=w.data,v=w.error,c=!v)):(v=N,(e||!N)&&(N=\"error\",0>e&&(e=0))),C.status=e,C.statusText=(n||N)+\"\",c?h.resolveWith(f,[y,N,C]):h.rejectWith(f,[C,N,v]),C.statusCode(m),m=t,l&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[C,p,c?y:v]),g.fireWith(f,[C,N]),l&&(d.trigger(\"ajaxComplete\",[C,p]),--x.active||x.event.trigger(\"ajaxStop\")))}return C},getJSON:function(e,t,n){return x.get(e,t,n,\"json\")},getScript:function(e,n){return x.get(e,t,n,\"script\")}}),x.each([\"get\",\"post\"],function(e,n){x[n]=function(e,r,i,o){return x.isFunction(r)&&(o=o||i,i=r,r=t),x.ajax({url:e,type:n,dataType:o,data:r,success:i})}});function Mn(e,n,r){var i,o,a,s,l=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in l)if(l[s]&&l[s].test(o)){u.unshift(s);break}if(u[0]in r)a=u[0];else{for(s in r){if(!u[0]||e.converters[s+\" \"+u[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==u[0]&&u.unshift(a),r[a]):t}function On(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if(\"*\"===o)o=l;else if(\"*\"!==l&&l!==o){if(a=u[l+\" \"+o]||u[\"* \"+o],!a)for(i in u)if(s=i.split(\" \"),s[1]===o&&(a=u[l+\" \"+s[0]]||u[\"* \"+s[0]])){a===!0?a=u[i]:u[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(p){return{state:\"parsererror\",error:a?p:\"No conversion from \"+l+\" to \"+o}}}return{state:\"success\",data:t}}x.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return x.globalEval(e),e}}}),x.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),x.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=a.head||x(\"head\")[0]||a.documentElement;return{send:function(t,i){n=a.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var Fn=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;x.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Fn.pop()||x.expando+\"_\"+vn++;return this[e]=!0,e}}),x.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,l=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return l||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=x.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,l?n[l]=n[l].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||x.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,Fn.push(o)),s&&x.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}x.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=x.ajaxSettings.xhr(),x.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=x.support.ajax=!!Rn,Rn&&x.ajaxTransport(function(n){if(!n.crossDomain||x.support.cors){var r;return{send:function(i,o){var a,s,l=n.xhr();if(n.username?l.open(n.type,n.url,n.async,n.username,n.password):l.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)l[s]=n.xhrFields[s];n.mimeType&&l.overrideMimeType&&l.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)l.setRequestHeader(s,i[s])}catch(u){}l.send(n.hasContent&&n.data||null),r=function(e,i){var s,u,c,p;try{if(r&&(i||4===l.readyState))if(r=t,a&&(l.onreadystatechange=x.noop,$n&&delete Pn[a]),i)4!==l.readyState&&l.abort();else{p={},s=l.status,u=l.getAllResponseHeaders(),\"string\"==typeof l.responseText&&(p.text=l.responseText);try{c=l.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,u)},n.async?4===l.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},x(e).unload($n)),Pn[a]=r),l.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+w+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Yn.exec(t),o=i&&i[3]||(x.cssNumber[e]?\"\":\"px\"),a=(x.cssNumber[e]||\"px\"!==o&&+r)&&Yn.exec(x.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==o){o=o||a[3],i=i||[],a=+r||1;do s=s||\".5\",a/=s,x.style(n.elem,e,a+o);while(s!==(s=n.cur()/r)&&1!==s&&--l)}return i&&(a=n.start=+a||+r||0,n.unit=o,n.end=i[1]?a+(i[1]+1)*i[2]:+i[2]),n}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=x.now()}function Zn(e,t,n){var r,i=(Qn[t]||[]).concat(Qn[\"*\"]),o=0,a=i.length;for(;a>o;o++)if(r=i[o].call(n,t,e))return r}function er(e,t,n){var r,i,o=0,a=Gn.length,s=x.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;for(;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:x.extend({},t),opts:x.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=x.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),c=u.props;for(tr(c,u.opts.specialEasing);a>o;o++)if(r=Gn[o].call(u,e,c,u.opts))return r;return x.map(c,Zn,u),x.isFunction(u.opts.start)&&u.opts.start.call(e,u),x.fx.timer(x.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function tr(e,t){var n,r,i,o,a;for(n in e)if(r=x.camelCase(n),i=t[r],o=e[n],x.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=x.cssHooks[r],a&&\"expand\"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}x.Animation=x.extend(er,{tweener:function(e,t){x.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,l,u=this,c={},p=e.style,f=e.nodeType&&nn(e),d=x._data(e,\"fxshow\");n.queue||(s=x._queueHooks(e,\"fx\"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,u.always(function(){u.always(function(){s.unqueued--,x.queue(e,\"fx\").length||s.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],\"inline\"===x.css(e,\"display\")&&\"none\"===x.css(e,\"float\")&&(x.support.inlineBlockNeedsLayout&&\"inline\"!==ln(e.nodeName)?p.zoom=1:p.display=\"inline-block\")),n.overflow&&(p.overflow=\"hidden\",x.support.shrinkWrapBlocks||u.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Vn.exec(i)){if(delete t[r],o=o||\"toggle\"===i,i===(f?\"hide\":\"show\"))continue;c[r]=d&&d[r]||x.style(e,r)}if(!x.isEmptyObject(c)){d?\"hidden\"in d&&(f=d.hidden):d=x._data(e,\"fxshow\",{}),o&&(d.hidden=!f),f?x(e).show():u.done(function(){x(e).hide()}),u.done(function(){var t;x._removeData(e,\"fxshow\");for(t in c)x.style(e,t,c[t])});for(r in c)a=Zn(f?d[r]:0,r,u),r in d||(d[r]=a.start,f&&(a.end=a.start,a.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}x.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(x.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?x.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=x.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){x.fx.step[e.prop]?x.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[x.cssProps[e.prop]]||x.cssHooks[e.prop])?x.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},x.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=x.fn[t];x.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),x.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=x.isEmptyObject(e),o=x.speed(t,n,r),a=function(){var t=er(this,x.extend({},e),o);(i||x._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=x.timers,a=x._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&x.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=x._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=x.timers,a=r?r.length:0;for(n.finish=!0,x.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}x.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){x.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),x.speed=function(e,t,n){var r=e&&\"object\"==typeof e?x.extend({},e):{complete:n||!n&&t||x.isFunction(e)&&e,duration:e,easing:n&&t||t&&!x.isFunction(t)&&t};return r.duration=x.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in x.fx.speeds?x.fx.speeds[r.duration]:x.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){x.isFunction(r.old)&&r.old.call(this),r.queue&&x.dequeue(this,r.queue)},r},x.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},x.timers=[],x.fx=rr.prototype.init,x.fx.tick=function(){var e,n=x.timers,r=0;for(Xn=x.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||x.fx.stop(),Xn=t},x.fx.timer=function(e){e()&&x.timers.push(e)&&x.fx.start()},x.fx.interval=13,x.fx.start=function(){Un||(Un=setInterval(x.fx.tick,x.fx.interval))},x.fx.stop=function(){clearInterval(Un),Un=null},x.fx.speeds={slow:600,fast:200,_default:400},x.fx.step={},x.expr&&x.expr.filters&&(x.expr.filters.animated=function(e){return x.grep(x.timers,function(t){return e===t.elem}).length}),x.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){x.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,x.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},x.offset={setOffset:function(e,t,n){var r=x.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=x(e),o=i.offset(),a=x.css(e,\"top\"),s=x.css(e,\"left\"),l=(\"absolute\"===r||\"fixed\"===r)&&x.inArray(\"auto\",[a,s])>-1,u={},c={},p,f;l?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),x.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(u.top=t.top-o.top+p),null!=t.left&&(u.left=t.left-o.left+f),\"using\"in t?t.using.call(e,u):i.css(u)}},x.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===x.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),x.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=x.css(e[0],\"borderTopWidth\",!0),n.left+=x.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-x.css(r,\"marginTop\",!0),left:t.left-n.left-x.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||s;while(e&&!x.nodeName(e,\"html\")&&\"static\"===x.css(e,\"position\"))e=e.offsetParent;return e||s})}}),x.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);x.fn[e]=function(i){return x.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?x(a).scrollLeft():o,r?o:x(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return x.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}x.each({Height:\"height\",Width:\"width\"},function(e,n){x.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){x.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return x.access(this,function(n,r,i){var o;return x.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?x.css(n,r,s):x.style(n,r,i,s)},n,a?i:t,a,null)}})}),x.fn.size=function(){return this.length},x.fn.andSelf=x.fn.addBack,\"object\"==typeof module&&module&&\"object\"==typeof module.exports?module.exports=x:(e.jQuery=e.$=x,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return x}))})(window);\n\ndefine(\"lib.jquery\", function(){});\n\n","(function(root) {\ndefine(\"lib.jquery-ui\", [\"lib.jquery\"], function() {\n  return (function() {\n/*! jQuery UI - v1.10.4 - 2014-01-17\n * http://jqueryui.com\n * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.slider.js, jquery.ui.sortable.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js\n * Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */\n\n(function(e,t){function i(t,i){var s,a,o,r=t.nodeName.toLowerCase();return\"area\"===r?(s=t.parentNode,a=s.name,t.href&&a&&\"map\"===s.nodeName.toLowerCase()?(o=e(\"img[usemap=#\"+a+\"]\")[0],!!o&&n(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:\"a\"===r?t.href||i:i)&&n(t)}function n(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return\"hidden\"===e.css(this,\"visibility\")}).length}var s=0,a=/^ui-id-\\d+$/;e.ui=e.ui||{},e.extend(e.ui,{version:\"1.10.4\",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({focus:function(t){return function(i,n){return\"number\"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),n&&n.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css(\"position\"))||/absolute/.test(this.css(\"position\"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,\"position\"))&&/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0),/fixed/.test(this.css(\"position\"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css(\"zIndex\",i);if(this.length)for(var n,s,a=e(this[0]);a.length&&a[0]!==document;){if(n=a.css(\"position\"),(\"absolute\"===n||\"relative\"===n||\"fixed\"===n)&&(s=parseInt(a.css(\"zIndex\"),10),!isNaN(s)&&0!==s))return s;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++s)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&e(this).removeAttr(\"id\")})}}),e.extend(e.expr[\":\"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,n){return!!e.data(t,n[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,\"tabindex\")))},tabbable:function(t){var n=e.attr(t,\"tabindex\"),s=isNaN(n);return(s||n>=0)&&i(t,!s)}}),e(\"<a>\").outerWidth(1).jquery||e.each([\"Width\",\"Height\"],function(i,n){function s(t,i,n,s){return e.each(a,function(){i-=parseFloat(e.css(t,\"padding\"+this))||0,n&&(i-=parseFloat(e.css(t,\"border\"+this+\"Width\"))||0),s&&(i-=parseFloat(e.css(t,\"margin\"+this))||0)}),i}var a=\"Width\"===n?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],o=n.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn[\"inner\"+n]=function(i){return i===t?r[\"inner\"+n].call(this):this.each(function(){e(this).css(o,s(this,i)+\"px\")})},e.fn[\"outer\"+n]=function(t,i){return\"number\"!=typeof t?r[\"outer\"+n].call(this,t):this.each(function(){e(this).css(o,s(this,t,!0,i)+\"px\")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e(\"<a>\").data(\"a-b\",\"a\").removeData(\"a-b\").data(\"a-b\")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase()),e.support.selectstart=\"onselectstart\"in document.createElement(\"div\"),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?\"selectstart\":\"mousedown\")+\".ui-disableSelection\",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(\".ui-disableSelection\")}}),e.extend(e.ui,{plugin:{add:function(t,i,n){var s,a=e.ui[t].prototype;for(s in n)a.plugins[s]=a.plugins[s]||[],a.plugins[s].push([i,n[s]])},call:function(e,t,i){var n,s=e.plugins[t];if(s&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(n=0;s.length>n;n++)e.options[s[n][0]]&&s[n][1].apply(e.element,i)}},hasScroll:function(t,i){if(\"hidden\"===e(t).css(\"overflow\"))return!1;var n=i&&\"left\"===i?\"scrollLeft\":\"scrollTop\",s=!1;return t[n]>0?!0:(t[n]=1,s=t[n]>0,t[n]=0,s)}})})(jQuery);(function(t,e){var i=0,s=Array.prototype.slice,n=t.cleanData;t.cleanData=function(e){for(var i,s=0;null!=(i=e[s]);s++)try{t(i).triggerHandler(\"remove\")}catch(o){}n(e)},t.widget=function(i,s,n){var o,a,r,h,l={},c=i.split(\".\")[0];i=i.split(\".\")[1],o=c+\"-\"+i,n||(n=s,s=t.Widget),t.expr[\":\"][o.toLowerCase()]=function(e){return!!t.data(e,o)},t[c]=t[c]||{},a=t[c][i],r=t[c][i]=function(t,i){return this._createWidget?(arguments.length&&this._createWidget(t,i),e):new r(t,i)},t.extend(r,a,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),h=new s,h.options=t.widget.extend({},h.options),t.each(n,function(i,n){return t.isFunction(n)?(l[i]=function(){var t=function(){return s.prototype[i].apply(this,arguments)},e=function(t){return s.prototype[i].apply(this,t)};return function(){var i,s=this._super,o=this._superApply;return this._super=t,this._superApply=e,i=n.apply(this,arguments),this._super=s,this._superApply=o,i}}(),e):(l[i]=n,e)}),r.prototype=t.widget.extend(h,{widgetEventPrefix:a?h.widgetEventPrefix||i:i},l,{constructor:r,namespace:c,widgetName:i,widgetFullName:o}),a?(t.each(a._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+\".\"+s.widgetName,r,i._proto)}),delete a._childConstructors):s._childConstructors.push(r),t.widget.bridge(i,r)},t.widget.extend=function(i){for(var n,o,a=s.call(arguments,1),r=0,h=a.length;h>r;r++)for(n in a[r])o=a[r][n],a[r].hasOwnProperty(n)&&o!==e&&(i[n]=t.isPlainObject(o)?t.isPlainObject(i[n])?t.widget.extend({},i[n],o):t.widget.extend({},o):o);return i},t.widget.bridge=function(i,n){var o=n.prototype.widgetFullName||i;t.fn[i]=function(a){var r=\"string\"==typeof a,h=s.call(arguments,1),l=this;return a=!r&&h.length?t.widget.extend.apply(null,[a].concat(h)):a,r?this.each(function(){var s,n=t.data(this,o);return n?t.isFunction(n[a])&&\"_\"!==a.charAt(0)?(s=n[a].apply(n,h),s!==n&&s!==e?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):e):t.error(\"no such method '\"+a+\"' for \"+i+\" widget instance\"):t.error(\"cannot call methods on \"+i+\" prior to initialization; \"+\"attempted to call method '\"+a+\"'\")}):this.each(function(){var e=t.data(this,o);e?e.option(a||{})._init():t.data(this,o,new n(a,this))}),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{disabled:!1,create:null},_createWidget:function(e,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=i++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=t(),this.hoverable=t(),this.focusable=t(),s!==this&&(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&&this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr(\"aria-disabled\").removeClass(this.widgetFullName+\"-disabled \"+\"ui-state-disabled\"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")},_destroy:t.noop,widget:function(){return this.element},option:function(i,s){var n,o,a,r=i;if(0===arguments.length)return t.widget.extend({},this.options);if(\"string\"==typeof i)if(r={},n=i.split(\".\"),i=n.shift(),n.length){for(o=r[i]=t.widget.extend({},this.options[i]),a=0;n.length-1>a;a++)o[n[a]]=o[n[a]]||{},o=o[n[a]];if(i=n.pop(),1===arguments.length)return o[i]===e?null:o[i];o[i]=s}else{if(1===arguments.length)return this.options[i]===e?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,\"disabled\"===t&&(this.widget().toggleClass(this.widgetFullName+\"-disabled ui-state-disabled\",!!e).attr(\"aria-disabled\",e),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")),this},enable:function(){return this._setOption(\"disabled\",!1)},disable:function(){return this._setOption(\"disabled\",!0)},_on:function(i,s,n){var o,a=this;\"boolean\"!=typeof i&&(n=s,s=i,i=!1),n?(s=o=t(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,o=this.widget()),t.each(n,function(n,r){function h(){return i||a.options.disabled!==!0&&!t(this).hasClass(\"ui-state-disabled\")?(\"string\"==typeof r?a[r]:r).apply(a,arguments):e}\"string\"!=typeof r&&(h.guid=r.guid=r.guid||h.guid||t.guid++);var l=n.match(/^(\\w+)\\s*(.*)$/),c=l[1]+a.eventNamespace,u=l[2];u?o.delegate(u,c,h):s.bind(c,h)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.unbind(e).undelegate(e)},_delay:function(t,e){function i(){return(\"string\"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass(\"ui-state-hover\")},mouseleave:function(e){t(e.currentTarget).removeClass(\"ui-state-hover\")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass(\"ui-state-focus\")},focusout:function(e){t(e.currentTarget).removeClass(\"ui-state-focus\")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:\"fadeIn\",hide:\"fadeOut\"},function(e,i){t.Widget.prototype[\"_\"+e]=function(s,n,o){\"string\"==typeof n&&(n={effect:n});var a,r=n?n===!0||\"number\"==typeof n?i:n.effect||i:e;n=n||{},\"number\"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}})})(jQuery);(function(t){var e=!1;t(document).mouseup(function(){e=!1}),t.widget(\"ui.mouse\",{version:\"1.10.4\",options:{cancel:\"input,textarea,button,select,option\",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind(\"mousedown.\"+this.widgetName,function(t){return e._mouseDown(t)}).bind(\"click.\"+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+\".preventClickEvent\")?(t.removeData(i.target,e.widgetName+\".preventClickEvent\"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind(\".\"+this.widgetName),this._mouseMoveDelegate&&t(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a=\"string\"==typeof this.options.cancel&&i.target.nodeName?t(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===t.data(i.target,this.widgetName+\".preventClickEvent\")&&t.removeData(i.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(t){return s._mouseMove(t)},this._mouseUpDelegate=function(t){return s._mouseUp(t)},t(document).bind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).bind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,!0)):!0}},_mouseMove:function(e){return t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button?this._mouseUp(e):this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return t(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(e)),!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(t,e){function i(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function s(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var a,o=Math.max,r=Math.abs,l=Math.round,h=/left|center|right/,c=/top|center|bottom/,u=/[\\+\\-]\\d+(\\.[\\d]+)?%?/,d=/^\\w+/,p=/%$/,f=t.fn.position;t.position={scrollbarWidth:function(){if(a!==e)return a;var i,s,n=t(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=n.children()[0];return t(\"body\").append(n),i=o.offsetWidth,n.css(\"overflow\",\"scroll\"),s=o.offsetWidth,i===s&&(s=n[0].clientWidth),n.remove(),a=i-s},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-x\"),s=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-y\"),n=\"scroll\"===i||\"auto\"===i&&e.width<e.element[0].scrollWidth,a=\"scroll\"===s||\"auto\"===s&&e.height<e.element[0].scrollHeight;return{width:a?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:s,isDocument:n,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return f.apply(this,arguments);e=t.extend({},e);var a,p,g,m,v,_,b=t(e.of),y=t.position.getWithinInfo(e.within),k=t.position.getScrollInfo(y),w=(e.collision||\"flip\").split(\" \"),D={};return _=n(b),b[0].preventDefault&&(e.at=\"left top\"),p=_.width,g=_.height,m=_.offset,v=t.extend({},m),t.each([\"my\",\"at\"],function(){var t,i,s=(e[this]||\"\").split(\" \");1===s.length&&(s=h.test(s[0])?s.concat([\"center\"]):c.test(s[0])?[\"center\"].concat(s):[\"center\",\"center\"]),s[0]=h.test(s[0])?s[0]:\"center\",s[1]=c.test(s[1])?s[1]:\"center\",t=u.exec(s[0]),i=u.exec(s[1]),D[this]=[t?t[0]:0,i?i[0]:0],e[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===w.length&&(w[1]=w[0]),\"right\"===e.at[0]?v.left+=p:\"center\"===e.at[0]&&(v.left+=p/2),\"bottom\"===e.at[1]?v.top+=g:\"center\"===e.at[1]&&(v.top+=g/2),a=i(D.at,p,g),v.left+=a[0],v.top+=a[1],this.each(function(){var n,h,c=t(this),u=c.outerWidth(),d=c.outerHeight(),f=s(this,\"marginLeft\"),_=s(this,\"marginTop\"),x=u+f+s(this,\"marginRight\")+k.width,C=d+_+s(this,\"marginBottom\")+k.height,M=t.extend({},v),T=i(D.my,c.outerWidth(),c.outerHeight());\"right\"===e.my[0]?M.left-=u:\"center\"===e.my[0]&&(M.left-=u/2),\"bottom\"===e.my[1]?M.top-=d:\"center\"===e.my[1]&&(M.top-=d/2),M.left+=T[0],M.top+=T[1],t.support.offsetFractions||(M.left=l(M.left),M.top=l(M.top)),n={marginLeft:f,marginTop:_},t.each([\"left\",\"top\"],function(i,s){t.ui.position[w[i]]&&t.ui.position[w[i]][s](M,{targetWidth:p,targetHeight:g,elemWidth:u,elemHeight:d,collisionPosition:n,collisionWidth:x,collisionHeight:C,offset:[a[0]+T[0],a[1]+T[1]],my:e.my,at:e.at,within:y,elem:c})}),e.using&&(h=function(t){var i=m.left-M.left,s=i+p-u,n=m.top-M.top,a=n+g-d,l={target:{element:b,left:m.left,top:m.top,width:p,height:g},element:{element:c,left:M.left,top:M.top,width:u,height:d},horizontal:0>s?\"left\":i>0?\"right\":\"center\",vertical:0>a?\"top\":n>0?\"bottom\":\"middle\"};u>p&&p>r(i+s)&&(l.horizontal=\"center\"),d>g&&g>r(n+a)&&(l.vertical=\"middle\"),l.important=o(r(i),r(s))>o(r(n),r(a))?\"horizontal\":\"vertical\",e.using.call(this,t,l)}),c.offset(t.extend(M,{using:h}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,l=n-r,h=r+e.collisionWidth-a-n;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-n,t.left+=l-i):t.left=h>0&&0>=l?n:l>h?n+a-e.collisionWidth:n:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=n-r,h=r+e.collisionHeight-a-n;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-n,t.top+=l-i):t.top=h>0&&0>=l?n:l>h?n+a-e.collisionHeight:n:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,a=n.offset.left+n.scrollLeft,o=n.width,l=n.isWindow?n.scrollLeft:n.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-o-l,d=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,p=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-o-a,(0>i||r(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-l,(s>0||u>r(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,a=n.offset.top+n.scrollTop,o=n.height,l=n.isWindow?n.scrollTop:n.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-o-l,d=\"top\"===e.my[1],p=d?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,f=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-o-a,t.top+p+f+g>c&&(0>s||r(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-l,t.top+p+f+g>u&&(i>0||u>r(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,s,n,a,o=document.getElementsByTagName(\"body\")[0],r=document.createElement(\"div\");e=document.createElement(o?\"div\":\"body\"),s={visibility:\"hidden\",width:0,height:0,border:0,margin:0,background:\"none\"},o&&t.extend(s,{position:\"absolute\",left:\"-1000px\",top:\"-1000px\"});for(a in s)e.style[a]=s[a];e.appendChild(r),i=o||document.documentElement,i.insertBefore(e,i.firstChild),r.style.cssText=\"position: absolute; left: 10.7432222px;\",n=t(r).offset().left,t.support.offsetFractions=n>10&&11>n,e.innerHTML=\"\",i.removeChild(e)}()})(jQuery);(function(e){var t=0,i={},a={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth=\"hide\",a.height=a.paddingTop=a.paddingBottom=a.borderTopWidth=a.borderBottomWidth=\"show\",e.widget(\"ui.accordion\",{version:\"1.10.4\",options:{active:0,animate:{},collapsible:!1,event:\"click\",header:\"> li > :first-child,> :not(li):even\",heightStyle:\"auto\",icons:{activeHeader:\"ui-icon-triangle-1-s\",header:\"ui-icon-triangle-1-e\"},activate:null,beforeActivate:null},_create:function(){var t=this.options;this.prevShow=this.prevHide=e(),this.element.addClass(\"ui-accordion ui-widget ui-helper-reset\").attr(\"role\",\"tablist\"),t.collapsible||t.active!==!1&&null!=t.active||(t.active=0),this._processPanels(),0>t.active&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():e(),content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e(\"<span>\").addClass(\"ui-accordion-header-icon ui-icon \"+t.header).prependTo(this.headers),this.active.children(\".ui-accordion-header-icon\").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass(\"ui-accordion-icons\"))},_destroyIcons:function(){this.headers.removeClass(\"ui-accordion-icons\").children(\".ui-accordion-header-icon\").remove()},_destroy:function(){var e;this.element.removeClass(\"ui-accordion ui-widget ui-helper-reset\").removeAttr(\"role\"),this.headers.removeClass(\"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\").removeAttr(\"role\").removeAttr(\"aria-expanded\").removeAttr(\"aria-selected\").removeAttr(\"aria-controls\").removeAttr(\"tabIndex\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this._destroyIcons(),e=this.headers.next().css(\"display\",\"\").removeAttr(\"role\").removeAttr(\"aria-hidden\").removeAttr(\"aria-labelledby\").removeClass(\"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),\"content\"!==this.options.heightStyle&&e.css(\"height\",\"\")},_setOption:function(e,t){return\"active\"===e?(this._activate(t),undefined):(\"event\"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),\"collapsible\"!==e||t||this.options.active!==!1||this._activate(0),\"icons\"===e&&(this._destroyIcons(),t&&this._createIcons()),\"disabled\"===e&&this.headers.add(this.headers.next()).toggleClass(\"ui-state-disabled\",!!t),undefined)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,a=this.headers.length,s=this.headers.index(t.target),n=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:n=this.headers[(s+1)%a];break;case i.LEFT:case i.UP:n=this.headers[(s-1+a)%a];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:n=this.headers[0];break;case i.END:n=this.headers[a-1]}n&&(e(t.target).attr(\"tabIndex\",-1),e(n).attr(\"tabIndex\",0),n.focus(),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t=this.options;this._processPanels(),t.active===!1&&t.collapsible===!0||!this.headers.length?(t.active=!1,this.active=e()):t.active===!1?this._activate(0):this.active.length&&!e.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(\".ui-state-disabled\").length?(t.active=!1,this.active=e()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){this.headers=this.element.find(this.options.header).addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\"),this.headers.next().addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\").filter(\":not(.ui-accordion-content-active)\").hide()},_refresh:function(){var i,a=this.options,s=a.heightStyle,n=this.element.parent(),r=this.accordionId=\"ui-accordion-\"+(this.element.attr(\"id\")||++t);this.active=this._findActive(a.active).addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\").removeClass(\"ui-corner-all\"),this.active.next().addClass(\"ui-accordion-content-active\").show(),this.headers.attr(\"role\",\"tab\").each(function(t){var i=e(this),a=i.attr(\"id\"),s=i.next(),n=s.attr(\"id\");a||(a=r+\"-header-\"+t,i.attr(\"id\",a)),n||(n=r+\"-panel-\"+t,s.attr(\"id\",n)),i.attr(\"aria-controls\",n),s.attr(\"aria-labelledby\",a)}).next().attr(\"role\",\"tabpanel\"),this.headers.not(this.active).attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\",tabIndex:-1}).next().attr({\"aria-hidden\":\"true\"}).hide(),this.active.length?this.active.attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0}).next().attr({\"aria-hidden\":\"false\"}):this.headers.eq(0).attr(\"tabIndex\",0),this._createIcons(),this._setupEvents(a.event),\"fill\"===s?(i=n.height(),this.element.siblings(\":visible\").each(function(){var t=e(this),a=t.css(\"position\");\"absolute\"!==a&&\"fixed\"!==a&&(i-=t.outerHeight(!0))}),this.headers.each(function(){i-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,i-e(this).innerHeight()+e(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===s&&(i=0,this.headers.next().each(function(){i=Math.max(i,e(this).css(\"height\",\"\").height())}).height(i))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return\"number\"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={keydown:\"_keydown\"};t&&e.each(t.split(\" \"),function(e,t){i[t]=\"_eventHandler\"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:\"_panelKeyDown\"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var i=this.options,a=this.active,s=e(t.currentTarget),n=s[0]===a[0],r=n&&i.collapsible,o=r?e():s.next(),h=a.next(),d={oldHeader:a,oldPanel:h,newHeader:r?e():s,newPanel:o};t.preventDefault(),n&&!i.collapsible||this._trigger(\"beforeActivate\",t,d)===!1||(i.active=r?!1:this.headers.index(s),this.active=n?e():s,this._toggle(d),a.removeClass(\"ui-accordion-header-active ui-state-active\"),i.icons&&a.children(\".ui-accordion-header-icon\").removeClass(i.icons.activeHeader).addClass(i.icons.header),n||(s.removeClass(\"ui-corner-all\").addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\"),i.icons&&s.children(\".ui-accordion-header-icon\").removeClass(i.icons.header).addClass(i.icons.activeHeader),s.next().addClass(\"ui-accordion-content-active\")))},_toggle:function(t){var i=t.newPanel,a=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=a,this.options.animate?this._animate(i,a,t):(a.hide(),i.show(),this._toggleComplete(t)),a.attr({\"aria-hidden\":\"true\"}),a.prev().attr(\"aria-selected\",\"false\"),i.length&&a.length?a.prev().attr({tabIndex:-1,\"aria-expanded\":\"false\"}):i.length&&this.headers.filter(function(){return 0===e(this).attr(\"tabIndex\")}).attr(\"tabIndex\",-1),i.attr(\"aria-hidden\",\"false\").prev().attr({\"aria-selected\":\"true\",tabIndex:0,\"aria-expanded\":\"true\"})},_animate:function(e,t,s){var n,r,o,h=this,d=0,c=e.length&&(!t.length||e.index()<t.index()),l=this.options.animate||{},u=c&&l.down||l,v=function(){h._toggleComplete(s)};return\"number\"==typeof u&&(o=u),\"string\"==typeof u&&(r=u),r=r||u.easing||l.easing,o=o||u.duration||l.duration,t.length?e.length?(n=e.show().outerHeight(),t.animate(i,{duration:o,easing:r,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(a,{duration:o,easing:r,complete:v,step:function(e,i){i.now=Math.round(e),\"height\"!==i.prop?d+=i.now:\"content\"!==h.options.heightStyle&&(i.now=Math.round(n-t.outerHeight()-d),d=0)}}),undefined):t.animate(i,o,r,v):e.animate(a,o,r,v)},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass(\"ui-accordion-content-active\").prev().removeClass(\"ui-corner-top\").addClass(\"ui-corner-all\"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger(\"activate\",null,e)}})})(jQuery);(function(e){e.widget(\"ui.autocomplete\",{version:\"1.10.4\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var t,i,s,n=this.element[0].nodeName.toLowerCase(),a=\"textarea\"===n,o=\"input\"===n;this.isMultiLine=a?!0:o?!1:this.element.prop(\"isContentEditable\"),this.valueMethod=this.element[a||o?\"val\":\"text\"],this.isNewMenu=!0,this.element.addClass(\"ui-autocomplete-input\").attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(n){if(this.element.prop(\"readOnly\"))return t=!0,s=!0,i=!0,undefined;t=!1,s=!1,i=!1;var a=e.ui.keyCode;switch(n.keyCode){case a.PAGE_UP:t=!0,this._move(\"previousPage\",n);break;case a.PAGE_DOWN:t=!0,this._move(\"nextPage\",n);break;case a.UP:t=!0,this._keyEvent(\"previous\",n);break;case a.DOWN:t=!0,this._keyEvent(\"next\",n);break;case a.ENTER:case a.NUMPAD_ENTER:this.menu.active&&(t=!0,n.preventDefault(),this.menu.select(n));break;case a.TAB:this.menu.active&&this.menu.select(n);break;case a.ESCAPE:this.menu.element.is(\":visible\")&&(this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(t)return t=!1,(!this.isMultiLine||this.menu.element.is(\":visible\"))&&s.preventDefault(),undefined;if(!i){var n=e.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move(\"previousPage\",s);break;case n.PAGE_DOWN:this._move(\"nextPage\",s);break;case n.UP:this._keyEvent(\"previous\",s);break;case n.DOWN:this._keyEvent(\"next\",s)}}},input:function(e){return s?(s=!1,e.preventDefault(),undefined):(this._searchTimeout(e),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(e),this._change(e),undefined)}}),this._initSource(),this.menu=e(\"<ul>\").addClass(\"ui-autocomplete ui-front\").appendTo(this._appendTo()).menu({role:null}).hide().data(\"ui-menu\"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];e(t.target).closest(\".ui-menu-item\").length||this._delay(function(){var t=this;this.document.one(\"mousedown\",function(s){s.target===t.element[0]||s.target===i||e.contains(i,s.target)||t.close()})})},menufocus:function(t,i){if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),this.document.one(\"mousemove\",function(){e(t.target).trigger(t.originalEvent)}),undefined;var s=i.item.data(\"ui-autocomplete-item\");!1!==this._trigger(\"focus\",t,{item:s})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value):this.liveRegion.text(s.value)},menuselect:function(e,t){var i=t.item.data(\"ui-autocomplete-item\"),s=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger(\"select\",e,{item:i})&&this._value(i.value),this.term=this._value(),this.close(e),this.selectedItem=i}}),this.liveRegion=e(\"<span>\",{role:\"status\",\"aria-live\":\"polite\"}).addClass(\"ui-helper-hidden-accessible\").insertBefore(this.element),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass(\"ui-autocomplete-input\").removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),\"source\"===e&&this._initSource(),\"appendTo\"===e&&this.menu.element.appendTo(this._appendTo()),\"disabled\"===e&&t&&this.xhr&&this.xhr.abort()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t||(t=this.element.closest(\".ui-front\")),t.length||(t=this.document[0].body),t},_initSource:function(){var t,i,s=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,s){s(e.ui.autocomplete.filter(t,i.term))}):\"string\"==typeof this.options.source?(i=this.options.source,this.source=function(t,n){s.xhr&&s.xhr.abort(),s.xhr=e.ajax({url:i,data:t,dataType:\"json\",success:function(e){n(e)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger(\"search\",t)!==!1?this._search(e):undefined},_search:function(e){this.pending++,this.element.addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var t=++this.requestIndex;return e.proxy(function(e){t===this.requestIndex&&this.__response(e),this.pending--,this.pending||this.element.removeClass(\"ui-autocomplete-loading\")},this)},__response:function(e){e&&(e=this._normalize(e)),this._trigger(\"response\",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger(\"open\")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",e))},_change:function(e){this.previous!==this._value()&&this._trigger(\"change\",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return\"string\"==typeof t?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var i=this.menu.element.empty();this._renderMenu(i,t),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var s=this;e.each(i,function(e,i){s._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data(\"ui-autocomplete-item\",t)},_renderItem:function(t,i){return e(\"<li>\").append(e(\"<a>\").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(\":visible\")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[e](t),undefined):(this.search(null,t),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(\":visible\"))&&(this._move(e,t),t.preventDefault())}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")},filter:function(t,i){var s=RegExp(e.ui.autocomplete.escapeRegex(i),\"i\");return e.grep(t,function(e){return s.test(e.label||e.value||e)})}}),e.widget(\"ui.autocomplete\",e.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(e){return e+(e>1?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(e){var t;this._superApply(arguments),this.options.disabled||this.cancelSearch||(t=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.text(t))}})})(jQuery);(function(e){var t,i=\"ui-button ui-widget ui-state-default ui-corner-all\",n=\"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",s=function(){var t=e(this);setTimeout(function(){t.find(\":ui-button\").button(\"refresh\")},1)},a=function(t){var i=t.name,n=t.form,s=e([]);return i&&(i=i.replace(/'/g,\"\\\\'\"),s=n?e(n).find(\"[name='\"+i+\"']\"):e(\"[name='\"+i+\"']\",t.ownerDocument).filter(function(){return!this.form})),s};e.widget(\"ui.button\",{version:\"1.10.4\",defaultElement:\"<button>\",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest(\"form\").unbind(\"reset\"+this.eventNamespace).bind(\"reset\"+this.eventNamespace,s),\"boolean\"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop(\"disabled\"):this.element.prop(\"disabled\",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr(\"title\");var n=this,o=this.options,r=\"checkbox\"===this.type||\"radio\"===this.type,h=r?\"\":\"ui-state-active\";null===o.label&&(o.label=\"input\"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(i).attr(\"role\",\"button\").bind(\"mouseenter\"+this.eventNamespace,function(){o.disabled||this===t&&e(this).addClass(\"ui-state-active\")}).bind(\"mouseleave\"+this.eventNamespace,function(){o.disabled||e(this).removeClass(h)}).bind(\"click\"+this.eventNamespace,function(e){o.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass(\"ui-state-focus\")},blur:function(){this.buttonElement.removeClass(\"ui-state-focus\")}}),r&&this.element.bind(\"change\"+this.eventNamespace,function(){n.refresh()}),\"checkbox\"===this.type?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){return o.disabled?!1:undefined}):\"radio\"===this.type?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(o.disabled)return!1;e(this).addClass(\"ui-state-active\"),n.buttonElement.attr(\"aria-pressed\",\"true\");var t=n.element[0];a(t).not(t).map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):(this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(){return o.disabled?!1:(e(this).addClass(\"ui-state-active\"),t=this,n.document.one(\"mouseup\",function(){t=null}),undefined)}).bind(\"mouseup\"+this.eventNamespace,function(){return o.disabled?!1:(e(this).removeClass(\"ui-state-active\"),undefined)}).bind(\"keydown\"+this.eventNamespace,function(t){return o.disabled?!1:((t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass(\"ui-state-active\"),undefined)}).bind(\"keyup\"+this.eventNamespace+\" blur\"+this.eventNamespace,function(){e(this).removeClass(\"ui-state-active\")}),this.buttonElement.is(\"a\")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption(\"disabled\",o.disabled),this._resetButton()},_determineButtonType:function(){var e,t,i;this.type=this.element.is(\"[type=checkbox]\")?\"checkbox\":this.element.is(\"[type=radio]\")?\"radio\":this.element.is(\"input\")?\"input\":\"button\",\"checkbox\"===this.type||\"radio\"===this.type?(e=this.element.parents().last(),t=\"label[for='\"+this.element.attr(\"id\")+\"']\",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass(\"ui-helper-hidden-accessible\"),i=this.element.is(\":checked\"),i&&this.buttonElement.addClass(\"ui-state-active\"),this.buttonElement.prop(\"aria-pressed\",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass(\"ui-helper-hidden-accessible\"),this.buttonElement.removeClass(i+\" ui-state-active \"+n).removeAttr(\"role\").removeAttr(\"aria-pressed\").html(this.buttonElement.find(\".ui-button-text\").html()),this.hasTitle||this.buttonElement.removeAttr(\"title\")},_setOption:function(e,t){return this._super(e,t),\"disabled\"===e?(this.element.prop(\"disabled\",!!t),t&&this.buttonElement.removeClass(\"ui-state-focus\"),undefined):(this._resetButton(),undefined)},refresh:function(){var t=this.element.is(\"input, button\")?this.element.is(\":disabled\"):this.element.hasClass(\"ui-button-disabled\");t!==this.options.disabled&&this._setOption(\"disabled\",t),\"radio\"===this.type?a(this.element[0]).each(function(){e(this).is(\":checked\")?e(this).button(\"widget\").addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):e(this).button(\"widget\").removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):\"checkbox\"===this.type&&(this.element.is(\":checked\")?this.buttonElement.addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):this.buttonElement.removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\"))},_resetButton:function(){if(\"input\"===this.type)return this.options.label&&this.element.val(this.options.label),undefined;var t=this.buttonElement.removeClass(n),i=e(\"<span></span>\",this.document[0]).addClass(\"ui-button-text\").html(this.options.label).appendTo(t.empty()).text(),s=this.options.icons,a=s.primary&&s.secondary,o=[];s.primary||s.secondary?(this.options.text&&o.push(\"ui-button-text-icon\"+(a?\"s\":s.primary?\"-primary\":\"-secondary\")),s.primary&&t.prepend(\"<span class='ui-button-icon-primary ui-icon \"+s.primary+\"'></span>\"),s.secondary&&t.append(\"<span class='ui-button-icon-secondary ui-icon \"+s.secondary+\"'></span>\"),this.options.text||(o.push(a?\"ui-button-icons-only\":\"ui-button-icon-only\"),this.hasTitle||t.attr(\"title\",e.trim(i)))):o.push(\"ui-button-text-only\"),t.addClass(o.join(\" \"))}}),e.widget(\"ui.buttonset\",{version:\"1.10.4\",options:{items:\"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"},_create:function(){this.element.addClass(\"ui-buttonset\")},_init:function(){this.refresh()},_setOption:function(e,t){\"disabled\"===e&&this.buttons.button(\"option\",e,t),this._super(e,t)},refresh:function(){var t=\"rtl\"===this.element.css(\"direction\");this.buttons=this.element.find(this.options.items).filter(\":ui-button\").button(\"refresh\").end().not(\":ui-button\").button().end().map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-all ui-corner-left ui-corner-right\").filter(\":first\").addClass(t?\"ui-corner-right\":\"ui-corner-left\").end().filter(\":last\").addClass(t?\"ui-corner-left\":\"ui-corner-right\").end().end()},_destroy:function(){this.element.removeClass(\"ui-buttonset\"),this.buttons.map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-left ui-corner-right\").end().button(\"destroy\")}})})(jQuery);(function(e,t){function i(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId=\"ui-datepicker-div\",this._inlineClass=\"ui-datepicker-inline\",this._appendClass=\"ui-datepicker-append\",this._triggerClass=\"ui-datepicker-trigger\",this._dialogClass=\"ui-datepicker-dialog\",this._disableClass=\"ui-datepicker-disabled\",this._unselectableClass=\"ui-datepicker-unselectable\",this._currentClass=\"ui-datepicker-current-day\",this._dayOverClass=\"ui-datepicker-days-cell-over\",this.regional=[],this.regional[\"\"]={closeText:\"Done\",prevText:\"Prev\",nextText:\"Next\",currentText:\"Today\",monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthNamesShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],dayNamesShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayNamesMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],weekHeader:\"Wk\",dateFormat:\"mm/dd/yy\",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:\"\"},this._defaults={showOn:\"focus\",showAnim:\"fadeIn\",showOptions:{},defaultDate:null,appendText:\"\",buttonText:\"...\",buttonImage:\"\",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:\"c-10:c+10\",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:\"+10\",minDate:null,maxDate:null,duration:\"fast\",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:\"\",altFormat:\"\",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[\"\"]),this.dpDiv=a(e(\"<div id='\"+this._mainDivId+\"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"))}function a(t){var i=\"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";return t.delegate(i,\"mouseout\",function(){e(this).removeClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&e(this).removeClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&e(this).removeClass(\"ui-datepicker-next-hover\")}).delegate(i,\"mouseover\",function(){e.datepicker._isDisabledDatepicker(n.inline?t.parent()[0]:n.input[0])||(e(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"),e(this).addClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&e(this).addClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&e(this).addClass(\"ui-datepicker-next-hover\"))})}function s(t,i){e.extend(t,i);for(var a in i)null==i[a]&&(t[a]=i[a]);return t}e.extend(e.ui,{datepicker:{version:\"1.10.4\"}});var n,r=\"datepicker\";e.extend(i.prototype,{markerClassName:\"hasDatepicker\",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return s(this._defaults,e||{}),this},_attachDatepicker:function(t,i){var a,s,n;a=t.nodeName.toLowerCase(),s=\"div\"===a||\"span\"===a,t.id||(this.uuid+=1,t.id=\"dp\"+this.uuid),n=this._newInst(e(t),s),n.settings=e.extend({},i||{}),\"input\"===a?this._connectDatepicker(t,n):s&&this._inlineDatepicker(t,n)},_newInst:function(t,i){var s=t[0].id.replace(/([^A-Za-z0-9_\\-])/g,\"\\\\\\\\$1\");return{id:s,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?a(e(\"<div class='\"+this._inlineClass+\" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")):this.dpDiv}},_connectDatepicker:function(t,i){var a=e(t);i.append=e([]),i.trigger=e([]),a.hasClass(this.markerClassName)||(this._attachments(a,i),a.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),e.data(t,r,i),i.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,i){var a,s,n,r=this._get(i,\"appendText\"),o=this._get(i,\"isRTL\");i.append&&i.append.remove(),r&&(i.append=e(\"<span class='\"+this._appendClass+\"'>\"+r+\"</span>\"),t[o?\"before\":\"after\"](i.append)),t.unbind(\"focus\",this._showDatepicker),i.trigger&&i.trigger.remove(),a=this._get(i,\"showOn\"),(\"focus\"===a||\"both\"===a)&&t.focus(this._showDatepicker),(\"button\"===a||\"both\"===a)&&(s=this._get(i,\"buttonText\"),n=this._get(i,\"buttonImage\"),i.trigger=e(this._get(i,\"buttonImageOnly\")?e(\"<img/>\").addClass(this._triggerClass).attr({src:n,alt:s,title:s}):e(\"<button type='button'></button>\").addClass(this._triggerClass).html(n?e(\"<img/>\").attr({src:n,alt:s,title:s}):s)),t[o?\"before\":\"after\"](i.trigger),i.trigger.click(function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1}))},_autoSize:function(e){if(this._get(e,\"autoSize\")&&!e.inline){var t,i,a,s,n=new Date(2009,11,20),r=this._get(e,\"dateFormat\");r.match(/[DM]/)&&(t=function(e){for(i=0,a=0,s=0;e.length>s;s++)e[s].length>i&&(i=e[s].length,a=s);return a},n.setMonth(t(this._get(e,r.match(/MM/)?\"monthNames\":\"monthNamesShort\"))),n.setDate(t(this._get(e,r.match(/DD/)?\"dayNames\":\"dayNamesShort\"))+20-n.getDay())),e.input.attr(\"size\",this._formatDate(e,n).length)}},_inlineDatepicker:function(t,i){var a=e(t);a.hasClass(this.markerClassName)||(a.addClass(this.markerClassName).append(i.dpDiv),e.data(t,r,i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(t),i.dpDiv.css(\"display\",\"block\"))},_dialogDatepicker:function(t,i,a,n,o){var u,c,h,l,d,p=this._dialogInst;return p||(this.uuid+=1,u=\"dp\"+this.uuid,this._dialogInput=e(\"<input type='text' id='\"+u+\"' style='position: absolute; top: -100px; width: 0px;'/>\"),this._dialogInput.keydown(this._doKeyDown),e(\"body\").append(this._dialogInput),p=this._dialogInst=this._newInst(this._dialogInput,!1),p.settings={},e.data(this._dialogInput[0],r,p)),s(p.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(p,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(c=document.documentElement.clientWidth,h=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[c/2-100+l,h/2-150+d]),this._dialogInput.css(\"left\",this._pos[0]+20+\"px\").css(\"top\",this._pos[1]+\"px\"),p.settings.onSelect=a,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],r,p),this},_destroyDatepicker:function(t){var i,a=e(t),s=e.data(t,r);a.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),e.removeData(t,r),\"input\"===i?(s.append.remove(),s.trigger.remove(),a.removeClass(this.markerClassName).unbind(\"focus\",this._showDatepicker).unbind(\"keydown\",this._doKeyDown).unbind(\"keypress\",this._doKeyPress).unbind(\"keyup\",this._doKeyUp)):(\"div\"===i||\"span\"===i)&&a.removeClass(this.markerClassName).empty())},_enableDatepicker:function(t){var i,a,s=e(t),n=e.data(t,r);s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),\"input\"===i?(t.disabled=!1,n.trigger.filter(\"button\").each(function(){this.disabled=!1}).end().filter(\"img\").css({opacity:\"1.0\",cursor:\"\"})):(\"div\"===i||\"span\"===i)&&(a=s.children(\".\"+this._inlineClass),a.children().removeClass(\"ui-state-disabled\"),a.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!1)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}))},_disableDatepicker:function(t){var i,a,s=e(t),n=e.data(t,r);s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),\"input\"===i?(t.disabled=!0,n.trigger.filter(\"button\").each(function(){this.disabled=!0}).end().filter(\"img\").css({opacity:\"0.5\",cursor:\"default\"})):(\"div\"===i||\"span\"===i)&&(a=s.children(\".\"+this._inlineClass),a.children().addClass(\"ui-state-disabled\"),a.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!0)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}),this._disabledInputs[this._disabledInputs.length]=t)},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,r)}catch(i){throw\"Missing instance data for this datepicker\"}},_optionDatepicker:function(i,a,n){var r,o,u,c,h=this._getInst(i);return 2===arguments.length&&\"string\"==typeof a?\"defaults\"===a?e.extend({},e.datepicker._defaults):h?\"all\"===a?e.extend({},h.settings):this._get(h,a):null:(r=a||{},\"string\"==typeof a&&(r={},r[a]=n),h&&(this._curInst===h&&this._hideDatepicker(),o=this._getDateDatepicker(i,!0),u=this._getMinMaxDate(h,\"min\"),c=this._getMinMaxDate(h,\"max\"),s(h.settings,r),null!==u&&r.dateFormat!==t&&r.minDate===t&&(h.settings.minDate=this._formatDate(h,u)),null!==c&&r.dateFormat!==t&&r.maxDate===t&&(h.settings.maxDate=this._formatDate(h,c)),\"disabled\"in r&&(r.disabled?this._disableDatepicker(i):this._enableDatepicker(i)),this._attachments(e(i),h),this._autoSize(h),this._setDate(h,o),this._updateAlternate(h),this._updateDatepicker(h)),t)},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(t){var i,a,s,n=e.datepicker._getInst(t.target),r=!0,o=n.dpDiv.is(\".ui-datepicker-rtl\");if(n._keyEvent=!0,e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),r=!1;break;case 13:return s=e(\"td.\"+e.datepicker._dayOverClass+\":not(.\"+e.datepicker._currentClass+\")\",n.dpDiv),s[0]&&e.datepicker._selectDay(t.target,n.selectedMonth,n.selectedYear,s[0]),i=e.datepicker._get(n,\"onSelect\"),i?(a=e.datepicker._formatDate(n),i.apply(n.input?n.input[0]:null,[a,n])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(n,\"stepBigMonths\"):-e.datepicker._get(n,\"stepMonths\"),\"M\");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(n,\"stepBigMonths\"):+e.datepicker._get(n,\"stepMonths\"),\"M\");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),r=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),r=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?1:-1,\"D\"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(n,\"stepBigMonths\"):-e.datepicker._get(n,\"stepMonths\"),\"M\");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,\"D\"),r=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?-1:1,\"D\"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(n,\"stepBigMonths\"):+e.datepicker._get(n,\"stepMonths\"),\"M\");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,\"D\"),r=t.ctrlKey||t.metaKey;break;default:r=!1}else 36===t.keyCode&&t.ctrlKey?e.datepicker._showDatepicker(this):r=!1;r&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(i){var a,s,n=e.datepicker._getInst(i.target);return e.datepicker._get(n,\"constrainInput\")?(a=e.datepicker._possibleChars(e.datepicker._get(n,\"dateFormat\")),s=String.fromCharCode(null==i.charCode?i.keyCode:i.charCode),i.ctrlKey||i.metaKey||\" \">s||!a||a.indexOf(s)>-1):t},_doKeyUp:function(t){var i,a=e.datepicker._getInst(t.target);if(a.input.val()!==a.lastVal)try{i=e.datepicker.parseDate(e.datepicker._get(a,\"dateFormat\"),a.input?a.input.val():null,e.datepicker._getFormatConfig(a)),i&&(e.datepicker._setDateFromField(a),e.datepicker._updateAlternate(a),e.datepicker._updateDatepicker(a))}catch(s){}return!0},_showDatepicker:function(t){if(t=t.target||t,\"input\"!==t.nodeName.toLowerCase()&&(t=e(\"input\",t.parentNode)[0]),!e.datepicker._isDisabledDatepicker(t)&&e.datepicker._lastInput!==t){var i,a,n,r,o,u,c;i=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==i&&(e.datepicker._curInst.dpDiv.stop(!0,!0),i&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),a=e.datepicker._get(i,\"beforeShow\"),n=a?a.apply(t,[t,i]):{},n!==!1&&(s(i.settings,n),i.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(i),e.datepicker._inDialog&&(t.value=\"\"),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),r=!1,e(t).parents().each(function(){return r|=\"fixed\"===e(this).css(\"position\"),!r}),o={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:\"absolute\",display:\"block\",top:\"-1000px\"}),e.datepicker._updateDatepicker(i),o=e.datepicker._checkOffset(i,o,r),i.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?\"static\":r?\"fixed\":\"absolute\",display:\"none\",left:o.left+\"px\",top:o.top+\"px\"}),i.inline||(u=e.datepicker._get(i,\"showAnim\"),c=e.datepicker._get(i,\"duration\"),i.dpDiv.zIndex(e(t).zIndex()+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[u]?i.dpDiv.show(u,e.datepicker._get(i,\"showOptions\"),c):i.dpDiv[u||\"show\"](u?c:null),e.datepicker._shouldFocusInput(i)&&i.input.focus(),e.datepicker._curInst=i))}},_updateDatepicker:function(t){this.maxRows=4,n=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t),t.dpDiv.find(\".\"+this._dayOverClass+\" a\").mouseover();var i,a=this._getNumberOfMonths(t),s=a[1],r=17;t.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"),s>1&&t.dpDiv.addClass(\"ui-datepicker-multi-\"+s).css(\"width\",r*s+\"em\"),t.dpDiv[(1!==a[0]||1!==a[1]?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-multi\"),t.dpDiv[(this._get(t,\"isRTL\")?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-rtl\"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&e.datepicker._shouldFocusInput(t)&&t.input.focus(),t.yearshtml&&(i=t.yearshtml,setTimeout(function(){i===t.yearshtml&&t.yearshtml&&t.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(t.yearshtml),i=t.yearshtml=null},0))},_shouldFocusInput:function(e){return e.input&&e.input.is(\":visible\")&&!e.input.is(\":disabled\")&&!e.input.is(\":focus\")},_checkOffset:function(t,i,a){var s=t.dpDiv.outerWidth(),n=t.dpDiv.outerHeight(),r=t.input?t.input.outerWidth():0,o=t.input?t.input.outerHeight():0,u=document.documentElement.clientWidth+(a?0:e(document).scrollLeft()),c=document.documentElement.clientHeight+(a?0:e(document).scrollTop());return i.left-=this._get(t,\"isRTL\")?s-r:0,i.left-=a&&i.left===t.input.offset().left?e(document).scrollLeft():0,i.top-=a&&i.top===t.input.offset().top+o?e(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>u&&u>s?Math.abs(i.left+s-u):0),i.top-=Math.min(i.top,i.top+n>c&&c>n?Math.abs(n+o):0),i},_findPos:function(t){for(var i,a=this._getInst(t),s=this._get(a,\"isRTL\");t&&(\"hidden\"===t.type||1!==t.nodeType||e.expr.filters.hidden(t));)t=t[s?\"previousSibling\":\"nextSibling\"];return i=e(t).offset(),[i.left,i.top]},_hideDatepicker:function(t){var i,a,s,n,o=this._curInst;!o||t&&o!==e.data(t,r)||this._datepickerShowing&&(i=this._get(o,\"showAnim\"),a=this._get(o,\"duration\"),s=function(){e.datepicker._tidyDialog(o)},e.effects&&(e.effects.effect[i]||e.effects[i])?o.dpDiv.hide(i,e.datepicker._get(o,\"showOptions\"),a,s):o.dpDiv[\"slideDown\"===i?\"slideUp\":\"fadeIn\"===i?\"fadeOut\":\"hide\"](i?a:null,s),i||s(),this._datepickerShowing=!1,n=this._get(o,\"onClose\"),n&&n.apply(o.input?o.input[0]:null,[o.input?o.input.val():\"\",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:\"absolute\",left:\"0\",top:\"-100px\"}),e.blockUI&&(e.unblockUI(),e(\"body\").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\")},_checkExternalClick:function(t){if(e.datepicker._curInst){var i=e(t.target),a=e.datepicker._getInst(i[0]);(i[0].id!==e.datepicker._mainDivId&&0===i.parents(\"#\"+e.datepicker._mainDivId).length&&!i.hasClass(e.datepicker.markerClassName)&&!i.closest(\".\"+e.datepicker._triggerClass).length&&e.datepicker._datepickerShowing&&(!e.datepicker._inDialog||!e.blockUI)||i.hasClass(e.datepicker.markerClassName)&&e.datepicker._curInst!==a)&&e.datepicker._hideDatepicker()}},_adjustDate:function(t,i,a){var s=e(t),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,i+(\"M\"===a?this._get(n,\"showCurrentAtPos\"):0),a),this._updateDatepicker(n))},_gotoToday:function(t){var i,a=e(t),s=this._getInst(a[0]);this._get(s,\"gotoCurrent\")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(a)},_selectMonthYear:function(t,i,a){var s=e(t),n=this._getInst(s[0]);n[\"selected\"+(\"M\"===a?\"Month\":\"Year\")]=n[\"draw\"+(\"M\"===a?\"Month\":\"Year\")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(t,i,a,s){var n,r=e(t);e(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(r[0])||(n=this._getInst(r[0]),n.selectedDay=n.currentDay=e(\"a\",s).html(),n.selectedMonth=n.currentMonth=i,n.selectedYear=n.currentYear=a,this._selectDate(t,this._formatDate(n,n.currentDay,n.currentMonth,n.currentYear)))},_clearDate:function(t){var i=e(t);this._selectDate(i,\"\")},_selectDate:function(t,i){var a,s=e(t),n=this._getInst(s[0]);i=null!=i?i:this._formatDate(n),n.input&&n.input.val(i),this._updateAlternate(n),a=this._get(n,\"onSelect\"),a?a.apply(n.input?n.input[0]:null,[i,n]):n.input&&n.input.trigger(\"change\"),n.inline?this._updateDatepicker(n):(this._hideDatepicker(),this._lastInput=n.input[0],\"object\"!=typeof n.input[0]&&n.input.focus(),this._lastInput=null)},_updateAlternate:function(t){var i,a,s,n=this._get(t,\"altField\");n&&(i=this._get(t,\"altFormat\")||this._get(t,\"dateFormat\"),a=this._getDate(t),s=this.formatDate(i,a,this._getFormatConfig(t)),e(n).each(function(){e(this).val(s)}))},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,\"\"]},iso8601Week:function(e){var t,i=new Date(e.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),t=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((t-i)/864e5)/7)+1},parseDate:function(i,a,s){if(null==i||null==a)throw\"Invalid arguments\";if(a=\"object\"==typeof a?\"\"+a:a+\"\",\"\"===a)return null;var n,r,o,u,c=0,h=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,l=\"string\"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),d=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,p=(s?s.dayNames:null)||this._defaults.dayNames,g=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,m=(s?s.monthNames:null)||this._defaults.monthNames,f=-1,_=-1,v=-1,k=-1,y=!1,b=function(e){var t=i.length>n+1&&i.charAt(n+1)===e;return t&&n++,t},D=function(e){var t=b(e),i=\"@\"===e?14:\"!\"===e?20:\"y\"===e&&t?4:\"o\"===e?3:2,s=RegExp(\"^\\\\d{1,\"+i+\"}\"),n=a.substring(c).match(s);if(!n)throw\"Missing number at position \"+c;return c+=n[0].length,parseInt(n[0],10)},w=function(i,s,n){var r=-1,o=e.map(b(i)?n:s,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)});if(e.each(o,function(e,i){var s=i[1];return a.substr(c,s.length).toLowerCase()===s.toLowerCase()?(r=i[0],c+=s.length,!1):t}),-1!==r)return r+1;throw\"Unknown name at position \"+c},M=function(){if(a.charAt(c)!==i.charAt(n))throw\"Unexpected literal at position \"+c;c++};for(n=0;i.length>n;n++)if(y)\"'\"!==i.charAt(n)||b(\"'\")?M():y=!1;else switch(i.charAt(n)){case\"d\":v=D(\"d\");break;case\"D\":w(\"D\",d,p);break;case\"o\":k=D(\"o\");break;case\"m\":_=D(\"m\");break;case\"M\":_=w(\"M\",g,m);break;case\"y\":f=D(\"y\");break;case\"@\":u=new Date(D(\"@\")),f=u.getFullYear(),_=u.getMonth()+1,v=u.getDate();break;case\"!\":u=new Date((D(\"!\")-this._ticksTo1970)/1e4),f=u.getFullYear(),_=u.getMonth()+1,v=u.getDate();break;case\"'\":b(\"'\")?M():y=!0;break;default:M()}if(a.length>c&&(o=a.substr(c),!/^\\s+/.test(o)))throw\"Extra/unparsed characters found in date: \"+o;if(-1===f?f=(new Date).getFullYear():100>f&&(f+=(new Date).getFullYear()-(new Date).getFullYear()%100+(l>=f?0:-100)),k>-1)for(_=1,v=k;;){if(r=this._getDaysInMonth(f,_-1),r>=v)break;_++,v-=r}if(u=this._daylightSavingAdjust(new Date(f,_-1,v)),u.getFullYear()!==f||u.getMonth()+1!==_||u.getDate()!==v)throw\"Invalid date\";return u},ATOM:\"yy-mm-dd\",COOKIE:\"D, dd M yy\",ISO_8601:\"yy-mm-dd\",RFC_822:\"D, d M y\",RFC_850:\"DD, dd-M-y\",RFC_1036:\"D, d M y\",RFC_1123:\"D, d M yy\",RFC_2822:\"D, d M yy\",RSS:\"D, d M y\",TICKS:\"!\",TIMESTAMP:\"@\",W3C:\"yy-mm-dd\",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return\"\";var a,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,n=(i?i.dayNames:null)||this._defaults.dayNames,r=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,u=function(t){var i=e.length>a+1&&e.charAt(a+1)===t;return i&&a++,i},c=function(e,t,i){var a=\"\"+t;if(u(e))for(;i>a.length;)a=\"0\"+a;return a},h=function(e,t,i,a){return u(e)?a[t]:i[t]},l=\"\",d=!1;if(t)for(a=0;e.length>a;a++)if(d)\"'\"!==e.charAt(a)||u(\"'\")?l+=e.charAt(a):d=!1;else switch(e.charAt(a)){case\"d\":l+=c(\"d\",t.getDate(),2);break;case\"D\":l+=h(\"D\",t.getDay(),s,n);break;case\"o\":l+=c(\"o\",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case\"m\":l+=c(\"m\",t.getMonth()+1,2);break;case\"M\":l+=h(\"M\",t.getMonth(),r,o);break;case\"y\":l+=u(\"y\")?t.getFullYear():(10>t.getYear()%100?\"0\":\"\")+t.getYear()%100;break;case\"@\":l+=t.getTime();break;case\"!\":l+=1e4*t.getTime()+this._ticksTo1970;break;case\"'\":u(\"'\")?l+=\"'\":d=!0;break;default:l+=e.charAt(a)}return l},_possibleChars:function(e){var t,i=\"\",a=!1,s=function(i){var a=e.length>t+1&&e.charAt(t+1)===i;return a&&t++,a};for(t=0;e.length>t;t++)if(a)\"'\"!==e.charAt(t)||s(\"'\")?i+=e.charAt(t):a=!1;else switch(e.charAt(t)){case\"d\":case\"m\":case\"y\":case\"@\":i+=\"0123456789\";break;case\"D\":case\"M\":return null;case\"'\":s(\"'\")?i+=\"'\":a=!0;break;default:i+=e.charAt(t)}return i},_get:function(e,i){return e.settings[i]!==t?e.settings[i]:this._defaults[i]},_setDateFromField:function(e,t){if(e.input.val()!==e.lastVal){var i=this._get(e,\"dateFormat\"),a=e.lastVal=e.input?e.input.val():null,s=this._getDefaultDate(e),n=s,r=this._getFormatConfig(e);try{n=this.parseDate(i,a,r)||s}catch(o){a=t?\"\":a}e.selectedDay=n.getDate(),e.drawMonth=e.selectedMonth=n.getMonth(),e.drawYear=e.selectedYear=n.getFullYear(),e.currentDay=a?n.getDate():0,e.currentMonth=a?n.getMonth():0,e.currentYear=a?n.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,\"defaultDate\"),new Date))},_determineDate:function(t,i,a){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},n=function(i){try{return e.datepicker.parseDate(e.datepicker._get(t,\"dateFormat\"),i,e.datepicker._getFormatConfig(t))}catch(a){}for(var s=(i.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,n=s.getFullYear(),r=s.getMonth(),o=s.getDate(),u=/([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,c=u.exec(i);c;){switch(c[2]||\"d\"){case\"d\":case\"D\":o+=parseInt(c[1],10);break;case\"w\":case\"W\":o+=7*parseInt(c[1],10);break;case\"m\":case\"M\":r+=parseInt(c[1],10),o=Math.min(o,e.datepicker._getDaysInMonth(n,r));break;case\"y\":case\"Y\":n+=parseInt(c[1],10),o=Math.min(o,e.datepicker._getDaysInMonth(n,r))}c=u.exec(i)}return new Date(n,r,o)},r=null==i||\"\"===i?a:\"string\"==typeof i?n(i):\"number\"==typeof i?isNaN(i)?a:s(i):new Date(i.getTime());return r=r&&\"Invalid Date\"==\"\"+r?a:r,r&&(r.setHours(0),r.setMinutes(0),r.setSeconds(0),r.setMilliseconds(0)),this._daylightSavingAdjust(r)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var a=!t,s=e.selectedMonth,n=e.selectedYear,r=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=r.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=r.getMonth(),e.drawYear=e.selectedYear=e.currentYear=r.getFullYear(),s===e.selectedMonth&&n===e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(a?\"\":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&\"\"===e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(t){var i=this._get(t,\"stepMonths\"),a=\"#\"+t.id.replace(/\\\\\\\\/g,\"\\\\\");t.dpDiv.find(\"[data-handler]\").map(function(){var t={prev:function(){e.datepicker._adjustDate(a,-i,\"M\")},next:function(){e.datepicker._adjustDate(a,+i,\"M\")},hide:function(){e.datepicker._hideDatepicker()},today:function(){e.datepicker._gotoToday(a)},selectDay:function(){return e.datepicker._selectDay(a,+this.getAttribute(\"data-month\"),+this.getAttribute(\"data-year\"),this),!1},selectMonth:function(){return e.datepicker._selectMonthYear(a,this,\"M\"),!1},selectYear:function(){return e.datepicker._selectMonthYear(a,this,\"Y\"),!1}};e(this).bind(this.getAttribute(\"data-event\"),t[this.getAttribute(\"data-handler\")])})},_generateHTML:function(e){var t,i,a,s,n,r,o,u,c,h,l,d,p,g,m,f,_,v,k,y,b,D,w,M,C,x,I,N,T,A,E,S,Y,F,P,O,j,K,R,H=new Date,W=this._daylightSavingAdjust(new Date(H.getFullYear(),H.getMonth(),H.getDate())),L=this._get(e,\"isRTL\"),U=this._get(e,\"showButtonPanel\"),B=this._get(e,\"hideIfNoPrevNext\"),z=this._get(e,\"navigationAsDateFormat\"),q=this._getNumberOfMonths(e),G=this._get(e,\"showCurrentAtPos\"),J=this._get(e,\"stepMonths\"),Q=1!==q[0]||1!==q[1],V=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),$=this._getMinMaxDate(e,\"min\"),X=this._getMinMaxDate(e,\"max\"),Z=e.drawMonth-G,et=e.drawYear;if(0>Z&&(Z+=12,et--),X)for(t=this._daylightSavingAdjust(new Date(X.getFullYear(),X.getMonth()-q[0]*q[1]+1,X.getDate())),t=$&&$>t?$:t;this._daylightSavingAdjust(new Date(et,Z,1))>t;)Z--,0>Z&&(Z=11,et--);for(e.drawMonth=Z,e.drawYear=et,i=this._get(e,\"prevText\"),i=z?this.formatDate(i,this._daylightSavingAdjust(new Date(et,Z-J,1)),this._getFormatConfig(e)):i,a=this._canAdjustMonth(e,-1,et,Z)?\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(L?\"e\":\"w\")+\"'>\"+i+\"</span></a>\":B?\"\":\"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(L?\"e\":\"w\")+\"'>\"+i+\"</span></a>\",s=this._get(e,\"nextText\"),s=z?this.formatDate(s,this._daylightSavingAdjust(new Date(et,Z+J,1)),this._getFormatConfig(e)):s,n=this._canAdjustMonth(e,1,et,Z)?\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='\"+s+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(L?\"w\":\"e\")+\"'>\"+s+\"</span></a>\":B?\"\":\"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\"+s+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(L?\"w\":\"e\")+\"'>\"+s+\"</span></a>\",r=this._get(e,\"currentText\"),o=this._get(e,\"gotoCurrent\")&&e.currentDay?V:W,r=z?this.formatDate(r,o,this._getFormatConfig(e)):r,u=e.inline?\"\":\"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\"+this._get(e,\"closeText\")+\"</button>\",c=U?\"<div class='ui-datepicker-buttonpane ui-widget-content'>\"+(L?u:\"\")+(this._isInRange(e,o)?\"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>\"+r+\"</button>\":\"\")+(L?\"\":u)+\"</div>\":\"\",h=parseInt(this._get(e,\"firstDay\"),10),h=isNaN(h)?0:h,l=this._get(e,\"showWeek\"),d=this._get(e,\"dayNames\"),p=this._get(e,\"dayNamesMin\"),g=this._get(e,\"monthNames\"),m=this._get(e,\"monthNamesShort\"),f=this._get(e,\"beforeShowDay\"),_=this._get(e,\"showOtherMonths\"),v=this._get(e,\"selectOtherMonths\"),k=this._getDefaultDate(e),y=\"\",D=0;q[0]>D;D++){for(w=\"\",this.maxRows=4,M=0;q[1]>M;M++){if(C=this._daylightSavingAdjust(new Date(et,Z,e.selectedDay)),x=\" ui-corner-all\",I=\"\",Q){if(I+=\"<div class='ui-datepicker-group\",q[1]>1)switch(M){case 0:I+=\" ui-datepicker-group-first\",x=\" ui-corner-\"+(L?\"right\":\"left\");break;case q[1]-1:I+=\" ui-datepicker-group-last\",x=\" ui-corner-\"+(L?\"left\":\"right\");break;default:I+=\" ui-datepicker-group-middle\",x=\"\"}I+=\"'>\"}for(I+=\"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\"+x+\"'>\"+(/all|left/.test(x)&&0===D?L?n:a:\"\")+(/all|right/.test(x)&&0===D?L?a:n:\"\")+this._generateMonthYearHeader(e,Z,et,$,X,D>0||M>0,g,m)+\"</div><table class='ui-datepicker-calendar'><thead>\"+\"<tr>\",N=l?\"<th class='ui-datepicker-week-col'>\"+this._get(e,\"weekHeader\")+\"</th>\":\"\",b=0;7>b;b++)T=(b+h)%7,N+=\"<th\"+((b+h+6)%7>=5?\" class='ui-datepicker-week-end'\":\"\")+\">\"+\"<span title='\"+d[T]+\"'>\"+p[T]+\"</span></th>\";for(I+=N+\"</tr></thead><tbody>\",A=this._getDaysInMonth(et,Z),et===e.selectedYear&&Z===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,A)),E=(this._getFirstDayOfMonth(et,Z)-h+7)%7,S=Math.ceil((E+A)/7),Y=Q?this.maxRows>S?this.maxRows:S:S,this.maxRows=Y,F=this._daylightSavingAdjust(new Date(et,Z,1-E)),P=0;Y>P;P++){for(I+=\"<tr>\",O=l?\"<td class='ui-datepicker-week-col'>\"+this._get(e,\"calculateWeek\")(F)+\"</td>\":\"\",b=0;7>b;b++)j=f?f.apply(e.input?e.input[0]:null,[F]):[!0,\"\"],K=F.getMonth()!==Z,R=K&&!v||!j[0]||$&&$>F||X&&F>X,O+=\"<td class='\"+((b+h+6)%7>=5?\" ui-datepicker-week-end\":\"\")+(K?\" ui-datepicker-other-month\":\"\")+(F.getTime()===C.getTime()&&Z===e.selectedMonth&&e._keyEvent||k.getTime()===F.getTime()&&k.getTime()===C.getTime()?\" \"+this._dayOverClass:\"\")+(R?\" \"+this._unselectableClass+\" ui-state-disabled\":\"\")+(K&&!_?\"\":\" \"+j[1]+(F.getTime()===V.getTime()?\" \"+this._currentClass:\"\")+(F.getTime()===W.getTime()?\" ui-datepicker-today\":\"\"))+\"'\"+(K&&!_||!j[2]?\"\":\" title='\"+j[2].replace(/'/g,\"&#39;\")+\"'\")+(R?\"\":\" data-handler='selectDay' data-event='click' data-month='\"+F.getMonth()+\"' data-year='\"+F.getFullYear()+\"'\")+\">\"+(K&&!_?\"&#xa0;\":R?\"<span class='ui-state-default'>\"+F.getDate()+\"</span>\":\"<a class='ui-state-default\"+(F.getTime()===W.getTime()?\" ui-state-highlight\":\"\")+(F.getTime()===V.getTime()?\" ui-state-active\":\"\")+(K?\" ui-priority-secondary\":\"\")+\"' href='#'>\"+F.getDate()+\"</a>\")+\"</td>\",F.setDate(F.getDate()+1),F=this._daylightSavingAdjust(F);I+=O+\"</tr>\"}Z++,Z>11&&(Z=0,et++),I+=\"</tbody></table>\"+(Q?\"</div>\"+(q[0]>0&&M===q[1]-1?\"<div class='ui-datepicker-row-break'></div>\":\"\"):\"\"),w+=I}y+=w}return y+=c,e._keyEvent=!1,y},_generateMonthYearHeader:function(e,t,i,a,s,n,r,o){var u,c,h,l,d,p,g,m,f=this._get(e,\"changeMonth\"),_=this._get(e,\"changeYear\"),v=this._get(e,\"showMonthAfterYear\"),k=\"<div class='ui-datepicker-title'>\",y=\"\";if(n||!f)y+=\"<span class='ui-datepicker-month'>\"+r[t]+\"</span>\";else{for(u=a&&a.getFullYear()===i,c=s&&s.getFullYear()===i,y+=\"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\",h=0;12>h;h++)(!u||h>=a.getMonth())&&(!c||s.getMonth()>=h)&&(y+=\"<option value='\"+h+\"'\"+(h===t?\" selected='selected'\":\"\")+\">\"+o[h]+\"</option>\");y+=\"</select>\"}if(v||(k+=y+(!n&&f&&_?\"\":\"&#xa0;\")),!e.yearshtml)if(e.yearshtml=\"\",n||!_)k+=\"<span class='ui-datepicker-year'>\"+i+\"</span>\";else{for(l=this._get(e,\"yearRange\").split(\":\"),d=(new Date).getFullYear(),p=function(e){var t=e.match(/c[+\\-].*/)?i+parseInt(e.substring(1),10):e.match(/[+\\-].*/)?d+parseInt(e,10):parseInt(e,10);\n    return isNaN(t)?d:t},g=p(l[0]),m=Math.max(g,p(l[1]||\"\")),g=a?Math.max(g,a.getFullYear()):g,m=s?Math.min(m,s.getFullYear()):m,e.yearshtml+=\"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";m>=g;g++)e.yearshtml+=\"<option value='\"+g+\"'\"+(g===i?\" selected='selected'\":\"\")+\">\"+g+\"</option>\";e.yearshtml+=\"</select>\",k+=e.yearshtml,e.yearshtml=null}return k+=this._get(e,\"yearSuffix\"),v&&(k+=(!n&&f&&_?\"\":\"&#xa0;\")+y),k+=\"</div>\"},_adjustInstDate:function(e,t,i){var a=e.drawYear+(\"Y\"===i?t:0),s=e.drawMonth+(\"M\"===i?t:0),n=Math.min(e.selectedDay,this._getDaysInMonth(a,s))+(\"D\"===i?t:0),r=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(a,s,n)));e.selectedDay=r.getDate(),e.drawMonth=e.selectedMonth=r.getMonth(),e.drawYear=e.selectedYear=r.getFullYear(),(\"M\"===i||\"Y\"===i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,\"min\"),a=this._getMinMaxDate(e,\"max\"),s=i&&i>t?i:t;return a&&s>a?a:s},_notifyChange:function(e){var t=this._get(e,\"onChangeMonthYear\");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,\"numberOfMonths\");return null==t?[1,1]:\"number\"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+\"Date\"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,a){var s=this._getNumberOfMonths(e),n=this._daylightSavingAdjust(new Date(i,a+(0>t?t:s[0]*s[1]),1));return 0>t&&n.setDate(this._getDaysInMonth(n.getFullYear(),n.getMonth())),this._isInRange(e,n)},_isInRange:function(e,t){var i,a,s=this._getMinMaxDate(e,\"min\"),n=this._getMinMaxDate(e,\"max\"),r=null,o=null,u=this._get(e,\"yearRange\");return u&&(i=u.split(\":\"),a=(new Date).getFullYear(),r=parseInt(i[0],10),o=parseInt(i[1],10),i[0].match(/[+\\-].*/)&&(r+=a),i[1].match(/[+\\-].*/)&&(o+=a)),(!s||t.getTime()>=s.getTime())&&(!n||t.getTime()<=n.getTime())&&(!r||t.getFullYear()>=r)&&(!o||o>=t.getFullYear())},_getFormatConfig:function(e){var t=this._get(e,\"shortYearCutoff\");return t=\"string\"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,\"dayNamesShort\"),dayNames:this._get(e,\"dayNames\"),monthNamesShort:this._get(e,\"monthNamesShort\"),monthNames:this._get(e,\"monthNames\")}},_formatDate:function(e,t,i,a){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var s=t?\"object\"==typeof t?t:this._daylightSavingAdjust(new Date(a,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,\"dateFormat\"),s,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).mousedown(e.datepicker._checkExternalClick),e.datepicker.initialized=!0),0===e(\"#\"+e.datepicker._mainDivId).length&&e(\"body\").append(e.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return\"string\"!=typeof t||\"isDisabled\"!==t&&\"getDate\"!==t&&\"widget\"!==t?\"option\"===t&&2===arguments.length&&\"string\"==typeof arguments[1]?e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this[0]].concat(i)):this.each(function(){\"string\"==typeof t?e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this].concat(i)):e.datepicker._attachDatepicker(this,t)}):e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this[0]].concat(i))},e.datepicker=new i,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version=\"1.10.4\"})(jQuery);(function(e){var t={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget(\"ui.dialog\",{version:\"1.10.4\",options:{appendTo:\"body\",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:\"close\",dialogClass:\"\",draggable:!0,hide:null,height:\"auto\",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:\"center\",at:\"center\",of:window,collision:\"fit\",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css(\"top\",t.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr(\"title\"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr(\"title\").addClass(\"ui-dialog-content ui-widget-content\").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&e.fn.draggable&&this._makeDraggable(),this.options.resizable&&e.fn.resizable&&this._makeResizable(),this._isOpen=!1},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?e(t):this.document.find(t||\"body\").eq(0)},_destroy:function(){var e,t=this.originalPosition;this._destroyOverlay(),this.element.removeUniqueId().removeClass(\"ui-dialog-content ui-widget-content\").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr(\"title\",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},disable:e.noop,enable:e.noop,close:function(t){var i,a=this;if(this._isOpen&&this._trigger(\"beforeClose\",t)!==!1){if(this._isOpen=!1,this._destroyOverlay(),!this.opener.filter(\":focusable\").focus().length)try{i=this.document[0].activeElement,i&&\"body\"!==i.nodeName.toLowerCase()&&e(i).blur()}catch(s){}this._hide(this.uiDialog,this.options.hide,function(){a._trigger(\"close\",t)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,t){var i=!!this.uiDialog.nextAll(\":visible\").insertBefore(this.uiDialog).length;return i&&!t&&this._trigger(\"focus\",e),i},open:function(){var t=this;return this._isOpen?(this._moveToTop()&&this._focusTabbable(),undefined):(this._isOpen=!0,this.opener=e(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this._show(this.uiDialog,this.options.show,function(){t._focusTabbable(),t._trigger(\"focus\")}),this._trigger(\"open\"),undefined)},_focusTabbable:function(){var e=this.element.find(\"[autofocus]\");e.length||(e=this.element.find(\":tabbable\")),e.length||(e=this.uiDialogButtonPane.find(\":tabbable\")),e.length||(e=this.uiDialogTitlebarClose.filter(\":tabbable\")),e.length||(e=this.uiDialog),e.eq(0).focus()},_keepFocus:function(t){function i(){var t=this.document[0].activeElement,i=this.uiDialog[0]===t||e.contains(this.uiDialog[0],t);i||this._focusTabbable()}t.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=e(\"<div>\").addClass(\"ui-dialog ui-widget ui-widget-content ui-corner-all ui-front \"+this.options.dialogClass).hide().attr({tabIndex:-1,role:\"dialog\"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE)return t.preventDefault(),this.close(t),undefined;if(t.keyCode===e.ui.keyCode.TAB){var i=this.uiDialog.find(\":tabbable\"),a=i.filter(\":first\"),s=i.filter(\":last\");t.target!==s[0]&&t.target!==this.uiDialog[0]||t.shiftKey?t.target!==a[0]&&t.target!==this.uiDialog[0]||!t.shiftKey||(s.focus(1),t.preventDefault()):(a.focus(1),t.preventDefault())}},mousedown:function(e){this._moveToTop(e)&&this._focusTabbable()}}),this.element.find(\"[aria-describedby]\").length||this.uiDialog.attr({\"aria-describedby\":this.element.uniqueId().attr(\"id\")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=e(\"<div>\").addClass(\"ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix\").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(t){e(t.target).closest(\".ui-dialog-titlebar-close\")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=e(\"<button type='button'></button>\").button({label:this.options.closeText,icons:{primary:\"ui-icon-closethick\"},text:!1}).addClass(\"ui-dialog-titlebar-close\").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(e){e.preventDefault(),this.close(e)}}),t=e(\"<span>\").uniqueId().addClass(\"ui-dialog-title\").prependTo(this.uiDialogTitlebar),this._title(t),this.uiDialog.attr({\"aria-labelledby\":t.attr(\"id\")})},_title:function(e){this.options.title||e.html(\"&#160;\"),e.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=e(\"<div>\").addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\"),this.uiButtonSet=e(\"<div>\").addClass(\"ui-dialog-buttonset\").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var t=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),e.isEmptyObject(i)||e.isArray(i)&&!i.length?(this.uiDialog.removeClass(\"ui-dialog-buttons\"),undefined):(e.each(i,function(i,a){var s,n;a=e.isFunction(a)?{click:a,text:i}:a,a=e.extend({type:\"button\"},a),s=a.click,a.click=function(){s.apply(t.element[0],arguments)},n={icons:a.icons,text:a.showText},delete a.icons,delete a.showText,e(\"<button></button>\",a).button(n).appendTo(t.uiButtonSet)}),this.uiDialog.addClass(\"ui-dialog-buttons\"),this.uiDialogButtonPane.appendTo(this.uiDialog),undefined)},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,a=this.options;this.uiDialog.draggable({cancel:\".ui-dialog-content, .ui-dialog-titlebar-close\",handle:\".ui-dialog-titlebar\",containment:\"document\",start:function(a,s){e(this).addClass(\"ui-dialog-dragging\"),i._blockFrames(),i._trigger(\"dragStart\",a,t(s))},drag:function(e,a){i._trigger(\"drag\",e,t(a))},stop:function(s,n){a.position=[n.position.left-i.document.scrollLeft(),n.position.top-i.document.scrollTop()],e(this).removeClass(\"ui-dialog-dragging\"),i._unblockFrames(),i._trigger(\"dragStop\",s,t(n))}})},_makeResizable:function(){function t(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}var i=this,a=this.options,s=a.resizable,n=this.uiDialog.css(\"position\"),r=\"string\"==typeof s?s:\"n,e,s,w,se,sw,ne,nw\";this.uiDialog.resizable({cancel:\".ui-dialog-content\",containment:\"document\",alsoResize:this.element,maxWidth:a.maxWidth,maxHeight:a.maxHeight,minWidth:a.minWidth,minHeight:this._minHeight(),handles:r,start:function(a,s){e(this).addClass(\"ui-dialog-resizing\"),i._blockFrames(),i._trigger(\"resizeStart\",a,t(s))},resize:function(e,a){i._trigger(\"resize\",e,t(a))},stop:function(s,n){a.height=e(this).height(),a.width=e(this).width(),e(this).removeClass(\"ui-dialog-resizing\"),i._unblockFrames(),i._trigger(\"resizeStop\",s,t(n))}}).css(\"position\",n)},_minHeight:function(){var e=this.options;return\"auto\"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(){var e=this.uiDialog.is(\":visible\");e||this.uiDialog.show(),this.uiDialog.position(this.options.position),e||this.uiDialog.hide()},_setOptions:function(a){var s=this,n=!1,r={};e.each(a,function(e,a){s._setOption(e,a),e in t&&(n=!0),e in i&&(r[e]=a)}),n&&(this._size(),this._position()),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",r)},_setOption:function(e,t){var i,a,s=this.uiDialog;\"dialogClass\"===e&&s.removeClass(this.options.dialogClass).addClass(t),\"disabled\"!==e&&(this._super(e,t),\"appendTo\"===e&&this.uiDialog.appendTo(this._appendTo()),\"buttons\"===e&&this._createButtons(),\"closeText\"===e&&this.uiDialogTitlebarClose.button({label:\"\"+t}),\"draggable\"===e&&(i=s.is(\":data(ui-draggable)\"),i&&!t&&s.draggable(\"destroy\"),!i&&t&&this._makeDraggable()),\"position\"===e&&this._position(),\"resizable\"===e&&(a=s.is(\":data(ui-resizable)\"),a&&!t&&s.resizable(\"destroy\"),a&&\"string\"==typeof t&&s.resizable(\"option\",\"handles\",t),a||t===!1||this._makeResizable()),\"title\"===e&&this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\")))},_size:function(){var e,t,i,a=this.options;this.element.show().css({width:\"auto\",minHeight:0,maxHeight:\"none\",height:0}),a.minWidth>a.width&&(a.width=a.minWidth),e=this.uiDialog.css({height:\"auto\",width:a.width}).outerHeight(),t=Math.max(0,a.minHeight-e),i=\"number\"==typeof a.maxHeight?Math.max(0,a.maxHeight-e):\"none\",\"auto\"===a.height?this.element.css({minHeight:t,maxHeight:i,height:\"auto\"}):this.element.height(Math.max(0,a.height-e)),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",\"minHeight\",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find(\"iframe\").map(function(){var t=e(this);return e(\"<div>\").css({position:\"absolute\",width:t.outerWidth(),height:t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(t){return e(t.target).closest(\".ui-dialog\").length?!0:!!e(t.target).closest(\".ui-datepicker\").length},_createOverlay:function(){if(this.options.modal){var t=this,i=this.widgetFullName;e.ui.dialog.overlayInstances||this._delay(function(){e.ui.dialog.overlayInstances&&this.document.bind(\"focusin.dialog\",function(a){t._allowInteraction(a)||(a.preventDefault(),e(\".ui-dialog:visible:last .ui-dialog-content\").data(i)._focusTabbable())})}),this.overlay=e(\"<div>\").addClass(\"ui-widget-overlay ui-front\").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:\"_keepFocus\"}),e.ui.dialog.overlayInstances++}},_destroyOverlay:function(){this.options.modal&&this.overlay&&(e.ui.dialog.overlayInstances--,e.ui.dialog.overlayInstances||this.document.unbind(\"focusin.dialog\"),this.overlay.remove(),this.overlay=null)}}),e.ui.dialog.overlayInstances=0,e.uiBackCompat!==!1&&e.widget(\"ui.dialog\",e.ui.dialog,{_position:function(){var t,i=this.options.position,a=[],s=[0,0];i?((\"string\"==typeof i||\"object\"==typeof i&&\"0\"in i)&&(a=i.split?i.split(\" \"):[i[0],i[1]],1===a.length&&(a[1]=a[0]),e.each([\"left\",\"top\"],function(e,t){+a[e]===a[e]&&(s[e]=a[e],a[e]=t)}),i={my:a[0]+(0>s[0]?s[0]:\"+\"+s[0])+\" \"+a[1]+(0>s[1]?s[1]:\"+\"+s[1]),at:a.join(\" \")}),i=e.extend({},e.ui.dialog.prototype.options.position,i)):i=e.ui.dialog.prototype.options.position,t=this.uiDialog.is(\":visible\"),t||this.uiDialog.show(),this.uiDialog.position(i),t||this.uiDialog.hide()}})})(jQuery);(function(t){t.widget(\"ui.draggable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){\"original\"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css(\"position\"))||(this.element[0].style.position=\"relative\"),this.options.addClasses&&this.element.addClass(\"ui-draggable\"),this.options.disabled&&this.element.addClass(\"ui-draggable-disabled\"),this._mouseInit()},_destroy:function(){this.element.removeClass(\"ui-draggable ui-draggable-dragging ui-draggable-disabled\"),this._mouseDestroy()},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(e),this.handle?(t(i.iframeFix===!0?\"iframe\":i.iframeFix).each(function(){t(\"<div class='ui-draggable-iframeFix' style='background: #fff;'></div>\").css({width:this.offsetWidth+\"px\",height:this.offsetHeight+\"px\",position:\"absolute\",opacity:\"0.001\",zIndex:1e3}).css(t(this).offset()).appendTo(\"body\")}),!0):!1)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass(\"ui-draggable-dragging\"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css(\"position\"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger(\"start\",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_mouseDrag:function(e,i){if(\"fixed\"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),!i){var s=this._uiHash();if(this._trigger(\"drag\",e,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),\"original\"!==this.options.helper||t.contains(this.element[0].ownerDocument,this.element[0])?(\"invalid\"===this.options.revert&&!s||\"valid\"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger(\"stop\",e)!==!1&&i._clear()}):this._trigger(\"stop\",e)!==!1&&this._clear(),!1):!1},_mouseUp:function(e){return t(\"div.ui-draggable-iframeFix\").each(function(){this.parentNode.removeChild(this)}),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e])):\"clone\"===i.helper?this.element.clone().removeAttr(\"id\"):this.element;return s.parents(\"body\").length||s.appendTo(\"parent\"===i.appendTo?this.element[0].parentNode:i.appendTo),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css(\"position\"))||s.css(\"position\",\"absolute\"),s},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.element.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;return n.containment?\"window\"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):\"document\"===n.containment?(this.containment=[0,0,t(document).width()-this.helperProportions.width-this.margins.left,(t(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):n.containment.constructor===Array?(this.containment=n.containment,undefined):(\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=\"hidden\"!==i.css(\"overflow\"),this.containment=[(parseInt(i.css(\"borderLeftWidth\"),10)||0)+(parseInt(i.css(\"paddingLeft\"),10)||0),(parseInt(i.css(\"borderTopWidth\"),10)||0)+(parseInt(i.css(\"paddingTop\"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css(\"borderRightWidth\"),10)||0)-(parseInt(i.css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css(\"borderBottomWidth\"),10)||0)-(parseInt(i.css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i),undefined):(this.containment=null,undefined)},_convertPositionTo:function(e,i){i||(i=this.position);var s=\"absolute\"===e?1:-1,n=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:n.scrollTop(),left:n.scrollLeft()}),{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*s}},_generatePosition:function(e){var i,s,n,a,o=this.options,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=e.pageX,h=e.pageY;return this.offset.scroll||(this.offset.scroll={top:r.scrollTop(),left:r.scrollLeft()}),this.originalPosition&&(this.containment&&(this.relative_container?(s=this.relative_container.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),o.grid&&(n=o.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-o.grid[1]:n+o.grid[1]:n,a=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-o.grid[0]:a+o.grid[0]:a)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}},_clear:function(){this.helper.removeClass(\"ui-draggable-dragging\"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s]),\"drag\"===e&&(this.positionAbs=this._convertPositionTo(\"absolute\")),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(e,i){var s=t(this).data(\"ui-draggable\"),n=s.options,a=t.extend({},i,{item:s.element});s.sortables=[],t(n.connectToSortable).each(function(){var i=t.data(this,\"ui-sortable\");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger(\"activate\",e,a))})},stop:function(e,i){var s=t(this).data(\"ui-draggable\"),n=t.extend({},i,{item:s.element});t.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(e),this.instance.options.helper=this.instance.options._helper,\"original\"===s.options.helper&&this.instance.currentItem.css({top:\"auto\",left:\"auto\"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger(\"deactivate\",e,n))})},drag:function(e,i){var s=t(this).data(\"ui-draggable\"),n=this;t.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,t.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&t.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=t(n).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"ui-sortable-item\",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},e.target=this.instance.currentItem[0],this.instance._mouseCapture(e,!0),this.instance._mouseStart(e,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger(\"toSortable\",e),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(e)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger(\"out\",e,this.instance._uiHash(this.instance)),this.instance._mouseStop(e,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger(\"fromSortable\",e),s.dropped=!1)})}}),t.ui.plugin.add(\"draggable\",\"cursor\",{start:function(){var e=t(\"body\"),i=t(this).data(\"ui-draggable\").options;e.css(\"cursor\")&&(i._cursor=e.css(\"cursor\")),e.css(\"cursor\",i.cursor)},stop:function(){var e=t(this).data(\"ui-draggable\").options;e._cursor&&t(\"body\").css(\"cursor\",e._cursor)}}),t.ui.plugin.add(\"draggable\",\"opacity\",{start:function(e,i){var s=t(i.helper),n=t(this).data(\"ui-draggable\").options;s.css(\"opacity\")&&(n._opacity=s.css(\"opacity\")),s.css(\"opacity\",n.opacity)},stop:function(e,i){var s=t(this).data(\"ui-draggable\").options;s._opacity&&t(i.helper).css(\"opacity\",s._opacity)}}),t.ui.plugin.add(\"draggable\",\"scroll\",{start:function(){var e=t(this).data(\"ui-draggable\");e.scrollParent[0]!==document&&\"HTML\"!==e.scrollParent[0].tagName&&(e.overflowOffset=e.scrollParent.offset())},drag:function(e){var i=t(this).data(\"ui-draggable\"),s=i.options,n=!1;i.scrollParent[0]!==document&&\"HTML\"!==i.scrollParent[0].tagName?(s.axis&&\"x\"===s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-e.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:e.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&\"y\"===s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-e.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:e.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&\"x\"===s.axis||(e.pageY-t(document).scrollTop()<s.scrollSensitivity?n=t(document).scrollTop(t(document).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<s.scrollSensitivity&&(n=t(document).scrollTop(t(document).scrollTop()+s.scrollSpeed))),s.axis&&\"y\"===s.axis||(e.pageX-t(document).scrollLeft()<s.scrollSensitivity?n=t(document).scrollLeft(t(document).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<s.scrollSensitivity&&(n=t(document).scrollLeft(t(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&t.ui.ddmanager&&!s.dropBehaviour&&t.ui.ddmanager.prepareOffsets(i,e)}}),t.ui.plugin.add(\"draggable\",\"snap\",{start:function(){var e=t(this).data(\"ui-draggable\"),i=e.options;e.snapElements=[],t(i.snap.constructor!==String?i.snap.items||\":data(ui-draggable)\":i.snap).each(function(){var i=t(this),s=i.offset();this!==e.element[0]&&e.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(e,i){var s,n,a,o,r,l,h,c,u,d,p=t(this).data(\"ui-draggable\"),g=p.options,f=g.snapTolerance,m=i.offset.left,_=m+p.helperProportions.width,v=i.offset.top,b=v+p.helperProportions.height;for(u=p.snapElements.length-1;u>=0;u--)r=p.snapElements[u].left,l=r+p.snapElements[u].width,h=p.snapElements[u].top,c=h+p.snapElements[u].height,r-f>_||m>l+f||h-f>b||v>c+f||!t.contains(p.snapElements[u].item.ownerDocument,p.snapElements[u].item)?(p.snapElements[u].snapping&&p.options.snap.release&&p.options.snap.release.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=!1):(\"inner\"!==g.snapMode&&(s=f>=Math.abs(h-b),n=f>=Math.abs(c-v),a=f>=Math.abs(r-_),o=f>=Math.abs(l-m),s&&(i.position.top=p._convertPositionTo(\"relative\",{top:h-p.helperProportions.height,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo(\"relative\",{top:c,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:r-p.helperProportions.width}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:l}).left-p.margins.left)),d=s||n||a||o,\"outer\"!==g.snapMode&&(s=f>=Math.abs(h-v),n=f>=Math.abs(c-b),a=f>=Math.abs(r-m),o=f>=Math.abs(l-_),s&&(i.position.top=p._convertPositionTo(\"relative\",{top:h,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo(\"relative\",{top:c-p.helperProportions.height,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:r}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:l-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[u].snapping&&(s||n||a||o||d)&&p.options.snap.snap&&p.options.snap.snap.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=s||n||a||o||d)}}),t.ui.plugin.add(\"draggable\",\"stack\",{start:function(){var e,i=this.data(\"ui-draggable\").options,s=t.makeArray(t(i.stack)).sort(function(e,i){return(parseInt(t(e).css(\"zIndex\"),10)||0)-(parseInt(t(i).css(\"zIndex\"),10)||0)});s.length&&(e=parseInt(t(s[0]).css(\"zIndex\"),10)||0,t(s).each(function(i){t(this).css(\"zIndex\",e+i)}),this.css(\"zIndex\",e+s.length))}}),t.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(e,i){var s=t(i.helper),n=t(this).data(\"ui-draggable\").options;s.css(\"zIndex\")&&(n._zIndex=s.css(\"zIndex\")),s.css(\"zIndex\",n.zIndex)},stop:function(e,i){var s=t(this).data(\"ui-draggable\").options;s._zIndex&&t(i.helper).css(\"zIndex\",s._zIndex)}})})(jQuery);(function(t){function e(t,e,i){return t>e&&e+i>t}t.widget(\"ui.droppable\",{version:\"1.10.4\",widgetEventPrefix:\"drop\",options:{accept:\"*\",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:\"default\",tolerance:\"intersect\",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],undefined):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},t.ui.ddmanager.droppables[i.scope]=t.ui.ddmanager.droppables[i.scope]||[],t.ui.ddmanager.droppables[i.scope].push(this),i.addClasses&&this.element.addClass(\"ui-droppable\")},_destroy:function(){for(var e=0,i=t.ui.ddmanager.droppables[this.options.scope];i.length>e;e++)i[e]===this&&i.splice(e,1);this.element.removeClass(\"ui-droppable ui-droppable-disabled\")},_setOption:function(e,i){\"accept\"===e&&(this.accept=t.isFunction(i)?i:function(t){return t.is(i)}),t.Widget.prototype._setOption.apply(this,arguments)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger(\"activate\",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger(\"deactivate\",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger(\"over\",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"out\",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function(){var e=t.data(this,\"ui-droppable\");return e.options.greedy&&!e.options.disabled&&e.options.scope===s.options.scope&&e.accept.call(e.element[0],s.currentItem||s.element)&&t.ui.intersect(s,t.extend(e,{offset:e.element.offset()}),e.options.tolerance)?(n=!0,!1):undefined}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"drop\",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(t,i,s){if(!i.offset)return!1;var n,a,o=(t.positionAbs||t.position.absolute).left,r=(t.positionAbs||t.position.absolute).top,l=o+t.helperProportions.width,h=r+t.helperProportions.height,c=i.offset.left,u=i.offset.top,d=c+i.proportions().width,p=u+i.proportions().height;switch(s){case\"fit\":return o>=c&&d>=l&&r>=u&&p>=h;case\"intersect\":return o+t.helperProportions.width/2>c&&d>l-t.helperProportions.width/2&&r+t.helperProportions.height/2>u&&p>h-t.helperProportions.height/2;case\"pointer\":return n=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,a=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,e(a,u,i.proportions().height)&&e(n,c,i.proportions().width);case\"touch\":return(r>=u&&p>=r||h>=u&&p>=h||u>r&&h>p)&&(o>=c&&d>=o||l>=c&&d>=l||c>o&&l>d);default:return!1}},t.ui.ddmanager={current:null,droppables:{\"default\":[]},prepareOffsets:function(e,i){var s,n,a=t.ui.ddmanager.droppables[e.options.scope]||[],o=i?i.type:null,r=(e.currentItem||e.element).find(\":data(ui-droppable)\").addBack();t:for(s=0;a.length>s;s++)if(!(a[s].options.disabled||e&&!a[s].accept.call(a[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++)if(r[n]===a[s].element[0]){a[s].proportions().height=0;continue t}a[s].visible=\"none\"!==a[s].element.css(\"display\"),a[s].visible&&(\"mousedown\"===o&&a[s]._activate.call(a[s],i),a[s].offset=a[s].element.offset(),a[s].proportions({width:a[s].element[0].offsetWidth,height:a[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil(\"body\").bind(\"scroll.droppable\",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,a,o=t.ui.intersect(e,this,this.options.tolerance),r=!o&&this.isover?\"isout\":o&&!this.isover?\"isover\":null;r&&(this.options.greedy&&(n=this.options.scope,a=this.element.parents(\":data(ui-droppable)\").filter(function(){return t.data(this,\"ui-droppable\").options.scope===n}),a.length&&(s=t.data(a[0],\"ui-droppable\"),s.greedyChild=\"isover\"===r)),s&&\"isover\"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this[\"isout\"===r?\"isover\":\"isout\"]=!1,this[\"isover\"===r?\"_over\":\"_out\"].call(this,i),s&&\"isout\"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil(\"body\").unbind(\"scroll.droppable\"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}}})(jQuery);(function(t,e){var i=\"ui-effects-\";t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=h(),n=s._rgba=[];return i=i.toLowerCase(),f(l,function(t,a){var o,r=a.re.exec(i),l=r&&a.parse(r),h=a.space||\"rgba\";return l?(o=s[h](l),s[c[h].cache]=o[c[h].cache],n=s._rgba=o._rgba,!1):e}),n.length?(\"0,0,0,0\"===n.join()&&t.extend(n,a.transparent),s):a[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var a,o=\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",r=/^([\\-+])=\\s*(\\d+\\.?\\d*)/,l=[{re:/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,space:\"hsla\",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],h=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:\"byte\"},green:{idx:1,type:\"byte\"},blue:{idx:2,type:\"byte\"}}},hsla:{props:{hue:{idx:0,type:\"degrees\"},saturation:{idx:1,type:\"percent\"},lightness:{idx:2,type:\"percent\"}}}},u={\"byte\":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},p=t(\"<p>\")[0],f=t.each;p.style.cssText=\"background-color:rgba(1,1,1,.5)\",d.rgba=p.style.backgroundColor.indexOf(\"rgba\")>-1,f(c,function(t,e){e.cache=\"_\"+t,e.props.alpha={idx:3,type:\"percent\",def:1}}),h.fn=t.extend(h.prototype,{parse:function(n,o,r,l){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(o),o=e);var u=this,d=t.type(n),p=this._rgba=[];return o!==e&&(n=[n,o,r,l],d=\"array\"),\"string\"===d?this.parse(s(n)||a._default):\"array\"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):\"object\"===d?(n instanceof h?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var a=s.cache;f(s.props,function(t,e){if(!u[a]&&s.to){if(\"alpha\"===t||null==n[t])return;u[a]=s.to(u._rgba)}u[a][e.idx]=i(n[t],e,!0)}),u[a]&&0>t.inArray(null,u[a].slice(0,3))&&(u[a][3]=1,s.from&&(u._rgba=s.from(u[a])))}),this):e},is:function(t){var i=h(t),s=!0,n=this;return f(c,function(t,a){var o,r=i[a.cache];return r&&(o=n[a.cache]||a.to&&a.to(n._rgba)||[],f(a.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===o[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=h(t),n=s._space(),a=c[n],o=0===this.alpha()?h(\"transparent\"):this,r=o[a.cache]||a.to(o._rgba),l=r.slice();return s=s[a.cache],f(a.props,function(t,n){var a=n.idx,o=r[a],h=s[a],c=u[n.type]||{};null!==h&&(null===o?l[a]=h:(c.mod&&(h-o>c.mod/2?o+=c.mod:o-h>c.mod/2&&(o-=c.mod)),l[a]=i((h-o)*e+o,n)))}),this[n](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=h(e)._rgba;return h(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e=\"rgba(\",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e=\"rgb(\"),e+i.join()+\")\"},toHslaString:function(){var e=\"hsla(\",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+\"%\"),t});return 1===i[3]&&(i.pop(),e=\"hsl(\"),e+i.join()+\")\"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),\"#\"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?\"0\"+t:t}).join(\"\")},toString:function(){return 0===this._rgba[3]?\"transparent\":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,a=t[2]/255,o=t[3],r=Math.max(s,n,a),l=Math.min(s,n,a),h=r-l,c=r+l,u=.5*c;return e=l===r?0:s===r?60*(n-a)/h+360:n===r?60*(a-s)/h+120:60*(s-n)/h+240,i=0===h?0:.5>=u?h/c:h/(2-c),[Math.round(e)%360,i,u,null==o?1:o]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],a=t[3],o=.5>=s?s*(1+i):s+i-s*i,r=2*s-o;return[Math.round(255*n(r,o,e+1/3)),Math.round(255*n(r,o,e)),Math.round(255*n(r,o,e-1/3)),a]},f(c,function(s,n){var a=n.props,o=n.cache,l=n.to,c=n.from;h.fn[s]=function(s){if(l&&!this[o]&&(this[o]=l(this._rgba)),s===e)return this[o].slice();var n,r=t.type(s),u=\"array\"===r||\"object\"===r?s:arguments,d=this[o].slice();return f(a,function(t,e){var s=u[\"object\"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=h(c(d)),n[o]=d,n):h(d)},f(a,function(e,i){h.fn[e]||(h.fn[e]=function(n){var a,o=t.type(n),l=\"alpha\"===e?this._hsla?\"hsla\":\"rgba\":s,h=this[l](),c=h[i.idx];return\"undefined\"===o?c:(\"function\"===o&&(n=n.call(this,c),o=t.type(n)),null==n&&i.empty?this:(\"string\"===o&&(a=r.exec(n),a&&(n=c+parseFloat(a[2])*(\"+\"===a[1]?1:-1))),h[i.idx]=n,this[l](h)))})})}),h.hook=function(e){var i=e.split(\" \");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var a,o,r=\"\";if(\"transparent\"!==n&&(\"string\"!==t.type(n)||(a=s(n)))){if(n=h(a||n),!d.rgba&&1!==n._rgba[3]){for(o=\"backgroundColor\"===i?e.parentNode:e;(\"\"===r||\"transparent\"===r)&&o&&o.style;)try{r=t.css(o,\"backgroundColor\"),o=o.parentNode}catch(l){}n=n.blend(r&&\"transparent\"!==r?r:\"_default\")}n=n.toRgbaString()}try{e.style[i]=n}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=h(e.elem,i),e.end=h(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook(o),t.cssHooks.borderColor={expand:function(t){var e={};return f([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(i,s){e[\"border\"+s+\"Color\"]=t}),e}},a=t.Color.names={aqua:\"#00ffff\",black:\"#000000\",blue:\"#0000ff\",fuchsia:\"#ff00ff\",gray:\"#808080\",green:\"#008000\",lime:\"#00ff00\",maroon:\"#800000\",navy:\"#000080\",olive:\"#808000\",purple:\"#800080\",red:\"#ff0000\",silver:\"#c0c0c0\",teal:\"#008080\",white:\"#ffffff\",yellow:\"#ffff00\",transparent:[null,null,null,0],_default:\"#ffffff\"}}(jQuery),function(){function i(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,a={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],\"string\"==typeof n[i]&&(a[t.camelCase(i)]=n[i]);else for(i in n)\"string\"==typeof n[i]&&(a[i]=n[i]);return a}function s(e,i){var s,n,o={};for(s in i)n=i[s],e[s]!==n&&(a[s]||(t.fx.step[s]||!isNaN(parseFloat(n)))&&(o[s]=n));return o}var n=[\"add\",\"remove\",\"toggle\"],a={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each([\"borderLeftStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderTopStyle\"],function(e,i){t.fx.step[i]=function(t){(\"none\"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(jQuery.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,a,o,r){var l=t.speed(a,o,r);return this.queue(function(){var a,o=t(this),r=o.attr(\"class\")||\"\",h=l.children?o.find(\"*\").addBack():o;h=h.map(function(){var e=t(this);return{el:e,start:i(this)}}),a=function(){t.each(n,function(t,i){e[i]&&o[i+\"Class\"](e[i])})},a(),h=h.map(function(){return this.end=i(this.el[0]),this.diff=s(this.start,this.end),this}),o.attr(\"class\",r),h=h.map(function(){var e=this,i=t.Deferred(),s=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,h.get()).done(function(){a(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,\"\")})}),l.complete.call(o[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,a){return s?t.effects.animateClass.call(this,{add:i},s,n,a):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,a){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,a):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(i){return function(s,n,a,o,r){return\"boolean\"==typeof n||n===e?a?t.effects.animateClass.call(this,n?{add:s}:{remove:s},a,o,r):i.apply(this,arguments):t.effects.animateClass.call(this,{toggle:s},n,a,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,a){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,a)}})}(),function(){function s(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),(\"number\"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:\"number\"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function n(e){return!e||\"number\"==typeof e||t.fx.speeds[e]?!0:\"string\"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:\"object\"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:\"1.10.4\",save:function(t,e){for(var s=0;e.length>s;s++)null!==e[s]&&t.data(i+e[s],t[0].style[e[s]])},restore:function(t,s){var n,a;for(a=0;s.length>a;a++)null!==s[a]&&(n=t.data(i+s[a]),n===e&&(n=\"\"),t.css(s[a],n))},setMode:function(t,e){return\"toggle\"===e&&(e=t.is(\":hidden\")?\"show\":\"hide\"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case\"top\":i=0;break;case\"middle\":i=.5;break;case\"bottom\":i=1;break;default:i=t[0]/e.height}switch(t[1]){case\"left\":s=0;break;case\"center\":s=.5;break;case\"right\":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createWrapper:function(e){if(e.parent().is(\".ui-effects-wrapper\"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),\"float\":e.css(\"float\")},s=t(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({fontSize:\"100%\",background:\"transparent\",border:\"none\",margin:0,padding:0}),n={width:e.width(),height:e.height()},a=document.activeElement;try{a.id}catch(o){a=document.body}return e.wrap(s),(e[0]===a||t.contains(e[0],a))&&t(a).focus(),s=e.parent(),\"static\"===e.css(\"position\")?(s.css({position:\"relative\"}),e.css({position:\"relative\"})):(t.extend(i,{position:e.css(\"position\"),zIndex:e.css(\"z-index\")}),t.each([\"top\",\"left\",\"bottom\",\"right\"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]=\"auto\")}),e.css({position:\"relative\",top:0,left:0,right:\"auto\",bottom:\"auto\"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(\".ui-effects-wrapper\")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var a=e.cssUnit(i);a[0]>0&&(n[i]=a[0]*s+a[1])}),n}}),t.fn.extend({effect:function(){function e(e){function s(){t.isFunction(a)&&a.call(n[0]),t.isFunction(e)&&e()}var n=t(this),a=i.complete,r=i.mode;(n.is(\":hidden\")?\"hide\"===r:\"show\"===r)?(n[r](),s()):o.call(n[0],i,s)}var i=s.apply(this,arguments),n=i.mode,a=i.queue,o=t.effects.effect[i.effect];return t.fx.off||!o?n?this[n](i.duration,i.complete):this.each(function(){i.complete&&i.complete.call(this)}):a===!1?this.each(e):this.queue(a||\"fx\",e)},show:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode=\"show\",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode=\"hide\",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(n(e)||\"boolean\"==typeof e)return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode=\"toggle\",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each([\"em\",\"px\",\"%\",\"pt\"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s}})}(),function(){var e={};t.each([\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing[\"easeIn\"+e]=i,t.easing[\"easeOut\"+e]=function(t){return 1-i(1-t)},t.easing[\"easeInOut\"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}()})(jQuery);(function(t){var e=/up|down|vertical/,i=/up|left|vertical|horizontal/;t.effects.effect.blind=function(s,n){var a,o,r,l=t(this),h=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],c=t.effects.setMode(l,s.mode||\"hide\"),u=s.direction||\"up\",d=e.test(u),p=d?\"height\":\"width\",f=d?\"top\":\"left\",g=i.test(u),m={},v=\"show\"===c;l.parent().is(\".ui-effects-wrapper\")?t.effects.save(l.parent(),h):t.effects.save(l,h),l.show(),a=t.effects.createWrapper(l).css({overflow:\"hidden\"}),o=a[p](),r=parseFloat(a.css(f))||0,m[p]=v?o:0,g||(l.css(d?\"bottom\":\"right\",0).css(d?\"top\":\"left\",\"auto\").css({position:\"absolute\"}),m[f]=v?r:o+r),v&&(a.css(p,0),g||a.css(f,r+o)),a.animate(m,{duration:s.duration,easing:s.easing,queue:!1,complete:function(){\"hide\"===c&&l.hide(),t.effects.restore(l,h),t.effects.removeWrapper(l),n()}})}})(jQuery);(function(t){t.effects.effect.bounce=function(e,i){var s,n,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],l=t.effects.setMode(o,e.mode||\"effect\"),h=\"hide\"===l,c=\"show\"===l,u=e.direction||\"up\",d=e.distance,p=e.times||5,f=2*p+(c||h?1:0),g=e.duration/f,m=e.easing,v=\"up\"===u||\"down\"===u?\"top\":\"left\",_=\"up\"===u||\"left\"===u,b=o.queue(),y=b.length;for((c||h)&&r.push(\"opacity\"),t.effects.save(o,r),o.show(),t.effects.createWrapper(o),d||(d=o[\"top\"===v?\"outerHeight\":\"outerWidth\"]()/3),c&&(a={opacity:1},a[v]=0,o.css(\"opacity\",0).css(v,_?2*-d:2*d).animate(a,g,m)),h&&(d/=Math.pow(2,p-1)),a={},a[v]=0,s=0;p>s;s++)n={},n[v]=(_?\"-=\":\"+=\")+d,o.animate(n,g,m).animate(a,g,m),d=h?2*d:d/2;h&&(n={opacity:0},n[v]=(_?\"-=\":\"+=\")+d,o.animate(n,g,m)),o.queue(function(){h&&o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}),y>1&&b.splice.apply(b,[1,0].concat(b.splice(y,f+1))),o.dequeue()}})(jQuery);(function(t){t.effects.effect.clip=function(e,i){var s,n,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],l=t.effects.setMode(o,e.mode||\"hide\"),h=\"show\"===l,c=e.direction||\"vertical\",u=\"vertical\"===c,d=u?\"height\":\"width\",p=u?\"top\":\"left\",f={};t.effects.save(o,r),o.show(),s=t.effects.createWrapper(o).css({overflow:\"hidden\"}),n=\"IMG\"===o[0].tagName?s:o,a=n[d](),h&&(n.css(d,0),n.css(p,a/2)),f[d]=h?a:0,f[p]=h?0:a/2,n.animate(f,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){h||o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}})}})(jQuery);(function(t){t.effects.effect.drop=function(e,i){var s,n=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"opacity\",\"height\",\"width\"],o=t.effects.setMode(n,e.mode||\"hide\"),r=\"show\"===o,l=e.direction||\"left\",h=\"up\"===l||\"down\"===l?\"top\":\"left\",c=\"up\"===l||\"left\"===l?\"pos\":\"neg\",u={opacity:r?1:0};t.effects.save(n,a),n.show(),t.effects.createWrapper(n),s=e.distance||n[\"top\"===h?\"outerHeight\":\"outerWidth\"](!0)/2,r&&n.css(\"opacity\",0).css(h,\"pos\"===c?-s:s),u[h]=(r?\"pos\"===c?\"+=\":\"-=\":\"pos\"===c?\"-=\":\"+=\")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}})}})(jQuery);(function(t){t.effects.effect.explode=function(e,i){function s(){b.push(this),b.length===u*d&&n()}function n(){p.css({visibility:\"visible\"}),t(b).remove(),g||p.hide(),i()}var a,o,r,l,h,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=t.effects.setMode(p,e.mode||\"hide\"),g=\"show\"===f,m=p.show().css(\"visibility\",\"hidden\").offset(),v=Math.ceil(p.outerWidth()/d),_=Math.ceil(p.outerHeight()/u),b=[];for(a=0;u>a;a++)for(l=m.top+a*_,c=a-(u-1)/2,o=0;d>o;o++)r=m.left+o*v,h=o-(d-1)/2,p.clone().appendTo(\"body\").wrap(\"<div></div>\").css({position:\"absolute\",visibility:\"visible\",left:-o*v,top:-a*_}).parent().addClass(\"ui-effects-explode\").css({position:\"absolute\",overflow:\"hidden\",width:v,height:_,left:r+(g?h*v:0),top:l+(g?c*_:0),opacity:g?0:1}).animate({left:r+(g?0:h*v),top:l+(g?0:c*_),opacity:g?1:0},e.duration||500,e.easing,s)}})(jQuery);(function(t){t.effects.effect.fade=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||\"toggle\");s.animate({opacity:n},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}})(jQuery);(function(t){t.effects.effect.fold=function(e,i){var s,n,a=t(this),o=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],r=t.effects.setMode(a,e.mode||\"hide\"),l=\"show\"===r,h=\"hide\"===r,c=e.size||15,u=/([0-9]+)%/.exec(c),d=!!e.horizFirst,p=l!==d,f=p?[\"width\",\"height\"]:[\"height\",\"width\"],g=e.duration/2,m={},v={};t.effects.save(a,o),a.show(),s=t.effects.createWrapper(a).css({overflow:\"hidden\"}),n=p?[s.width(),s.height()]:[s.height(),s.width()],u&&(c=parseInt(u[1],10)/100*n[h?0:1]),l&&s.css(d?{height:0,width:c}:{height:c,width:0}),m[f[0]]=l?n[0]:c,v[f[1]]=l?n[1]:0,s.animate(m,g,e.easing).animate(v,g,e.easing,function(){h&&a.hide(),t.effects.restore(a,o),t.effects.removeWrapper(a),i()})}})(jQuery);(function(t){t.effects.effect.highlight=function(e,i){var s=t(this),n=[\"backgroundImage\",\"backgroundColor\",\"opacity\"],a=t.effects.setMode(s,e.mode||\"show\"),o={backgroundColor:s.css(\"backgroundColor\")};\"hide\"===a&&(o.opacity=0),t.effects.save(s,n),s.show().css({backgroundImage:\"none\",backgroundColor:e.color||\"#ffff99\"}).animate(o,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===a&&s.hide(),t.effects.restore(s,n),i()}})}})(jQuery);(function(t){t.effects.effect.pulsate=function(e,i){var s,n=t(this),a=t.effects.setMode(n,e.mode||\"show\"),o=\"show\"===a,r=\"hide\"===a,l=o||\"hide\"===a,h=2*(e.times||5)+(l?1:0),c=e.duration/h,u=0,d=n.queue(),p=d.length;for((o||!n.is(\":visible\"))&&(n.css(\"opacity\",0).show(),u=1),s=1;h>s;s++)n.animate({opacity:u},c,e.easing),u=1-u;n.animate({opacity:u},c,e.easing),n.queue(function(){r&&n.hide(),i()}),p>1&&d.splice.apply(d,[1,0].concat(d.splice(p,h+1))),n.dequeue()}})(jQuery);(function(t){t.effects.effect.puff=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||\"hide\"),a=\"hide\"===n,o=parseInt(e.percent,10)||150,r=o/100,l={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()};t.extend(e,{effect:\"scale\",queue:!1,fade:!0,mode:n,complete:i,percent:a?o:100,from:a?l:{height:l.height*r,width:l.width*r,outerHeight:l.outerHeight*r,outerWidth:l.outerWidth*r}}),s.effect(e)},t.effects.effect.scale=function(e,i){var s=t(this),n=t.extend(!0,{},e),a=t.effects.setMode(s,e.mode||\"effect\"),o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:\"hide\"===a?0:100),r=e.direction||\"both\",l=e.origin,h={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()},c={y:\"horizontal\"!==r?o/100:1,x:\"vertical\"!==r?o/100:1};n.effect=\"size\",n.queue=!1,n.complete=i,\"effect\"!==a&&(n.origin=l||[\"middle\",\"center\"],n.restore=!0),n.from=e.from||(\"show\"===a?{height:0,width:0,outerHeight:0,outerWidth:0}:h),n.to={height:h.height*c.y,width:h.width*c.x,outerHeight:h.outerHeight*c.y,outerWidth:h.outerWidth*c.x},n.fade&&(\"show\"===a&&(n.from.opacity=0,n.to.opacity=1),\"hide\"===a&&(n.from.opacity=1,n.to.opacity=0)),s.effect(n)},t.effects.effect.size=function(e,i){var s,n,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\",\"overflow\",\"opacity\"],l=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"overflow\",\"opacity\"],h=[\"width\",\"height\",\"overflow\"],c=[\"fontSize\"],u=[\"borderTopWidth\",\"borderBottomWidth\",\"paddingTop\",\"paddingBottom\"],d=[\"borderLeftWidth\",\"borderRightWidth\",\"paddingLeft\",\"paddingRight\"],p=t.effects.setMode(o,e.mode||\"effect\"),f=e.restore||\"effect\"!==p,g=e.scale||\"both\",m=e.origin||[\"middle\",\"center\"],v=o.css(\"position\"),_=f?r:l,b={height:0,width:0,outerHeight:0,outerWidth:0};\"show\"===p&&o.show(),s={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},\"toggle\"===e.mode&&\"show\"===p?(o.from=e.to||b,o.to=e.from||s):(o.from=e.from||(\"show\"===p?b:s),o.to=e.to||(\"hide\"===p?b:s)),a={from:{y:o.from.height/s.height,x:o.from.width/s.width},to:{y:o.to.height/s.height,x:o.to.width/s.width}},(\"box\"===g||\"both\"===g)&&(a.from.y!==a.to.y&&(_=_.concat(u),o.from=t.effects.setTransition(o,u,a.from.y,o.from),o.to=t.effects.setTransition(o,u,a.to.y,o.to)),a.from.x!==a.to.x&&(_=_.concat(d),o.from=t.effects.setTransition(o,d,a.from.x,o.from),o.to=t.effects.setTransition(o,d,a.to.x,o.to))),(\"content\"===g||\"both\"===g)&&a.from.y!==a.to.y&&(_=_.concat(c).concat(h),o.from=t.effects.setTransition(o,c,a.from.y,o.from),o.to=t.effects.setTransition(o,c,a.to.y,o.to)),t.effects.save(o,_),o.show(),t.effects.createWrapper(o),o.css(\"overflow\",\"hidden\").css(o.from),m&&(n=t.effects.getBaseline(m,s),o.from.top=(s.outerHeight-o.outerHeight())*n.y,o.from.left=(s.outerWidth-o.outerWidth())*n.x,o.to.top=(s.outerHeight-o.to.outerHeight)*n.y,o.to.left=(s.outerWidth-o.to.outerWidth)*n.x),o.css(o.from),(\"content\"===g||\"both\"===g)&&(u=u.concat([\"marginTop\",\"marginBottom\"]).concat(c),d=d.concat([\"marginLeft\",\"marginRight\"]),h=r.concat(u).concat(d),o.find(\"*[width]\").each(function(){var i=t(this),s={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};f&&t.effects.save(i,h),i.from={height:s.height*a.from.y,width:s.width*a.from.x,outerHeight:s.outerHeight*a.from.y,outerWidth:s.outerWidth*a.from.x},i.to={height:s.height*a.to.y,width:s.width*a.to.x,outerHeight:s.height*a.to.y,outerWidth:s.width*a.to.x},a.from.y!==a.to.y&&(i.from=t.effects.setTransition(i,u,a.from.y,i.from),i.to=t.effects.setTransition(i,u,a.to.y,i.to)),a.from.x!==a.to.x&&(i.from=t.effects.setTransition(i,d,a.from.x,i.from),i.to=t.effects.setTransition(i,d,a.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){f&&t.effects.restore(i,h)})})),o.animate(o.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===o.to.opacity&&o.css(\"opacity\",o.from.opacity),\"hide\"===p&&o.hide(),t.effects.restore(o,_),f||(\"static\"===v?o.css({position:\"relative\",top:o.to.top,left:o.to.left}):t.each([\"top\",\"left\"],function(t,e){o.css(e,function(e,i){var s=parseInt(i,10),n=t?o.to.left:o.to.top;return\"auto\"===i?n+\"px\":s+n+\"px\"})})),t.effects.removeWrapper(o),i()}})}})(jQuery);(function(t){t.effects.effect.shake=function(e,i){var s,n=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],o=t.effects.setMode(n,e.mode||\"effect\"),r=e.direction||\"left\",l=e.distance||20,h=e.times||3,c=2*h+1,u=Math.round(e.duration/c),d=\"up\"===r||\"down\"===r?\"top\":\"left\",p=\"up\"===r||\"left\"===r,f={},g={},m={},v=n.queue(),_=v.length;for(t.effects.save(n,a),n.show(),t.effects.createWrapper(n),f[d]=(p?\"-=\":\"+=\")+l,g[d]=(p?\"+=\":\"-=\")+2*l,m[d]=(p?\"-=\":\"+=\")+2*l,n.animate(f,u,e.easing),s=1;h>s;s++)n.animate(g,u,e.easing).animate(m,u,e.easing);n.animate(g,u,e.easing).animate(f,u/2,e.easing).queue(function(){\"hide\"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}),_>1&&v.splice.apply(v,[1,0].concat(v.splice(_,c+1))),n.dequeue()}})(jQuery);(function(t){t.effects.effect.slide=function(e,i){var s,n=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\"],o=t.effects.setMode(n,e.mode||\"show\"),r=\"show\"===o,l=e.direction||\"left\",h=\"up\"===l||\"down\"===l?\"top\":\"left\",c=\"up\"===l||\"left\"===l,u={};t.effects.save(n,a),n.show(),s=e.distance||n[\"top\"===h?\"outerHeight\":\"outerWidth\"](!0),t.effects.createWrapper(n).css({overflow:\"hidden\"}),r&&n.css(h,c?isNaN(s)?\"-\"+s:-s:s),u[h]=(r?c?\"+=\":\"-=\":c?\"-=\":\"+=\")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}})}})(jQuery);(function(t){t.effects.effect.transfer=function(e,i){var s=t(this),n=t(e.to),a=\"fixed\"===n.css(\"position\"),o=t(\"body\"),r=a?o.scrollTop():0,l=a?o.scrollLeft():0,h=n.offset(),c={top:h.top-r,left:h.left-l,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t(\"<div class='ui-effects-transfer'></div>\").appendTo(document.body).addClass(e.className).css({top:u.top-r,left:u.left-l,height:s.innerHeight(),width:s.innerWidth(),position:a?\"fixed\":\"absolute\"}).animate(c,e.duration,e.easing,function(){d.remove(),i()})}})(jQuery);(function(t){t.widget(\"ui.menu\",{version:\"1.10.4\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-carat-1-e\"},menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length).attr({role:this.options.role,tabIndex:0}).bind(\"click\"+this.eventNamespace,t.proxy(function(t){this.options.disabled&&t.preventDefault()},this)),this.options.disabled&&this.element.addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this._on({\"mousedown .ui-menu-item > a\":function(t){t.preventDefault()},\"click .ui-state-disabled > a\":function(t){t.preventDefault()},\"click .ui-menu-item:has(a)\":function(e){var i=t(e.target).closest(\".ui-menu-item\");!this.mouseHandled&&i.not(\".ui-state-disabled\").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(\".ui-menu\").length?this.expand(e):!this.element.is(\":focus\")&&t(this.document[0].activeElement).closest(\".ui-menu\").length&&(this.element.trigger(\"focus\",[!0]),this.active&&1===this.active.parents(\".ui-menu\").length&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":function(e){var i=t(e.currentTarget);i.siblings().children(\".ui-state-active\").removeClass(\"ui-state-active\"),this.focus(e,i)},mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(t,e){var i=this.active||this.element.children(\".ui-menu-item\").eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){t.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(e)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(e){t(e.target).closest(\".ui-menu\").length||this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeClass(\"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-disabled\").removeUniqueId().show(),this.element.find(\".ui-menu-item\").removeClass(\"ui-menu-item\").removeAttr(\"role\").removeAttr(\"aria-disabled\").children(\"a\").removeUniqueId().removeClass(\"ui-corner-all ui-state-hover\").removeAttr(\"tabIndex\").removeAttr(\"role\").removeAttr(\"aria-haspopup\").children().each(function(){var e=t(this);e.data(\"ui-menu-submenu-carat\")&&e.remove()}),this.element.find(\".ui-menu-divider\").removeClass(\"ui-menu-divider ui-widget-content\")},_keydown:function(e){function i(t){return t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")}var s,n,a,o,r,l=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move(\"first\",\"first\",e);break;case t.ui.keyCode.END:this._move(\"last\",\"last\",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:l=!1,n=this.previousFilter||\"\",a=String.fromCharCode(e.keyCode),o=!1,clearTimeout(this.filterTimer),a===n?o=!0:a=n+a,r=RegExp(\"^\"+i(a),\"i\"),s=this.activeMenu.children(\".ui-menu-item\").filter(function(){return r.test(t(this).children(\"a\").text())}),s=o&&-1!==s.index(this.active.next())?this.active.nextAll(\".ui-menu-item\"):s,s.length||(a=String.fromCharCode(e.keyCode),r=RegExp(\"^\"+i(a),\"i\"),s=this.activeMenu.children(\".ui-menu-item\").filter(function(){return r.test(t(this).children(\"a\").text())})),s.length?(this.focus(e,s),s.length>1?(this.previousFilter=a,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}l&&e.preventDefault()},_activate:function(t){this.active.is(\".ui-state-disabled\")||(this.active.children(\"a[aria-haspopup='true']\").length?this.expand(t):this.select(t))},refresh:function(){var e,i=this.options.icons.submenu,s=this.element.find(this.options.menus);this.element.toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length),s.filter(\":not(.ui-menu)\").addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var e=t(this),s=e.prev(\"a\"),n=t(\"<span>\").addClass(\"ui-menu-icon ui-icon \"+i).data(\"ui-menu-submenu-carat\",!0);s.attr(\"aria-haspopup\",\"true\").prepend(n),e.attr(\"aria-labelledby\",s.attr(\"id\"))}),e=s.add(this.element),e.children(\":not(.ui-menu-item):has(a)\").addClass(\"ui-menu-item\").attr(\"role\",\"presentation\").children(\"a\").uniqueId().addClass(\"ui-corner-all\").attr({tabIndex:-1,role:this._itemRole()}),e.children(\":not(.ui-menu-item)\").each(function(){var e=t(this);/[^\\-\\u2014\\u2013\\s]/.test(e.text())||e.addClass(\"ui-widget-content ui-menu-divider\")}),e.children(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(t,e){\"icons\"===t&&this.element.find(\".ui-menu-icon\").removeClass(this.options.icons.submenu).addClass(e.submenu),this._super(t,e)},focus:function(t,e){var i,s;this.blur(t,t&&\"focus\"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(\"a\").addClass(\"ui-state-focus\"),this.options.role&&this.element.attr(\"aria-activedescendant\",s.attr(\"id\")),this.active.parent().closest(\".ui-menu-item\").children(\"a:first\").addClass(\"ui-state-active\"),t&&\"keydown\"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(\".ui-menu\"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger(\"focus\",t,{item:e})},_scrollIntoView:function(e){var i,s,n,a,o,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],\"borderTopWidth\"))||0,s=parseFloat(t.css(this.activeMenu[0],\"paddingTop\"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=e.height(),0>n?this.activeMenu.scrollTop(a+n):n+r>o&&this.activeMenu.scrollTop(a+n-o+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this.active.children(\"a\").removeClass(\"ui-state-focus\"),this.active=null,this._trigger(\"blur\",t,{item:this.active}))},_startOpening:function(t){clearTimeout(this.timer),\"true\"===t.attr(\"aria-hidden\")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(e.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),e.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(\".ui-menu\"));s.length||(s=this.element),this._close(s),this.blur(e),this.activeMenu=s},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\").end().find(\"a.ui-state-active\").removeClass(\"ui-state-active\")},collapse:function(t){var e=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(\".ui-menu \").children(\".ui-menu-item\").first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move(\"next\",\"first\",t)},previous:function(t){this._move(\"prev\",\"last\",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_move:function(t,e,i){var s;this.active&&(s=\"first\"===t||\"last\"===t?this.active[\"first\"===t?\"prevAll\":\"nextAll\"](\".ui-menu-item\").eq(-1):this.active[t+\"All\"](\".ui-menu-item\").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.children(\".ui-menu-item\")[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(\".ui-menu-item\").each(function(){return i=t(this),0>i.offset().top-s-n}),this.focus(e,i)):this.focus(e,this.activeMenu.children(\".ui-menu-item\")[this.active?\"last\":\"first\"]())),undefined):(this.next(e),undefined)},previousPage:function(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(\".ui-menu-item\").each(function(){return i=t(this),i.offset().top-s+n>0}),this.focus(e,i)):this.focus(e,this.activeMenu.children(\".ui-menu-item\").first())),undefined):(this.next(e),undefined)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(e){this.active=this.active||t(e.target).closest(\".ui-menu-item\");var i={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(e,!0),this._trigger(\"select\",e,i)}})})(jQuery);(function(t,e){t.widget(\"ui.progressbar\",{version:\"1.10.4\",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").attr({role:\"progressbar\",\"aria-valuemin\":this.min}),this.valueDiv=t(\"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.valueDiv.remove()},value:function(t){return t===e?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),e)},_constrainedValue:function(t){return t===e&&(t=this.options.value),this.indeterminate=t===!1,\"number\"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){\"max\"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).toggleClass(\"ui-corner-right\",e===this.options.max).width(i.toFixed(0)+\"%\"),this.element.toggleClass(\"ui-progressbar-indeterminate\",this.indeterminate),this.indeterminate?(this.element.removeAttr(\"aria-valuenow\"),this.overlayDiv||(this.overlayDiv=t(\"<div class='ui-progressbar-overlay'></div>\").appendTo(this.valueDiv))):(this.element.attr({\"aria-valuemax\":this.options.max,\"aria-valuenow\":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger(\"change\")),e===this.options.max&&this._trigger(\"complete\")}})})(jQuery);(function(t){function e(t){return parseInt(t,10)||0}function i(t){return!isNaN(parseInt(t,10))}t.widget(\"ui.resizable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var e,i,s,n,a,o=this,r=this.options;if(this.element.addClass(\"ui-resizable\"),t.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(t(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.data(\"ui-resizable\")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css(\"marginLeft\"),marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css({margin:this.originalElement.css(\"margin\")}),this._proportionallyResize()),this.handles=r.handles||(t(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\"),this.handles.constructor===String)for(\"all\"===this.handles&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),e=this.handles.split(\",\"),this.handles={},i=0;e.length>i;i++)s=t.trim(e[i]),a=\"ui-resizable-\"+s,n=t(\"<div class='ui-resizable-handle \"+a+\"'></div>\"),n.css({zIndex:r.zIndex}),\"se\"===s&&n.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\"),this.handles[s]=\".ui-resizable-\"+s,this.element.append(n);this._renderAxis=function(e){var i,s,n,a;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String&&(this.handles[i]=t(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(s=t(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=[\"padding\",/ne|nw|n/.test(i)?\"Top\":/se|sw|s/.test(i)?\"Bottom\":/^e$/.test(i)?\"Right\":\"Left\"].join(\"\"),e.css(n,a),this._proportionallyResize()),t(this.handles[i]).length},this._renderAxis(this.element),this._handles=t(\".ui-resizable-handle\",this.element).disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(n=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=n&&n[1]?n[1]:\"se\")}),r.autoHide&&(this._handles.hide(),t(this.element).addClass(\"ui-resizable-autohide\").mouseenter(function(){r.disabled||(t(this).removeClass(\"ui-resizable-autohide\"),o._handles.show())}).mouseleave(function(){r.disabled||o.resizing||(t(this).addClass(\"ui-resizable-autohide\"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\").removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css(\"position\"),width:e.outerWidth(),height:e.outerHeight(),top:e.css(\"top\"),left:e.css(\"left\")}).insertAfter(e),e.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(i){var s,n,a,o=this.options,r=this.element.position(),h=this.element;return this.resizing=!0,/absolute/.test(h.css(\"position\"))?h.css({position:\"absolute\",top:h.css(\"top\"),left:h.css(\"left\")}):h.is(\".ui-draggable\")&&h.css({position:\"absolute\",top:r.top,left:r.left}),this._renderProxy(),s=e(this.helper.css(\"left\")),n=e(this.helper.css(\"top\")),o.containment&&(s+=t(o.containment).scrollLeft()||0,n+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:s,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:h.width(),height:h.height()},this.originalSize=this._helper?{width:h.outerWidth(),height:h.outerHeight()}:{width:h.width(),height:h.height()},this.originalPosition={left:s,top:n},this.sizeDiff={width:h.outerWidth()-h.width(),height:h.outerHeight()-h.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio=\"number\"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,a=t(\".ui-resizable-\"+this.axis).css(\"cursor\"),t(\"body\").css(\"cursor\",\"auto\"===a?this.axis+\"-resize\":a),h.addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",i),!0},_mouseDrag:function(e){var i,s=this.helper,n={},a=this.originalMousePosition,o=this.axis,r=this.position.top,h=this.position.left,l=this.size.width,c=this.size.height,u=e.pageX-a.left||0,d=e.pageY-a.top||0,p=this._change[o];return p?(i=p.apply(this,[e,u,d]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate(\"resize\",e),this.position.top!==r&&(n.top=this.position.top+\"px\"),this.position.left!==h&&(n.left=this.position.left+\"px\"),this.size.width!==l&&(n.width=this.size.width+\"px\"),this.size.height!==c&&(n.height=this.size.height+\"px\"),s.css(n),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(n)||this._trigger(\"resize\",e,this.ui()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,a,o,r,h,l=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&t.ui.hasScroll(i[0],\"left\")?0:c.sizeDiff.height,a=s?0:c.sizeDiff.width,o={width:c.helper.width()-a,height:c.helper.height()-n},r=parseInt(c.element.css(\"left\"),10)+(c.position.left-c.originalPosition.left)||null,h=parseInt(c.element.css(\"top\"),10)+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(o,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!l.animate&&this._proportionallyResize()),t(\"body\").css(\"cursor\",\"auto\"),this.element.removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",e),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(t){var e,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),i(t.left)&&(this.position.left=t.left),i(t.top)&&(this.position.top=t.top),i(t.height)&&(this.size.height=t.height),i(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,s=this.size,n=this.axis;return i(t.height)?t.width=t.height*this.aspectRatio:i(t.width)&&(t.height=t.width/this.aspectRatio),\"sw\"===n&&(t.left=e.left+(s.width-t.width),t.top=null),\"nw\"===n&&(t.top=e.top+(s.height-t.height),t.left=e.left+(s.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,s=this.axis,n=i(t.width)&&e.maxWidth&&e.maxWidth<t.width,a=i(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=i(t.width)&&e.minWidth&&e.minWidth>t.width,r=i(t.height)&&e.minHeight&&e.minHeight>t.height,h=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,c=/sw|nw|w/.test(s),u=/nw|ne|n/.test(s);return o&&(t.width=e.minWidth),r&&(t.height=e.minHeight),n&&(t.width=e.maxWidth),a&&(t.height=e.maxHeight),o&&c&&(t.left=h-e.minWidth),n&&c&&(t.left=h-e.maxWidth),r&&u&&(t.top=l-e.minHeight),a&&u&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var t,e,i,s,n,a=this.helper||this.element;for(t=0;this._proportionallyResizeElements.length>t;t++){if(n=this._proportionallyResizeElements[t],!this.borderDif)for(this.borderDif=[],i=[n.css(\"borderTopWidth\"),n.css(\"borderRightWidth\"),n.css(\"borderBottomWidth\"),n.css(\"borderLeftWidth\")],s=[n.css(\"paddingTop\"),n.css(\"paddingRight\"),n.css(\"paddingBottom\"),n.css(\"paddingLeft\")],e=0;i.length>e;e++)this.borderDif[e]=(parseInt(i[e],10)||0)+(parseInt(s[e],10)||0);n.css({height:a.height()-this.borderDif[0]-this.borderDif[2]||0,width:a.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t(\"<div style='overflow:hidden;'></div>\"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++i.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),\"resize\"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add(\"resizable\",\"animate\",{stop:function(e){var i=t(this).data(\"ui-resizable\"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&t.ui.hasScroll(n[0],\"left\")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css(\"left\"),10)+(i.position.left-i.originalPosition.left)||null,c=parseInt(i.element.css(\"top\"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&&l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css(\"width\"),10),height:parseInt(i.element.css(\"height\"),10),top:parseInt(i.element.css(\"top\"),10),left:parseInt(i.element.css(\"left\"),10)};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate(\"resize\",e)}})}}),t.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n,a,o,r,h,l=t(this).data(\"ui-resizable\"),c=l.options,u=l.element,d=c.containment,p=d instanceof t?d.get(0):/parent/.test(d)?u.parent().get(0):d;p&&(l.containerElement=t(p),/document/.test(d)||d===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(i=t(p),s=[],t([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(t,n){s[t]=e(i.css(\"padding\"+n))}),l.containerOffset=i.offset(),l.containerPosition=i.position(),l.containerSize={height:i.innerHeight()-s[3],width:i.innerWidth()-s[1]},n=l.containerOffset,a=l.containerSize.height,o=l.containerSize.width,r=t.ui.hasScroll(p,\"left\")?p.scrollWidth:o,h=t.ui.hasScroll(p)?p.scrollHeight:a,l.parentData={element:p,left:n.left,top:n.top,width:r,height:h}))},resize:function(e){var i,s,n,a,o=t(this).data(\"ui-resizable\"),r=o.options,h=o.containerOffset,l=o.position,c=o._aspectRatio||e.shiftKey,u={top:0,left:0},d=o.containerElement;d[0]!==document&&/static/.test(d.css(\"position\"))&&(u=h),l.left<(o._helper?h.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-h.left:o.position.left-u.left),c&&(o.size.height=o.size.width/o.aspectRatio),o.position.left=r.helper?h.left:0),l.top<(o._helper?h.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-h.top:o.position.top),c&&(o.size.width=o.size.height*o.aspectRatio),o.position.top=o._helper?h.top:0),o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top,i=Math.abs((o._helper?o.offset.left-u.left:o.offset.left-u.left)+o.sizeDiff.width),s=Math.abs((o._helper?o.offset.top-u.top:o.offset.top-h.top)+o.sizeDiff.height),n=o.containerElement.get(0)===o.element.parent().get(0),a=/relative|absolute/.test(o.containerElement.css(\"position\")),n&&a&&(i-=Math.abs(o.parentData.left)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,c&&(o.size.height=o.size.width/o.aspectRatio)),s+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-s,c&&(o.size.width=o.size.height*o.aspectRatio))},stop:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,s=e.containerOffset,n=e.containerPosition,a=e.containerElement,o=t(e.helper),r=o.offset(),h=o.outerWidth()-e.sizeDiff.width,l=o.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(a.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&&!i.animate&&/static/.test(a.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),t.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,s=function(e){t(e).each(function(){var e=t(this);e.data(\"ui-resizable-alsoresize\",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css(\"left\"),10),top:parseInt(e.css(\"top\"),10)})})};\"object\"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):t.each(i.alsoResize,function(t){s(t)})},resize:function(e,i){var s=t(this).data(\"ui-resizable\"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(e,s){t(e).each(function(){var e=t(this),n=t(this).data(\"ui-resizable-alsoresize\"),a={},o=s&&s.length?s:e.parents(i.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];t.each(o,function(t,e){var i=(n[e]||0)+(r[e]||0);i&&i>=0&&(a[e]=i||null)}),e.css(a)})};\"object\"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):t.each(n.alsoResize,function(t,e){h(t,e)})},stop:function(){t(this).removeData(\"resizable-alsoresize\")}}),t.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,s=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass(\"ui-resizable-ghost\").addClass(\"string\"==typeof i.ghost?i.ghost:\"\"),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).data(\"ui-resizable\");e.ghost&&e.ghost.css({position:\"relative\",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).data(\"ui-resizable\");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,s=e.size,n=e.originalSize,a=e.originalPosition,o=e.axis,r=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,h=r[0]||1,l=r[1]||1,c=Math.round((s.width-n.width)/h)*h,u=Math.round((s.height-n.height)/l)*l,d=n.width+c,p=n.height+u,f=i.maxWidth&&d>i.maxWidth,g=i.maxHeight&&p>i.maxHeight,m=i.minWidth&&i.minWidth>d,v=i.minHeight&&i.minHeight>p;i.grid=r,m&&(d+=h),v&&(p+=l),f&&(d-=h),g&&(p-=l),/^(se|s|e)$/.test(o)?(e.size.width=d,e.size.height=p):/^(ne)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.top=a.top-u):/^(sw)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.left=a.left-c):(p-l>0?(e.size.height=p,e.position.top=a.top-u):(e.size.height=l,e.position.top=a.top+n.height-l),d-h>0?(e.size.width=d,e.position.left=a.left-c):(e.size.width=h,e.position.left=a.left+n.width-h))}})})(jQuery);(function(t){t.widget(\"ui.selectable\",t.ui.mouse,{version:\"1.10.4\",options:{appendTo:\"body\",autoRefresh:!0,distance:0,filter:\"*\",tolerance:\"touch\",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass(\"ui-selectable\"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass(\"ui-selectee\"),e.each(function(){var e=t(this),i=e.offset();t.data(this,\"selectable-item\",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass(\"ui-selected\"),selecting:e.hasClass(\"ui-selecting\"),unselecting:e.hasClass(\"ui-unselecting\")})})},this.refresh(),this.selectees=e.addClass(\"ui-selectee\"),this._mouseInit(),this.helper=t(\"<div class='ui-selectable-helper'></div>\")},_destroy:function(){this.selectees.removeClass(\"ui-selectee\").removeData(\"selectable-item\"),this.element.removeClass(\"ui-selectable ui-selectable-disabled\"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger(\"start\",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(\".ui-selected\").each(function(){var s=t.data(this,\"selectable-item\");s.startselected=!0,e.metaKey||e.ctrlKey||(s.$element.removeClass(\"ui-selected\"),s.selected=!1,s.$element.addClass(\"ui-unselecting\"),s.unselecting=!0,i._trigger(\"unselecting\",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,\"selectable-item\");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass(\"ui-selected\"),n.$element.removeClass(s?\"ui-unselecting\":\"ui-selected\").addClass(s?\"ui-selecting\":\"ui-unselecting\"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger(\"selecting\",e,{selecting:n.element}):i._trigger(\"unselecting\",e,{unselecting:n.element}),!1):undefined}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,a=this.opos[0],o=this.opos[1],r=e.pageX,l=e.pageY;return a>r&&(i=r,r=a,a=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:a,top:o,width:r-a,height:l-o}),this.selectees.each(function(){var i=t.data(this,\"selectable-item\"),h=!1;i&&i.element!==s.element[0]&&(\"touch\"===n.tolerance?h=!(i.left>r||a>i.right||i.top>l||o>i.bottom):\"fit\"===n.tolerance&&(h=i.left>a&&r>i.right&&i.top>o&&l>i.bottom),h?(i.selected&&(i.$element.removeClass(\"ui-selected\"),i.selected=!1),i.unselecting&&(i.$element.removeClass(\"ui-unselecting\"),i.unselecting=!1),i.selecting||(i.$element.addClass(\"ui-selecting\"),i.selecting=!0,s._trigger(\"selecting\",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(i.$element.removeClass(\"ui-selecting\"),i.selecting=!1,i.$element.addClass(\"ui-selected\"),i.selected=!0):(i.$element.removeClass(\"ui-selecting\"),i.selecting=!1,i.startselected&&(i.$element.addClass(\"ui-unselecting\"),i.unselecting=!0),s._trigger(\"unselecting\",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass(\"ui-selected\"),i.selected=!1,i.$element.addClass(\"ui-unselecting\"),i.unselecting=!0,s._trigger(\"unselecting\",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(\".ui-unselecting\",this.element[0]).each(function(){var s=t.data(this,\"selectable-item\");s.$element.removeClass(\"ui-unselecting\"),s.unselecting=!1,s.startselected=!1,i._trigger(\"unselected\",e,{unselected:s.element})}),t(\".ui-selecting\",this.element[0]).each(function(){var s=t.data(this,\"selectable-item\");s.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger(\"selected\",e,{selected:s.element})}),this._trigger(\"stop\",e),this.helper.remove(),!1}})})(jQuery);(function(t){var e=5;t.widget(\"ui.slider\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"slide\",options:{animate:!1,distance:0,max:100,min:0,orientation:\"horizontal\",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass(\"ui-slider ui-slider-\"+this.orientation+\" ui-widget\"+\" ui-widget-content\"+\" ui-corner-all\"),this._refresh(),this._setOption(\"disabled\",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(\".ui-slider-handle\").addClass(\"ui-state-default ui-corner-all\"),a=\"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",o=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i>e;e++)o.push(a);this.handles=n.add(t(o.join(\"\")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data(\"ui-slider-handle-index\",e)})},_createRange:function(){var e=this.options,i=\"\";e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?this.range.removeClass(\"ui-slider-range-min ui-slider-range-max\").css({left:\"\",bottom:\"\"}):(this.range=t(\"<div></div>\").appendTo(this.element),i=\"ui-slider-range ui-widget-header ui-corner-all\"),this.range.addClass(i+(\"min\"===e.range||\"max\"===e.range?\" ui-slider-range-\"+e.range:\"\"))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){var t=this.handles.add(this.range).filter(\"a\");this._off(t),this._on(t,this._handleEvents),this._hoverable(t),this._focusable(t)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass(\"ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all\"),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,a,o,r,l,h,u=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-u.values(e));(n>i||n===i&&(e===u._lastChangedValue||u.values(e)===c.min))&&(n=i,a=t(this),o=e)}),r=this._start(e,o),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,a.addClass(\"ui-state-active\").focus(),l=a.offset(),h=!t(e.target).parents().addBack().is(\".ui-slider-handle\"),this._clickOffset=h?{left:0,top:0}:{left:e.pageX-l.left-a.width()/2,top:e.pageY-l.top-a.height()/2-(parseInt(a.css(\"borderTopWidth\"),10)||0)-(parseInt(a.css(\"borderBottomWidth\"),10)||0)+(parseInt(a.css(\"marginTop\"),10)||0)},this.handles.hasClass(\"ui-state-hover\")||this._slide(e,o,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this.handles.removeClass(\"ui-state-active\"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=\"vertical\"===this.options.orientation?\"vertical\":\"horizontal\"},_normValueFromMouse:function(t){var e,i,s,n,a;return\"horizontal\"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s>1&&(s=1),0>s&&(s=0),\"vertical\"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),a=this._valueMin()+s*n,this._trimAlignValue(a)},_start:function(t,e){var i={handle:this.handles[e],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger(\"start\",t,i)},_slide:function(t,e,i){var s,n,a;this.options.values&&this.options.values.length?(s=this.values(e?0:1),2===this.options.values.length&&this.options.range===!0&&(0===e&&i>s||1===e&&s>i)&&(i=s),i!==this.values(e)&&(n=this.values(),n[e]=i,a=this._trigger(\"slide\",t,{handle:this.handles[e],value:i,values:n}),s=this.values(e?0:1),a!==!1&&this.values(e,i))):i!==this.value()&&(a=this._trigger(\"slide\",t,{handle:this.handles[e],value:i}),a!==!1&&this.value(i))},_stop:function(t,e){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger(\"stop\",t,i)},_change:function(t,e){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._lastChangedValue=e,this._trigger(\"change\",t,i)}},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),undefined):this._value()},values:function(e,i){var s,n,a;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),undefined;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(e):this.value();for(s=this.options.values,n=arguments[0],a=0;s.length>a;a+=1)s[a]=this._trimAlignValue(n[a]),this._change(null,a);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch(\"range\"===e&&this.options.range===!0&&(\"min\"===i?(this.options.value=this._values(0),this.options.values=null):\"max\"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),t.Widget.prototype._setOption.apply(this,arguments),e){case\"orientation\":this._detectOrientation(),this.element.removeClass(\"ui-slider-horizontal ui-slider-vertical\").addClass(\"ui-slider-\"+this.orientation),this._refreshValue();break;case\"value\":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case\"values\":for(this._animateOff=!0,this._refreshValue(),s=0;n>s;s+=1)this._change(null,s);this._animateOff=!1;break;case\"min\":case\"max\":this._animateOff=!0,this._refreshValue(),this._animateOff=!1;break;case\"range\":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),s=0;i.length>s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var e,i,s,n,a,o=this.options.range,r=this.options,l=this,h=this._animateOff?!1:r.animate,u={};this.options.values&&this.options.values.length?this.handles.each(function(s){i=100*((l.values(s)-l._valueMin())/(l._valueMax()-l._valueMin())),u[\"horizontal\"===l.orientation?\"left\":\"bottom\"]=i+\"%\",t(this).stop(1,1)[h?\"animate\":\"css\"](u,r.animate),l.options.range===!0&&(\"horizontal\"===l.orientation?(0===s&&l.range.stop(1,1)[h?\"animate\":\"css\"]({left:i+\"%\"},r.animate),1===s&&l.range[h?\"animate\":\"css\"]({width:i-e+\"%\"},{queue:!1,duration:r.animate})):(0===s&&l.range.stop(1,1)[h?\"animate\":\"css\"]({bottom:i+\"%\"},r.animate),1===s&&l.range[h?\"animate\":\"css\"]({height:i-e+\"%\"},{queue:!1,duration:r.animate}))),e=i}):(s=this.value(),n=this._valueMin(),a=this._valueMax(),i=a!==n?100*((s-n)/(a-n)):0,u[\"horizontal\"===this.orientation?\"left\":\"bottom\"]=i+\"%\",this.handle.stop(1,1)[h?\"animate\":\"css\"](u,r.animate),\"min\"===o&&\"horizontal\"===this.orientation&&this.range.stop(1,1)[h?\"animate\":\"css\"]({width:i+\"%\"},r.animate),\"max\"===o&&\"horizontal\"===this.orientation&&this.range[h?\"animate\":\"css\"]({width:100-i+\"%\"},{queue:!1,duration:r.animate}),\"min\"===o&&\"vertical\"===this.orientation&&this.range.stop(1,1)[h?\"animate\":\"css\"]({height:i+\"%\"},r.animate),\"max\"===o&&\"vertical\"===this.orientation&&this.range[h?\"animate\":\"css\"]({height:100-i+\"%\"},{queue:!1,duration:r.animate}))},_handleEvents:{keydown:function(i){var s,n,a,o,r=t(i.target).data(\"ui-slider-handle-index\");switch(i.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i.preventDefault(),!this._keySliding&&(this._keySliding=!0,t(i.target).addClass(\"ui-state-active\"),s=this._start(i,r),s===!1))return}switch(o=this.options.step,n=a=this.options.values&&this.options.values.length?this.values(r):this.value(),i.keyCode){case t.ui.keyCode.HOME:a=this._valueMin();break;case t.ui.keyCode.END:a=this._valueMax();break;case t.ui.keyCode.PAGE_UP:a=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.PAGE_DOWN:a=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(n===this._valueMax())return;a=this._trimAlignValue(n+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(n===this._valueMin())return;a=this._trimAlignValue(n-o)}this._slide(i,r,a)},click:function(t){t.preventDefault()},keyup:function(e){var i=t(e.target).data(\"ui-slider-handle-index\");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),t(e.target).removeClass(\"ui-state-active\"))}}})})(jQuery);(function(t){function e(t,e,i){return t>e&&e+i>t}function i(t){return/left|right/.test(t.css(\"float\"))||/inline|table-cell/.test(t.css(\"display\"))}t.widget(\"ui.sortable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var t=this.options;this.containerCache={},this.element.addClass(\"ui-sortable\"),this.refresh(),this.floating=this.items.length?\"x\"===t.axis||i(this.items[0].item):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass(\"ui-sortable ui-sortable-disabled\"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+\"-item\");return this},_setOption:function(e,i){\"disabled\"===e?(this.options[e]=i,this.widget().toggleClass(\"ui-sortable-disabled\",!!i)):t.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||\"static\"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+\"-item\")===o?(s=t(this),!1):undefined}),t.data(e.target,o.widgetName+\"-item\")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find(\"*\").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&\"auto\"!==a.cursor&&(o=this.document.find(\"body\"),this.storedCursor=o.css(\"cursor\"),o.css(\"cursor\",a.cursor),this.storedStylesheet=t(\"<style>*{ cursor: \"+a.cursor+\" !important; }</style>\").appendTo(o)),a.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",a.opacity)),a.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",a.zIndex)),this.scrollParent[0]!==document&&\"HTML\"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger(\"activate\",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass(\"ui-sortable-helper\"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&\"HTML\"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-t(document).scrollTop()<a.scrollSensitivity?r=t(document).scrollTop(t(document).scrollTop()-a.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<a.scrollSensitivity&&(r=t(document).scrollTop(t(document).scrollTop()+a.scrollSpeed)),e.pageX-t(document).scrollLeft()<a.scrollSensitivity?r=t(document).scrollLeft(t(document).scrollLeft()-a.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<a.scrollSensitivity&&(r=t(document).scrollLeft(t(document).scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo(\"absolute\"),this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?\"next\":\"prev\"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&(\"semi-dynamic\"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?\"down\":\"up\",\"pointer\"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger(\"change\",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger(\"sort\",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&\"x\"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft)),o&&\"y\"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),\"original\"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger(\"out\",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),\"original\"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||\"id\")||\"\").match(e.expression||/(.+)[\\-=_](.+)/);i&&s.push((e.key||i[1]+\"[]\")+\"=\"+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+\"=\"),s.join(\"&\")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||\"id\")||\"\")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u=\"x\"===this.options.axis||s+l>r&&h>s+l,d=\"y\"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return\"pointer\"===this.options.tolerance||this.options.forcePointerForContainers||\"pointer\"!==this.options.tolerance&&this.helperProportions[this.floating?\"width\":\"height\"]>t[this.floating?\"width\":\"height\"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var i=\"x\"===this.options.axis||e(this.positionAbs.top+this.offset.click.top,t.top,t.height),s=\"y\"===this.options.axis||e(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=i&&s,o=this._getDragVerticalDirection(),a=this._getDragHorizontalDirection();return n?this.floating?a&&\"right\"===a||\"down\"===o?2:1:o&&(\"down\"===o?2:1):!1},_intersectsWithSides:function(t){var i=e(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),s=e(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return this.floating&&o?\"right\"===o&&s||\"left\"===o&&!s:n&&(\"down\"===n&&i||\"up\"===n&&!i)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?\"right\":\"left\")},refresh:function(t){return this._refreshItems(t),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&&e)for(s=l.length-1;s>=0;s--)for(o=t(l[s]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),a]);for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]),s=h.length-1;s>=0;s--)h[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++)h=t(r[s]),h.data(this.widgetName+\"-item\",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t(\"<\"+s+\">\",e.document[0]).addClass(i||e.currentItem[0].className+\" ui-sortable-placeholder\").removeClass(\"ui-sortable-helper\");return\"tr\"===s?e.currentItem.children().each(function(){t(\"<td>&#160;</td>\",e.document[0]).attr(\"colspan\",t(this).attr(\"colspan\")||1).appendTo(n)}):\"img\"===s&&n.attr(\"src\",e.currentItem.attr(\"src\")),i||n.css(\"visibility\",\"hidden\"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css(\"paddingTop\")||0,10)-parseInt(e.currentItem.css(\"paddingBottom\")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css(\"paddingLeft\")||0,10)-parseInt(e.currentItem.css(\"paddingRight\")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_contactContainers:function(s){var n,o,a,r,h,l,c,u,d,p,f=null,g=null;for(n=this.containers.length-1;n>=0;n--)if(!t.contains(this.currentItem[0],this.containers[n].element[0]))if(this._intersectsWith(this.containers[n].containerCache)){if(f&&t.contains(this.containers[n].element[0],f.element[0]))continue;f=this.containers[n],g=n}else this.containers[n].containerCache.over&&(this.containers[n]._trigger(\"out\",s,this._uiHash(this)),this.containers[n].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[g].containerCache.over||(this.containers[g]._trigger(\"over\",s,this._uiHash(this)),this.containers[g].containerCache.over=1);else{for(a=1e4,r=null,p=f.floating||i(this.currentItem),h=p?\"left\":\"top\",l=p?\"width\":\"height\",c=this.positionAbs[h]+this.offset.click[h],o=this.items.length-1;o>=0;o--)t.contains(this.containers[g].element[0],this.items[o].item[0])&&this.items[o].item[0]!==this.currentItem[0]&&(!p||e(this.positionAbs.top+this.offset.click.top,this.items[o].top,this.items[o].height))&&(u=this.items[o].item.offset()[h],d=!1,Math.abs(u-c)>Math.abs(u+this.items[o][l]-c)&&(d=!0,u+=this.items[o][l]),a>Math.abs(u-c)&&(a=Math.abs(u-c),r=this.items[o],this.direction=d?\"up\":\"down\"));if(!r&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[g])return;r?this._rearrange(s,r,null,!0):this._rearrange(s,null,this.containers[g].element,!0),this._trigger(\"change\",s,this._uiHash()),this.containers[g]._trigger(\"change\",s,this._uiHash(this)),this.currentContainer=this.containers[g],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[g]._trigger(\"over\",s,this._uiHash(this)),this.containers[g].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):\"clone\"===i.helper?this.currentItem.clone():this.currentItem;return s.parents(\"body\").length||t(\"parent\"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),(\"document\"===n.containment||\"window\"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,t(\"document\"===n.containment?document:window).width()-this.helperProportions.width-this.margins.left,(t(\"document\"===n.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s=\"hidden\"!==t(e).css(\"overflow\"),this.containment=[i.left+(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)+(parseInt(t(e).css(\"paddingLeft\"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css(\"borderTopWidth\"),10)||0)+(parseInt(t(e).css(\"paddingTop\"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)-(parseInt(t(e).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css(\"borderTopWidth\"),10)||0)-(parseInt(t(e).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s=\"absolute\"===e?1:-1,n=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return\"relative\"!==this.cssPosition||this.scrollParent[0]!==document&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],\"down\"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)(\"auto\"===this._storedCSS[s]||\"static\"===this._storedCSS[s])&&(this._storedCSS[s]=\"\");this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger(\"receive\",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(\".ui-sortable-helper\")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger(\"update\",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger(\"remove\",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger(\"receive\",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger(\"update\",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i(\"deactivate\",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i(\"out\",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find(\"body\").css(\"cursor\",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",\"auto\"===this._storedZIndex?\"\":this._storedZIndex),this.dragging=!1,this.cancelHelperRemoval){if(!e){for(this._trigger(\"beforeStop\",t,this._uiHash()),s=0;n.length>s;s++)n[s].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!1}if(e||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null,!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})})(jQuery);(function(t){function e(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger(\"change\")}}t.widget(\"ui.spinner\",{version:\"1.10.4\",defaultElement:\"<input>\",widgetEventPrefix:\"spin\",options:{culture:null,icons:{down:\"ui-icon-triangle-1-s\",up:\"ui-icon-triangle-1-n\"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption(\"max\",this.options.max),this._setOption(\"min\",this.options.min),this._setOption(\"step\",this.options.step),\"\"!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_getCreateOptions:function(){var e={},i=this.element;return t.each([\"min\",\"max\",\"step\"],function(t,s){var n=i.attr(s);void 0!==n&&n.length&&(e[s]=n)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:\"_stop\",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger(\"change\",t),void 0)},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},\"mousedown .ui-spinner-button\":function(e){function i(){var t=this.element[0]===this.document[0].activeElement;t||(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s}))}var s;s=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e)},\"mouseup .ui-spinner-button\":\"_stop\",\"mouseenter .ui-spinner-button\":function(e){return t(e.currentTarget).hasClass(\"ui-state-active\")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e),void 0):void 0},\"mouseleave .ui-spinner-button\":\"_stop\"},_draw:function(){var t=this.uiSpinner=this.element.addClass(\"ui-spinner-input\").attr(\"autocomplete\",\"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr(\"role\",\"spinbutton\"),this.buttons=t.find(\".ui-spinner-button\").attr(\"tabIndex\",-1).button().removeClass(\"ui-corner-all\"),this.buttons.height()>Math.ceil(.5*t.height())&&t.height()>0&&t.height(t.height()),this.options.disabled&&this.disable()},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_uiSpinnerHtml:function(){return\"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>\"},_buttonHtml:function(){return\"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon \"+this.options.icons.up+\"'>&#9650;</span>\"+\"</a>\"+\"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>\"+\"<span class='ui-icon \"+this.options.icons.down+\"'>&#9660;</span>\"+\"</a>\"},_start:function(t){return this.spinning||this._trigger(\"start\",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger(\"spin\",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=\"\"+t,i=e.indexOf(\".\");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&s.min>t?s.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger(\"stop\",t))},_setOption:function(t,e){if(\"culture\"===t||\"numberFormat\"===t){var i=this._parse(this.element.val());return this.options[t]=e,this.element.val(this._format(i)),void 0}(\"max\"===t||\"min\"===t||\"step\"===t)&&\"string\"==typeof e&&(e=this._parse(e)),\"icons\"===t&&(this.buttons.first().find(\".ui-icon\").removeClass(this.options.icons.up).addClass(e.up),this.buttons.last().find(\".ui-icon\").removeClass(this.options.icons.down).addClass(e.down)),this._super(t,e),\"disabled\"===t&&(e?(this.element.prop(\"disabled\",!0),this.buttons.button(\"disable\")):(this.element.prop(\"disabled\",!1),this.buttons.button(\"enable\")))},_setOptions:e(function(t){this._super(t),this._value(this.element.val())}),_parse:function(t){return\"string\"==typeof t&&\"\"!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),\"\"===t||isNaN(t)?null:t},_format:function(t){return\"\"===t?\"\":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({\"aria-valuemin\":this.options.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._parse(this.element.val())})},_value:function(t,e){var i;\"\"!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.removeClass(\"ui-spinner-input\").prop(\"disabled\",!1).removeAttr(\"autocomplete\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.uiSpinner.replaceWith(this.element)},stepUp:e(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:e(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:e(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:e(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?(e(this._value).call(this,t),void 0):this._parse(this.element.val())},widget:function(){return this.uiSpinner}})})(jQuery);(function(t,e){function i(){return++n}function s(t){return t=t.cloneNode(!1),t.hash.length>1&&decodeURIComponent(t.href.replace(a,\"\"))===decodeURIComponent(location.href.replace(a,\"\"))}var n=0,a=/#.*$/;t.widget(\"ui.tabs\",{version:\"1.10.4\",delay:300,options:{active:null,collapsible:!1,event:\"click\",heightStyle:\"content\",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var e=this,i=this.options;this.running=!1,this.element.addClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-tabs-collapsible\",i.collapsible).delegate(\".ui-tabs-nav > li\",\"mousedown\"+this.eventNamespace,function(e){t(this).is(\".ui-state-disabled\")&&e.preventDefault()}).delegate(\".ui-tabs-anchor\",\"focus\"+this.eventNamespace,function(){t(this).closest(\"li\").is(\".ui-state-disabled\")&&this.blur()}),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(\".ui-state-disabled\"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var i=this.options.active,s=this.options.collapsible,n=location.hash.substring(1);return null===i&&(n&&this.tabs.each(function(s,a){return t(a).attr(\"aria-controls\")===n?(i=s,!1):e}),null===i&&(i=this.tabs.index(this.tabs.filter(\".ui-tabs-active\"))),(null===i||-1===i)&&(i=this.tabs.length?0:!1)),i!==!1&&(i=this.tabs.index(this.tabs.eq(i)),-1===i&&(i=s?!1:0)),!s&&i===!1&&this.anchors.length&&(i=0),i},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(i){var s=t(this.document[0].activeElement).closest(\"li\"),n=this.tabs.index(s),a=!0;if(!this._handlePageNav(i)){switch(i.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:n++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:a=!1,n--;break;case t.ui.keyCode.END:n=this.anchors.length-1;break;case t.ui.keyCode.HOME:n=0;break;case t.ui.keyCode.SPACE:return i.preventDefault(),clearTimeout(this.activating),this._activate(n),e;case t.ui.keyCode.ENTER:return i.preventDefault(),clearTimeout(this.activating),this._activate(n===this.options.active?!1:n),e;default:return}i.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,a),i.ctrlKey||(s.attr(\"aria-selected\",\"false\"),this.tabs.eq(n).attr(\"aria-selected\",\"true\"),this.activating=this._delay(function(){this.option(\"active\",n)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.focus())},_handlePageNav:function(i){return i.altKey&&i.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):i.altKey&&i.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):e},_findNextTab:function(e,i){function s(){return e>n&&(e=0),0>e&&(e=n),e}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).focus(),t},_setOption:function(t,i){return\"active\"===t?(this._activate(i),e):\"disabled\"===t?(this._setupDisabled(i),e):(this._super(t,i),\"collapsible\"===t&&(this.element.toggleClass(\"ui-tabs-collapsible\",i),i||this.options.active!==!1||this._activate(0)),\"event\"===t&&this._setupEvents(i),\"heightStyle\"===t&&this._setupHeightStyle(i),e)},_tabId:function(t){return t.attr(\"aria-controls\")||\"ui-tabs-\"+i()},_sanitizeSelector:function(t){return t?t.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g,\"\\\\$&\"):\"\"},refresh:function(){var e=this.options,i=this.tablist.children(\":has(a[href])\");e.disabled=t.map(i.filter(\".ui-state-disabled\"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),this.active.length?(this.active.addClass(\"ui-tabs-active ui-state-active\").attr({\"aria-selected\":\"true\",tabIndex:0}),this._getPanelForTab(this.active).show().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"})):this.tabs.eq(0).attr(\"tabIndex\",0)},_processTabs:function(){var e=this;this.tablist=this._getList().addClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").attr(\"role\",\"tablist\"),this.tabs=this.tablist.find(\"> li:has(a[href])\").addClass(\"ui-state-default ui-corner-top\").attr({role:\"tab\",tabIndex:-1}),this.anchors=this.tabs.map(function(){return t(\"a\",this)[0]}).addClass(\"ui-tabs-anchor\").attr({role:\"presentation\",tabIndex:-1}),this.panels=t(),this.anchors.each(function(i,n){var a,o,r,h=t(n).uniqueId().attr(\"id\"),l=t(n).closest(\"li\"),c=l.attr(\"aria-controls\");s(n)?(a=n.hash,o=e.element.find(e._sanitizeSelector(a))):(r=e._tabId(l),a=\"#\"+r,o=e.element.find(a),o.length||(o=e._createPanel(r),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr(\"aria-live\",\"polite\")),o.length&&(e.panels=e.panels.add(o)),c&&l.data(\"ui-tabs-aria-controls\",c),l.attr({\"aria-controls\":a.substring(1),\"aria-labelledby\":h}),o.attr(\"aria-labelledby\",h)}),this.panels.addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").attr(\"role\",\"tabpanel\")},_getList:function(){return this.tablist||this.element.find(\"ol,ul\").eq(0)},_createPanel:function(e){return t(\"<div>\").attr(\"id\",e).addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").data(\"ui-tabs-destroy\",!0)},_setupDisabled:function(e){t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1);for(var i,s=0;i=this.tabs[s];s++)e===!0||-1!==t.inArray(s,e)?t(i).addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"):t(i).removeClass(\"ui-state-disabled\").removeAttr(\"aria-disabled\");this.options.disabled=e},_setupEvents:function(e){var i={click:function(t){t.preventDefault()}};e&&t.each(e.split(\" \"),function(t,e){i[e]=\"_eventHandler\"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,i),this._on(this.tabs,{keydown:\"_tabKeydown\"}),this._on(this.panels,{keydown:\"_panelKeydown\"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();\"fill\"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(\":visible\").each(function(){var e=t(this),s=e.css(\"position\");\"absolute\"!==s&&\"fixed\"!==s&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height(\"\").height())}).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),a=n.closest(\"li\"),o=a[0]===s[0],r=o&&i.collapsible,h=r?t():this._getPanelForTab(a),l=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:l,newTab:r?t():a,newPanel:h};e.preventDefault(),a.hasClass(\"ui-state-disabled\")||a.hasClass(\"ui-tabs-loading\")||this.running||o&&!i.collapsible||this._trigger(\"beforeActivate\",e,c)===!1||(i.active=r?!1:this.tabs.index(a),this.active=o?t():a,this.xhr&&this.xhr.abort(),l.length||h.length||t.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"),h.length&&this.load(this.tabs.index(a),e),this._toggle(e,c))},_toggle:function(e,i){function s(){a.running=!1,a._trigger(\"activate\",e,i)}function n(){i.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\"),o.length&&a.options.show?a._show(o,a.options.show,s):(o.show(),s())}var a=this,o=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){i.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),n()}):(i.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),r.hide(),n()),r.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),i.oldTab.attr(\"aria-selected\",\"false\"),o.length&&r.length?i.oldTab.attr(\"tabIndex\",-1):o.length&&this.tabs.filter(function(){return 0===t(this).attr(\"tabIndex\")}).attr(\"tabIndex\",-1),o.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}),i.newTab.attr({\"aria-selected\":\"true\",tabIndex:0})},_activate:function(e){var i,s=this._findActive(e);s[0]!==this.active[0]&&(s.length||(s=this.active),i=s.find(\".ui-tabs-anchor\")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(t){return\"string\"==typeof t&&(t=this.anchors.index(this.anchors.filter(\"[href$='\"+t+\"']\"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\"),this.tablist.removeClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").removeAttr(\"role\"),this.anchors.removeClass(\"ui-tabs-anchor\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,\"ui-tabs-destroy\")?t(this).remove():t(this).removeClass(\"ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\").removeAttr(\"tabIndex\").removeAttr(\"aria-live\").removeAttr(\"aria-busy\").removeAttr(\"aria-selected\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-hidden\").removeAttr(\"aria-expanded\").removeAttr(\"role\")}),this.tabs.each(function(){var e=t(this),i=e.data(\"ui-tabs-aria-controls\");i?e.attr(\"aria-controls\",i).removeData(\"ui-tabs-aria-controls\"):e.removeAttr(\"aria-controls\")}),this.panels.show(),\"content\"!==this.options.heightStyle&&this.panels.css(\"height\",\"\")},enable:function(i){var s=this.options.disabled;s!==!1&&(i===e?s=!1:(i=this._getIndex(i),s=t.isArray(s)?t.map(s,function(t){return t!==i?t:null}):t.map(this.tabs,function(t,e){return e!==i?e:null})),this._setupDisabled(s))},disable:function(i){var s=this.options.disabled;if(s!==!0){if(i===e)s=!0;else{if(i=this._getIndex(i),-1!==t.inArray(i,s))return;s=t.isArray(s)?t.merge([i],s).sort():[i]}this._setupDisabled(s)}},load:function(e,i){e=this._getIndex(e);var n=this,a=this.tabs.eq(e),o=a.find(\".ui-tabs-anchor\"),r=this._getPanelForTab(a),h={tab:a,panel:r};s(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,h)),this.xhr&&\"canceled\"!==this.xhr.statusText&&(a.addClass(\"ui-tabs-loading\"),r.attr(\"aria-busy\",\"true\"),this.xhr.success(function(t){setTimeout(function(){r.html(t),n._trigger(\"load\",i,h)},1)}).complete(function(t,e){setTimeout(function(){\"abort\"===e&&n.panels.stop(!1,!0),a.removeClass(\"ui-tabs-loading\"),r.removeAttr(\"aria-busy\"),t===n.xhr&&delete n.xhr},1)})))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr(\"href\"),beforeSend:function(e,a){return n._trigger(\"beforeLoad\",i,t.extend({jqXHR:e,ajaxSettings:a},s))}}},_getPanelForTab:function(e){var i=t(e).attr(\"aria-controls\");return this.element.find(this._sanitizeSelector(\"#\"+i))}})})(jQuery);(function(t){function e(e,i){var s=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/);s.push(i),e.data(\"ui-tooltip-id\",i).attr(\"aria-describedby\",t.trim(s.join(\" \")))}function i(e){var i=e.data(\"ui-tooltip-id\"),s=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/),n=t.inArray(i,s);-1!==n&&s.splice(n,1),e.removeData(\"ui-tooltip-id\"),s=t.trim(s.join(\" \")),s?e.attr(\"aria-describedby\",s):e.removeAttr(\"aria-describedby\")}var s=0;t.widget(\"ui.tooltip\",{version:\"1.10.4\",options:{content:function(){var e=t(this).attr(\"title\")||\"\";return t(\"<a>\").text(e).html()},hide:!0,items:\"[title]:not([disabled])\",position:{my:\"left top+15\",at:\"left bottom\",collision:\"flipfit flip\"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:\"open\",focusin:\"open\"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable()},_setOption:function(e,i){var s=this;return\"disabled\"===e?(this[i?\"_disable\":\"_enable\"](),this.options[e]=i,void 0):(this._super(e,i),\"content\"===e&&t.each(this.tooltips,function(t,e){s._updateContent(e)}),void 0)},_disable:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event(\"blur\");n.target=n.currentTarget=s[0],e.close(n,!0)}),this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.is(\"[title]\")&&e.data(\"ui-tooltip-title\",e.attr(\"title\")).attr(\"title\",\"\")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.data(\"ui-tooltip-title\")&&e.attr(\"title\",e.data(\"ui-tooltip-title\"))})},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data(\"ui-tooltip-id\")&&(s.attr(\"title\")&&s.data(\"ui-tooltip-title\",s.attr(\"title\")),s.data(\"ui-tooltip-open\",!0),e&&\"mouseover\"===e.type&&s.parents().each(function(){var e,s=t(this);s.data(\"ui-tooltip-open\")&&(e=t.Event(\"blur\"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr(\"title\")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr(\"title\")},s.attr(\"title\",\"\"))}),this._updateContent(s,e))},_updateContent:function(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return\"string\"==typeof s?this._open(e,t,s):(i=s.call(t[0],function(i){t.data(\"ui-tooltip-open\")&&n._delay(function(){e&&(e.type=o),this._open(e,t,i)})}),i&&this._open(e,t,i),void 0)},_open:function(i,s,n){function o(t){l.of=t,a.is(\":hidden\")||a.position(l)}var a,r,h,l=t.extend({},this.options.position);if(n){if(a=this._find(s),a.length)return a.find(\".ui-tooltip-content\").html(n),void 0;s.is(\"[title]\")&&(i&&\"mouseover\"===i.type?s.attr(\"title\",\"\"):s.removeAttr(\"title\")),a=this._tooltip(s),e(s,a.attr(\"id\")),a.find(\".ui-tooltip-content\").html(n),this.options.track&&i&&/^mouse/.test(i.type)?(this._on(this.document,{mousemove:o}),o(i)):a.position(t.extend({of:s},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.show&&this.options.show.delay&&(h=this.delayedShow=setInterval(function(){a.is(\":visible\")&&(o(l.of),clearInterval(h))},t.fx.interval)),this._trigger(\"open\",i,{tooltip:a}),r={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var i=t.Event(e);i.currentTarget=s[0],this.close(i,!0)}},remove:function(){this._removeTooltip(a)}},i&&\"mouseover\"!==i.type||(r.mouseleave=\"close\"),i&&\"focusin\"!==i.type||(r.focusout=\"close\"),this._on(!0,s,r)}},close:function(e){var s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);this.closing||(clearInterval(this.delayedShow),n.data(\"ui-tooltip-title\")&&n.attr(\"title\",n.data(\"ui-tooltip-title\")),i(n),o.stop(!0),this._hide(o,this.options.hide,function(){s._removeTooltip(t(this))}),n.removeData(\"ui-tooltip-open\"),this._off(n,\"mouseleave focusout keyup\"),n[0]!==this.element[0]&&this._off(n,\"remove\"),this._off(this.document,\"mousemove\"),e&&\"mouseleave\"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr(\"title\",i.title),delete s.parents[e]}),this.closing=!0,this._trigger(\"close\",e,{tooltip:o}),this.closing=!1)},_tooltip:function(e){var i=\"ui-tooltip-\"+s++,n=t(\"<div>\").attr({id:i,role:\"tooltip\"}).addClass(\"ui-tooltip ui-widget ui-corner-all ui-widget-content \"+(this.options.tooltipClass||\"\"));return t(\"<div>\").addClass(\"ui-tooltip-content\").appendTo(n),n.appendTo(this.document[0].body),this.tooltips[i]=e,n},_find:function(e){var i=e.data(\"ui-tooltip-id\");return i?t(\"#\"+i):t()},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr(\"id\")]},_destroy:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event(\"blur\");n.target=n.currentTarget=s[0],e.close(n,!0),t(\"#\"+i).remove(),s.data(\"ui-tooltip-title\")&&(s.attr(\"title\",s.data(\"ui-tooltip-title\")),s.removeData(\"ui-tooltip-title\"))})}})})(jQuery);\n\n  }).apply(root, arguments);\n});\n}(this));\n\n","(function(root) {\ndefine(\"lib.jquery-ui.timepicker\", [\"lib.jquery-ui\"], function() {\n  return (function() {\n/*! jQuery Timepicker Addon - v1.4.3 - 2013-11-30\r\n* http://trentrichardson.com/examples/timepicker\r\n* Copyright (c) 2013 Trent Richardson; Licensed MIT */\r\n(function ($) {\r\n\r\n\t/*\r\n\t* Lets not redefine timepicker, Prevent \"Uncaught RangeError: Maximum call stack size exceeded\"\r\n\t*/\r\n\t$.ui.timepicker = $.ui.timepicker || {};\r\n\tif ($.ui.timepicker.version) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/*\r\n\t* Extend jQueryUI, get it started with our version number\r\n\t*/\r\n\t$.extend($.ui, {\r\n\t\ttimepicker: {\r\n\t\t\tversion: \"1.4.3\"\r\n\t\t}\r\n\t});\r\n\r\n\t/* \r\n\t* Timepicker manager.\r\n\t* Use the singleton instance of this class, $.timepicker, to interact with the time picker.\r\n\t* Settings for (groups of) time pickers are maintained in an instance object,\r\n\t* allowing multiple different settings on the same page.\r\n\t*/\r\n\tvar Timepicker = function () {\r\n\t\tthis.regional = []; // Available regional settings, indexed by language code\r\n\t\tthis.regional[''] = { // Default regional settings\r\n\t\t\tcurrentText: 'Now',\r\n\t\t\tcloseText: 'Done',\r\n\t\t\tamNames: ['AM', 'A'],\r\n\t\t\tpmNames: ['PM', 'P'],\r\n\t\t\ttimeFormat: 'HH:mm',\r\n\t\t\ttimeSuffix: '',\r\n\t\t\ttimeOnlyTitle: 'Choose Time',\r\n\t\t\ttimeText: 'Time',\r\n\t\t\thourText: 'Hour',\r\n\t\t\tminuteText: 'Minute',\r\n\t\t\tsecondText: 'Second',\r\n\t\t\tmillisecText: 'Millisecond',\r\n\t\t\tmicrosecText: 'Microsecond',\r\n\t\t\ttimezoneText: 'Time Zone',\r\n\t\t\tisRTL: false\r\n\t\t};\r\n\t\tthis._defaults = { // Global defaults for all the datetime picker instances\r\n\t\t\tshowButtonPanel: true,\r\n\t\t\ttimeOnly: false,\r\n\t\t\tshowHour: null,\r\n\t\t\tshowMinute: null,\r\n\t\t\tshowSecond: null,\r\n\t\t\tshowMillisec: null,\r\n\t\t\tshowMicrosec: null,\r\n\t\t\tshowTimezone: null,\r\n\t\t\tshowTime: true,\r\n\t\t\tstepHour: 1,\r\n\t\t\tstepMinute: 1,\r\n\t\t\tstepSecond: 1,\r\n\t\t\tstepMillisec: 1,\r\n\t\t\tstepMicrosec: 1,\r\n\t\t\thour: 0,\r\n\t\t\tminute: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tmillisec: 0,\r\n\t\t\tmicrosec: 0,\r\n\t\t\ttimezone: null,\r\n\t\t\thourMin: 0,\r\n\t\t\tminuteMin: 0,\r\n\t\t\tsecondMin: 0,\r\n\t\t\tmillisecMin: 0,\r\n\t\t\tmicrosecMin: 0,\r\n\t\t\thourMax: 23,\r\n\t\t\tminuteMax: 59,\r\n\t\t\tsecondMax: 59,\r\n\t\t\tmillisecMax: 999,\r\n\t\t\tmicrosecMax: 999,\r\n\t\t\tminDateTime: null,\r\n\t\t\tmaxDateTime: null,\r\n\t\t\tonSelect: null,\r\n\t\t\thourGrid: 0,\r\n\t\t\tminuteGrid: 0,\r\n\t\t\tsecondGrid: 0,\r\n\t\t\tmillisecGrid: 0,\r\n\t\t\tmicrosecGrid: 0,\r\n\t\t\talwaysSetTime: true,\r\n\t\t\tseparator: ' ',\r\n\t\t\taltFieldTimeOnly: true,\r\n\t\t\taltTimeFormat: null,\r\n\t\t\taltSeparator: null,\r\n\t\t\taltTimeSuffix: null,\r\n\t\t\tpickerTimeFormat: null,\r\n\t\t\tpickerTimeSuffix: null,\r\n\t\t\tshowTimepicker: true,\r\n\t\t\ttimezoneList: null,\r\n\t\t\taddSliderAccess: false,\r\n\t\t\tsliderAccessArgs: null,\r\n\t\t\tcontrolType: 'slider',\r\n\t\t\tdefaultValue: null,\r\n\t\t\tparse: 'strict'\r\n\t\t};\r\n\t\t$.extend(this._defaults, this.regional['']);\r\n\t};\r\n\r\n\t$.extend(Timepicker.prototype, {\r\n\t\t$input: null,\r\n\t\t$altInput: null,\r\n\t\t$timeObj: null,\r\n\t\tinst: null,\r\n\t\thour_slider: null,\r\n\t\tminute_slider: null,\r\n\t\tsecond_slider: null,\r\n\t\tmillisec_slider: null,\r\n\t\tmicrosec_slider: null,\r\n\t\ttimezone_select: null,\r\n\t\thour: 0,\r\n\t\tminute: 0,\r\n\t\tsecond: 0,\r\n\t\tmillisec: 0,\r\n\t\tmicrosec: 0,\r\n\t\ttimezone: null,\r\n\t\thourMinOriginal: null,\r\n\t\tminuteMinOriginal: null,\r\n\t\tsecondMinOriginal: null,\r\n\t\tmillisecMinOriginal: null,\r\n\t\tmicrosecMinOriginal: null,\r\n\t\thourMaxOriginal: null,\r\n\t\tminuteMaxOriginal: null,\r\n\t\tsecondMaxOriginal: null,\r\n\t\tmillisecMaxOriginal: null,\r\n\t\tmicrosecMaxOriginal: null,\r\n\t\tampm: '',\r\n\t\tformattedDate: '',\r\n\t\tformattedTime: '',\r\n\t\tformattedDateTime: '',\r\n\t\ttimezoneList: null,\r\n\t\tunits: ['hour', 'minute', 'second', 'millisec', 'microsec'],\r\n\t\tsupport: {},\r\n\t\tcontrol: null,\r\n\r\n\t\t/* \r\n\t\t* Override the default settings for all instances of the time picker.\r\n\t\t* @param  {Object} settings  object - the new settings to use as defaults (anonymous object)\r\n\t\t* @return {Object} the manager object\r\n\t\t*/\r\n\t\tsetDefaults: function (settings) {\r\n\t\t\textendRemove(this._defaults, settings || {});\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* Create a new Timepicker instance\r\n\t\t*/\r\n\t\t_newInst: function ($input, opts) {\r\n\t\t\tvar tp_inst = new Timepicker(),\r\n\t\t\t\tinlineSettings = {},\r\n\t\t\t\tfns = {},\r\n\t\t\t\toverrides, i;\r\n\r\n\t\t\tfor (var attrName in this._defaults) {\r\n\t\t\t\tif (this._defaults.hasOwnProperty(attrName)) {\r\n\t\t\t\t\tvar attrValue = $input.attr('time:' + attrName);\r\n\t\t\t\t\tif (attrValue) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tinlineSettings[attrName] = eval(attrValue);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tinlineSettings[attrName] = attrValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toverrides = {\r\n\t\t\t\tbeforeShow: function (input, dp_inst) {\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {\r\n\t\t\t\t\t\treturn tp_inst._defaults.evnts.beforeShow.call($input[0], input, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonChangeMonthYear: function (year, month, dp_inst) {\r\n\t\t\t\t\t// Update the time as well : this prevents the time from disappearing from the $input field.\r\n\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)) {\r\n\t\t\t\t\t\ttp_inst._defaults.evnts.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonClose: function (dateText, dp_inst) {\r\n\t\t\t\t\tif (tp_inst.timeDefined === true && $input.val() !== '') {\r\n\t\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onClose)) {\r\n\t\t\t\t\t\ttp_inst._defaults.evnts.onClose.call($input[0], dateText, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfor (i in overrides) {\r\n\t\t\t\tif (overrides.hasOwnProperty(i)) {\r\n\t\t\t\t\tfns[i] = opts[i] || null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {\r\n\t\t\t\tevnts: fns,\r\n\t\t\t\ttimepicker: tp_inst // add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\r\n\t\t\t});\r\n\t\t\ttp_inst.amNames = $.map(tp_inst._defaults.amNames, function (val) {\r\n\t\t\t\treturn val.toUpperCase();\r\n\t\t\t});\r\n\t\t\ttp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (val) {\r\n\t\t\t\treturn val.toUpperCase();\r\n\t\t\t});\r\n\r\n\t\t\t// detect which units are supported\r\n\t\t\ttp_inst.support = detectSupport(\r\n\t\t\t\t\ttp_inst._defaults.timeFormat + \r\n\t\t\t\t\t(tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : '') +\r\n\t\t\t\t\t(tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : ''));\r\n\r\n\t\t\t// controlType is string - key to our this._controls\r\n\t\t\tif (typeof(tp_inst._defaults.controlType) === 'string') {\r\n\t\t\t\tif (tp_inst._defaults.controlType === 'slider' && typeof($.ui.slider) === 'undefined') {\r\n\t\t\t\t\ttp_inst._defaults.controlType = 'select';\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst.control = tp_inst._controls[tp_inst._defaults.controlType];\r\n\t\t\t}\r\n\t\t\t// controlType is an object and must implement create, options, value methods\r\n\t\t\telse {\r\n\t\t\t\ttp_inst.control = tp_inst._defaults.controlType;\r\n\t\t\t}\r\n\r\n\t\t\t// prep the timezone options\r\n\t\t\tvar timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60,\r\n\t\t\t\t\t0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];\r\n\t\t\tif (tp_inst._defaults.timezoneList !== null) {\r\n\t\t\t\ttimezoneList = tp_inst._defaults.timezoneList;\r\n\t\t\t}\r\n\t\t\tvar tzl = timezoneList.length, tzi = 0, tzv = null;\r\n\t\t\tif (tzl > 0 && typeof timezoneList[0] !== 'object') {\r\n\t\t\t\tfor (; tzi < tzl; tzi++) {\r\n\t\t\t\t\ttzv = timezoneList[tzi];\r\n\t\t\t\t\ttimezoneList[tzi] = { value: tzv, label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601) };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttp_inst._defaults.timezoneList = timezoneList;\r\n\r\n\t\t\t// set the default units\r\n\t\t\ttp_inst.timezone = tp_inst._defaults.timezone !== null ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) :\r\n\t\t\t\t\t\t\t((new Date()).getTimezoneOffset() * -1);\r\n\t\t\ttp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin :\r\n\t\t\t\t\t\t\ttp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour;\r\n\t\t\ttp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin :\r\n\t\t\t\t\t\t\ttp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute;\r\n\t\t\ttp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin :\r\n\t\t\t\t\t\t\ttp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second;\r\n\t\t\ttp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin :\r\n\t\t\t\t\t\t\ttp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec;\r\n\t\t\ttp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin :\r\n\t\t\t\t\t\t\ttp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec;\r\n\t\t\ttp_inst.ampm = '';\r\n\t\t\ttp_inst.$input = $input;\r\n\r\n\t\t\tif (tp_inst._defaults.altField) {\r\n\t\t\t\ttp_inst.$altInput = $(tp_inst._defaults.altField).css({\r\n\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t}).focus(function () {\r\n\t\t\t\t\t$input.trigger(\"focus\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (tp_inst._defaults.minDate === 0 || tp_inst._defaults.minDateTime === 0) {\r\n\t\t\t\ttp_inst._defaults.minDate = new Date();\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDate === 0 || tp_inst._defaults.maxDateTime === 0) {\r\n\t\t\t\ttp_inst._defaults.maxDate = new Date();\r\n\t\t\t}\r\n\r\n\t\t\t// datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\r\n\t\t\tif (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\r\n\t\t\t}\r\n\t\t\ttp_inst.$input.bind('focus', function () {\r\n\t\t\t\ttp_inst._onFocus();\r\n\t\t\t});\r\n\r\n\t\t\treturn tp_inst;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* add our sliders to the calendar\r\n\t\t*/\r\n\t\t_addTimePicker: function (dp_inst) {\r\n\t\t\tvar currDT = (this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + ' ' + this.$altInput.val() : this.$input.val();\r\n\r\n\t\t\tthis.timeDefined = this._parseTime(currDT);\r\n\t\t\tthis._limitMinMaxDateTime(dp_inst, false);\r\n\t\t\tthis._injectTimePicker();\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* parse the time string from input value or _setTime\r\n\t\t*/\r\n\t\t_parseTime: function (timeString, withDate) {\r\n\t\t\tif (!this.inst) {\r\n\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\r\n\t\t\t}\r\n\r\n\t\t\tif (withDate || !this._defaults.timeOnly) {\r\n\t\t\t\tvar dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar parseRes = parseDateTimeInternal(dp_dateFormat, this._defaults.timeFormat, timeString, $.datepicker._getFormatConfig(this.inst), this._defaults);\r\n\t\t\t\t\tif (!parseRes.timeObj) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.extend(this, parseRes.timeObj);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t$.timepicker.log(\"Error parsing the date/time string: \" + err +\r\n\t\t\t\t\t\t\t\t\t\"\\ndate/time string = \" + timeString +\r\n\t\t\t\t\t\t\t\t\t\"\\ntimeFormat = \" + this._defaults.timeFormat +\r\n\t\t\t\t\t\t\t\t\t\"\\ndateFormat = \" + dp_dateFormat);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tvar timeObj = $.datepicker.parseTime(this._defaults.timeFormat, timeString, this._defaults);\r\n\t\t\t\tif (!timeObj) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t$.extend(this, timeObj);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* generate and inject html for timepicker into ui datepicker\r\n\t\t*/\r\n\t\t_injectTimePicker: function () {\r\n\t\t\tvar $dp = this.inst.dpDiv,\r\n\t\t\t\to = this.inst.settings,\r\n\t\t\t\ttp_inst = this,\r\n\t\t\t\tlitem = '',\r\n\t\t\t\tuitem = '',\r\n\t\t\t\tshow = null,\r\n\t\t\t\tmax = {},\r\n\t\t\t\tgridSize = {},\r\n\t\t\t\tsize = null,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = 0;\r\n\r\n\t\t\t// Prevent displaying twice\r\n\t\t\tif ($dp.find(\"div.ui-timepicker-div\").length === 0 && o.showTimepicker) {\r\n\t\t\t\tvar noDisplay = ' style=\"display:none;\"',\r\n\t\t\t\t\thtml = '<div class=\"ui-timepicker-div' + (o.isRTL ? ' ui-timepicker-rtl' : '') + '\"><dl>' + '<dt class=\"ui_tpicker_time_label\"' + ((o.showTime) ? '' : noDisplay) + '>' + o.timeText + '</dt>' +\r\n\t\t\t\t\t\t\t\t'<dd class=\"ui_tpicker_time\"' + ((o.showTime) ? '' : noDisplay) + '></dd>';\r\n\r\n\t\t\t\t// Create the markup\r\n\t\t\t\tfor (i = 0, l = this.units.length; i < l; i++) {\r\n\t\t\t\t\tlitem = this.units[i];\r\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\r\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\r\n\r\n\t\t\t\t\t// Added by Peter Medeiros:\r\n\t\t\t\t\t// - Figure out what the hour/minute/second max should be based on the step values.\r\n\t\t\t\t\t// - Example: if stepMinute is 15, then minMax is 45.\r\n\t\t\t\t\tmax[litem] = parseInt((o[litem + 'Max'] - ((o[litem + 'Max'] - o[litem + 'Min']) % o['step' + uitem])), 10);\r\n\t\t\t\t\tgridSize[litem] = 0;\r\n\r\n\t\t\t\t\thtml += '<dt class=\"ui_tpicker_' + litem + '_label\"' + (show ? '' : noDisplay) + '>' + o[litem + 'Text'] + '</dt>' +\r\n\t\t\t\t\t\t\t\t'<dd class=\"ui_tpicker_' + litem + '\"><div class=\"ui_tpicker_' + litem + '_slider\"' + (show ? '' : noDisplay) + '></div>';\r\n\r\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\r\n\t\t\t\t\t\thtml += '<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\r\n\r\n\t\t\t\t\t\tif (litem === 'hour') {\r\n\t\t\t\t\t\t\tfor (var h = o[litem + 'Min']; h <= max[litem]; h += parseInt(o[litem + 'Grid'], 10)) {\r\n\t\t\t\t\t\t\t\tgridSize[litem]++;\r\n\t\t\t\t\t\t\t\tvar tmph = $.datepicker.formatTime(this.support.ampm ? 'hht' : 'HH', {hour: h}, o);\r\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + tmph + '</td>';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tfor (var m = o[litem + 'Min']; m <= max[litem]; m += parseInt(o[litem + 'Grid'], 10)) {\r\n\t\t\t\t\t\t\t\tgridSize[litem]++;\r\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + ((m < 10) ? '0' : '') + m + '</td>';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thtml += '</tr></table></div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\thtml += '</dd>';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Timezone\r\n\t\t\t\tvar showTz = o.showTimezone !== null ? o.showTimezone : this.support.timezone;\r\n\t\t\t\thtml += '<dt class=\"ui_tpicker_timezone_label\"' + (showTz ? '' : noDisplay) + '>' + o.timezoneText + '</dt>';\r\n\t\t\t\thtml += '<dd class=\"ui_tpicker_timezone\" ' + (showTz ? '' : noDisplay) + '></dd>';\r\n\r\n\t\t\t\t// Create the elements from string\r\n\t\t\t\thtml += '</dl></div>';\r\n\t\t\t\tvar $tp = $(html);\r\n\r\n\t\t\t\t// if we only want time picker...\r\n\t\t\t\tif (o.timeOnly === true) {\r\n\t\t\t\t\t$tp.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' + '<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '</div>' + '</div>');\r\n\t\t\t\t\t$dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// add sliders, adjust grids, add events\r\n\t\t\t\tfor (i = 0, l = tp_inst.units.length; i < l; i++) {\r\n\t\t\t\t\tlitem = tp_inst.units[i];\r\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\r\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\r\n\r\n\t\t\t\t\t// add the slider\r\n\t\t\t\t\ttp_inst[litem + '_slider'] = tp_inst.control.create(tp_inst, $tp.find('.ui_tpicker_' + litem + '_slider'), litem, tp_inst[litem], o[litem + 'Min'], max[litem], o['step' + uitem]);\r\n\r\n\t\t\t\t\t// adjust the grid and add click event\r\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\r\n\t\t\t\t\t\tsize = 100 * gridSize[litem] * o[litem + 'Grid'] / (max[litem] - o[litem + 'Min']);\r\n\t\t\t\t\t\t$tp.find('.ui_tpicker_' + litem + ' table').css({\r\n\t\t\t\t\t\t\twidth: size + \"%\",\r\n\t\t\t\t\t\t\tmarginLeft: o.isRTL ? '0' : ((size / (-2 * gridSize[litem])) + \"%\"),\r\n\t\t\t\t\t\t\tmarginRight: o.isRTL ? ((size / (-2 * gridSize[litem])) + \"%\") : '0',\r\n\t\t\t\t\t\t\tborderCollapse: 'collapse'\r\n\t\t\t\t\t\t}).find(\"td\").click(function (e) {\r\n\t\t\t\t\t\t\t\tvar $t = $(this),\r\n\t\t\t\t\t\t\t\t\th = $t.html(),\r\n\t\t\t\t\t\t\t\t\tn = parseInt(h.replace(/[^0-9]/g), 10),\r\n\t\t\t\t\t\t\t\t\tap = h.replace(/[^apm]/ig),\r\n\t\t\t\t\t\t\t\t\tf = $t.data('for'); // loses scope, so we use data-for\r\n\r\n\t\t\t\t\t\t\t\tif (f === 'hour') {\r\n\t\t\t\t\t\t\t\t\tif (ap.indexOf('p') !== -1 && n < 12) {\r\n\t\t\t\t\t\t\t\t\t\tn += 12;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (ap.indexOf('a') !== -1 && n === 12) {\r\n\t\t\t\t\t\t\t\t\t\t\tn = 0;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, tp_inst[f + '_slider'], litem, n);\r\n\r\n\t\t\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t\t\t}).css({\r\n\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\twidth: (100 / gridSize[litem]) + '%',\r\n\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t} // end if grid > 0\r\n\t\t\t\t} // end for loop\r\n\r\n\t\t\t\t// Add timezone options\r\n\t\t\t\tthis.timezone_select = $tp.find('.ui_tpicker_timezone').append('<select></select>').find(\"select\");\r\n\t\t\t\t$.fn.append.apply(this.timezone_select,\r\n\t\t\t\t$.map(o.timezoneList, function (val, idx) {\r\n\t\t\t\t\treturn $(\"<option />\").val(typeof val === \"object\" ? val.value : val).text(typeof val === \"object\" ? val.label : val);\r\n\t\t\t\t}));\r\n\t\t\t\tif (typeof(this.timezone) !== \"undefined\" && this.timezone !== null && this.timezone !== \"\") {\r\n\t\t\t\t\tvar local_timezone = (new Date(this.inst.selectedYear, this.inst.selectedMonth, this.inst.selectedDay, 12)).getTimezoneOffset() * -1;\r\n\t\t\t\t\tif (local_timezone === this.timezone) {\r\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.timezone_select.val(this.timezone);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (typeof(this.hour) !== \"undefined\" && this.hour !== null && this.hour !== \"\") {\r\n\t\t\t\t\t\tthis.timezone_select.val(o.timezone);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.timezone_select.change(function () {\r\n\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t});\r\n\t\t\t\t// End timezone options\r\n\t\t\t\t\r\n\t\t\t\t// inject timepicker into datepicker\r\n\t\t\t\tvar $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\r\n\t\t\t\tif ($buttonPanel.length) {\r\n\t\t\t\t\t$buttonPanel.before($tp);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$dp.append($tp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$timeObj = $tp.find('.ui_tpicker_time');\r\n\r\n\t\t\t\tif (this.inst !== null) {\r\n\t\t\t\t\tvar timeDefined = this.timeDefined;\r\n\t\t\t\t\tthis._onTimeChange();\r\n\t\t\t\t\tthis.timeDefined = timeDefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// slideAccess integration: http://trentrichardson.com/2011/11/11/jquery-ui-sliders-and-touch-accessibility/\r\n\t\t\t\tif (this._defaults.addSliderAccess) {\r\n\t\t\t\t\tvar sliderAccessArgs = this._defaults.sliderAccessArgs,\r\n\t\t\t\t\t\trtl = this._defaults.isRTL;\r\n\t\t\t\t\tsliderAccessArgs.isRTL = rtl;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tsetTimeout(function () { // fix for inline mode\r\n\t\t\t\t\t\tif ($tp.find('.ui-slider-access').length === 0) {\r\n\t\t\t\t\t\t\t$tp.find('.ui-slider:visible').sliderAccess(sliderAccessArgs);\r\n\r\n\t\t\t\t\t\t\t// fix any grids since sliders are shorter\r\n\t\t\t\t\t\t\tvar sliderAccessWidth = $tp.find('.ui-slider-access:eq(0)').outerWidth(true);\r\n\t\t\t\t\t\t\tif (sliderAccessWidth) {\r\n\t\t\t\t\t\t\t\t$tp.find('table:visible').each(function () {\r\n\t\t\t\t\t\t\t\t\tvar $g = $(this),\r\n\t\t\t\t\t\t\t\t\t\toldWidth = $g.outerWidth(),\r\n\t\t\t\t\t\t\t\t\t\toldMarginLeft = $g.css(rtl ? 'marginRight' : 'marginLeft').toString().replace('%', ''),\r\n\t\t\t\t\t\t\t\t\t\tnewWidth = oldWidth - sliderAccessWidth,\r\n\t\t\t\t\t\t\t\t\t\tnewMarginLeft = ((oldMarginLeft * newWidth) / oldWidth) + '%',\r\n\t\t\t\t\t\t\t\t\t\tcss = { width: newWidth, marginRight: 0, marginLeft: 0 };\r\n\t\t\t\t\t\t\t\t\tcss[rtl ? 'marginRight' : 'marginLeft'] = newMarginLeft;\r\n\t\t\t\t\t\t\t\t\t$g.css(css);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n\t\t\t\t// end slideAccess integration\r\n\r\n\t\t\t\ttp_inst._limitMinMaxDateTime(this.inst, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* This function tries to limit the ability to go outside the\r\n\t\t* min/max date range\r\n\t\t*/\r\n\t\t_limitMinMaxDateTime: function (dp_inst, adjustSliders) {\r\n\t\t\tvar o = this._defaults,\r\n\t\t\t\tdp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\r\n\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n\t\t\t\treturn;\r\n\t\t\t} // No time so nothing to check here\r\n\r\n\t\t\tif ($.datepicker._get(dp_inst, 'minDateTime') !== null && $.datepicker._get(dp_inst, 'minDateTime') !== undefined && dp_date) {\r\n\t\t\t\tvar minDateTime = $.datepicker._get(dp_inst, 'minDateTime'),\r\n\t\t\t\t\tminDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\r\n\r\n\t\t\t\tif (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null || this.millisecMinOriginal === null || this.microsecMinOriginal === null) {\r\n\t\t\t\t\tthis.hourMinOriginal = o.hourMin;\r\n\t\t\t\t\tthis.minuteMinOriginal = o.minuteMin;\r\n\t\t\t\t\tthis.secondMinOriginal = o.secondMin;\r\n\t\t\t\t\tthis.millisecMinOriginal = o.millisecMin;\r\n\t\t\t\t\tthis.microsecMinOriginal = o.microsecMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dp_inst.settings.timeOnly || minDateTimeDate.getTime() === dp_date.getTime()) {\r\n\t\t\t\t\tthis._defaults.hourMin = minDateTime.getHours();\r\n\t\t\t\t\tif (this.hour <= this._defaults.hourMin) {\r\n\t\t\t\t\t\tthis.hour = this._defaults.hourMin;\r\n\t\t\t\t\t\tthis._defaults.minuteMin = minDateTime.getMinutes();\r\n\t\t\t\t\t\tif (this.minute <= this._defaults.minuteMin) {\r\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMin;\r\n\t\t\t\t\t\t\tthis._defaults.secondMin = minDateTime.getSeconds();\r\n\t\t\t\t\t\t\tif (this.second <= this._defaults.secondMin) {\r\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMin;\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = minDateTime.getMilliseconds();\r\n\t\t\t\t\t\t\t\tif (this.millisec <= this._defaults.millisecMin) {\r\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMin;\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = minDateTime.getMicroseconds();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.microsec < this._defaults.microsecMin) {\r\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMin;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.hourMin = this.hourMinOriginal;\r\n\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($.datepicker._get(dp_inst, 'maxDateTime') !== null && $.datepicker._get(dp_inst, 'maxDateTime') !== undefined && dp_date) {\r\n\t\t\t\tvar maxDateTime = $.datepicker._get(dp_inst, 'maxDateTime'),\r\n\t\t\t\t\tmaxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\r\n\r\n\t\t\t\tif (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null || this.millisecMaxOriginal === null) {\r\n\t\t\t\t\tthis.hourMaxOriginal = o.hourMax;\r\n\t\t\t\t\tthis.minuteMaxOriginal = o.minuteMax;\r\n\t\t\t\t\tthis.secondMaxOriginal = o.secondMax;\r\n\t\t\t\t\tthis.millisecMaxOriginal = o.millisecMax;\r\n\t\t\t\t\tthis.microsecMaxOriginal = o.microsecMax;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() === dp_date.getTime()) {\r\n\t\t\t\t\tthis._defaults.hourMax = maxDateTime.getHours();\r\n\t\t\t\t\tif (this.hour >= this._defaults.hourMax) {\r\n\t\t\t\t\t\tthis.hour = this._defaults.hourMax;\r\n\t\t\t\t\t\tthis._defaults.minuteMax = maxDateTime.getMinutes();\r\n\t\t\t\t\t\tif (this.minute >= this._defaults.minuteMax) {\r\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMax;\r\n\t\t\t\t\t\t\tthis._defaults.secondMax = maxDateTime.getSeconds();\r\n\t\t\t\t\t\t\tif (this.second >= this._defaults.secondMax) {\r\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMax;\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = maxDateTime.getMilliseconds();\r\n\t\t\t\t\t\t\t\tif (this.millisec >= this._defaults.millisecMax) {\r\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMax;\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = maxDateTime.getMicroseconds();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.microsec > this._defaults.microsecMax) {\r\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMax;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.hourMax = this.hourMaxOriginal;\r\n\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (adjustSliders !== undefined && adjustSliders === true) {\r\n\t\t\t\tvar hourMax = parseInt((this._defaults.hourMax - ((this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour)), 10),\r\n\t\t\t\t\tminMax = parseInt((this._defaults.minuteMax - ((this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute)), 10),\r\n\t\t\t\t\tsecMax = parseInt((this._defaults.secondMax - ((this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond)), 10),\r\n\t\t\t\t\tmillisecMax = parseInt((this._defaults.millisecMax - ((this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec)), 10),\r\n\t\t\t\t\tmicrosecMax = parseInt((this._defaults.microsecMax - ((this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec)), 10);\r\n\r\n\t\t\t\tif (this.hour_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.hour_slider, 'hour', { min: this._defaults.hourMin, max: hourMax });\r\n\t\t\t\t\tthis.control.value(this, this.hour_slider, 'hour', this.hour - (this.hour % this._defaults.stepHour));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.minute_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.minute_slider, 'minute', { min: this._defaults.minuteMin, max: minMax });\r\n\t\t\t\t\tthis.control.value(this, this.minute_slider, 'minute', this.minute - (this.minute % this._defaults.stepMinute));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.second_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.second_slider, 'second', { min: this._defaults.secondMin, max: secMax });\r\n\t\t\t\t\tthis.control.value(this, this.second_slider, 'second', this.second - (this.second % this._defaults.stepSecond));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.millisec_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.millisec_slider, 'millisec', { min: this._defaults.millisecMin, max: millisecMax });\r\n\t\t\t\t\tthis.control.value(this, this.millisec_slider, 'millisec', this.millisec - (this.millisec % this._defaults.stepMillisec));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.microsec_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.microsec_slider, 'microsec', { min: this._defaults.microsecMin, max: microsecMax });\r\n\t\t\t\t\tthis.control.value(this, this.microsec_slider, 'microsec', this.microsec - (this.microsec % this._defaults.stepMicrosec));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* when a slider moves, set the internal time...\r\n\t\t* on time change is also called when the time is updated in the text field\r\n\t\t*/\r\n\t\t_onTimeChange: function () {\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n                                return;\r\n\t\t\t}\r\n\t\t\tvar hour = (this.hour_slider) ? this.control.value(this, this.hour_slider, 'hour') : false,\r\n\t\t\t\tminute = (this.minute_slider) ? this.control.value(this, this.minute_slider, 'minute') : false,\r\n\t\t\t\tsecond = (this.second_slider) ? this.control.value(this, this.second_slider, 'second') : false,\r\n\t\t\t\tmillisec = (this.millisec_slider) ? this.control.value(this, this.millisec_slider, 'millisec') : false,\r\n\t\t\t\tmicrosec = (this.microsec_slider) ? this.control.value(this, this.microsec_slider, 'microsec') : false,\r\n\t\t\t\ttimezone = (this.timezone_select) ? this.timezone_select.val() : false,\r\n\t\t\t\to = this._defaults,\r\n\t\t\t\tpickerTimeFormat = o.pickerTimeFormat || o.timeFormat,\r\n\t\t\t\tpickerTimeSuffix = o.pickerTimeSuffix || o.timeSuffix;\r\n\r\n\t\t\tif (typeof(hour) === 'object') {\r\n\t\t\t\thour = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(minute) === 'object') {\r\n\t\t\t\tminute = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(second) === 'object') {\r\n\t\t\t\tsecond = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(millisec) === 'object') {\r\n\t\t\t\tmillisec = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(microsec) === 'object') {\r\n\t\t\t\tmicrosec = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(timezone) === 'object') {\r\n\t\t\t\ttimezone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (hour !== false) {\r\n\t\t\t\thour = parseInt(hour, 10);\r\n\t\t\t}\r\n\t\t\tif (minute !== false) {\r\n\t\t\t\tminute = parseInt(minute, 10);\r\n\t\t\t}\r\n\t\t\tif (second !== false) {\r\n\t\t\t\tsecond = parseInt(second, 10);\r\n\t\t\t}\r\n\t\t\tif (millisec !== false) {\r\n\t\t\t\tmillisec = parseInt(millisec, 10);\r\n\t\t\t}\r\n\t\t\tif (microsec !== false) {\r\n\t\t\t\tmicrosec = parseInt(microsec, 10);\r\n\t\t\t}\r\n\t\t\tif (timezone !== false) {\r\n\t\t\t\ttimezone = timezone.toString();\r\n\t\t\t}\r\n\r\n\t\t\tvar ampm = o[hour < 12 ? 'amNames' : 'pmNames'][0];\r\n\r\n\t\t\t// If the update was done in the input field, the input field should not be updated.\r\n\t\t\t// If the update was done using the sliders, update the input field.\r\n\t\t\tvar hasChanged = (\r\n\t\t\t\t\t\thour !== parseInt(this.hour,10) || // sliders should all be numeric\r\n\t\t\t\t\t\tminute !== parseInt(this.minute,10) || \r\n\t\t\t\t\t\tsecond !== parseInt(this.second,10) || \r\n\t\t\t\t\t\tmillisec !== parseInt(this.millisec,10) || \r\n\t\t\t\t\t\tmicrosec !== parseInt(this.microsec,10) || \r\n\t\t\t\t\t\t(this.ampm.length > 0 && (hour < 12) !== ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) || \r\n\t\t\t\t\t\t(this.timezone !== null && timezone !== this.timezone.toString()) // could be numeric or \"EST\" format, so use toString()\r\n\t\t\t\t\t);\r\n\r\n\t\t\tif (hasChanged) {\r\n\r\n\t\t\t\tif (hour !== false) {\r\n\t\t\t\t\tthis.hour = hour;\r\n\t\t\t\t}\r\n\t\t\t\tif (minute !== false) {\r\n\t\t\t\t\tthis.minute = minute;\r\n\t\t\t\t}\r\n\t\t\t\tif (second !== false) {\r\n\t\t\t\t\tthis.second = second;\r\n\t\t\t\t}\r\n\t\t\t\tif (millisec !== false) {\r\n\t\t\t\t\tthis.millisec = millisec;\r\n\t\t\t\t}\r\n\t\t\t\tif (microsec !== false) {\r\n\t\t\t\t\tthis.microsec = microsec;\r\n\t\t\t\t}\r\n\t\t\t\tif (timezone !== false) {\r\n\t\t\t\t\tthis.timezone = timezone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.inst) {\r\n\t\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._limitMinMaxDateTime(this.inst, true);\r\n\t\t\t}\r\n\t\t\tif (this.support.ampm) {\r\n\t\t\t\tthis.ampm = ampm;\r\n\t\t\t}\r\n\r\n\t\t\t// Updates the time within the timepicker\r\n\t\t\tthis.formattedTime = $.datepicker.formatTime(o.timeFormat, this, o);\r\n\t\t\tif (this.$timeObj) {\r\n\t\t\t\tif (pickerTimeFormat === o.timeFormat) {\r\n\t\t\t\t\tthis.$timeObj.text(this.formattedTime + pickerTimeSuffix);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$timeObj.text($.datepicker.formatTime(pickerTimeFormat, this, o) + pickerTimeSuffix);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.timeDefined = true;\r\n\t\t\tif (hasChanged) {\r\n\t\t\t\tthis._updateDateTime();\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* call custom onSelect.\r\n\t\t* bind to sliders slidestop, and grid click.\r\n\t\t*/\r\n\t\t_onSelectHandler: function () {\r\n\t\t\tvar onSelect = this._defaults.onSelect || this.inst.settings.onSelect;\r\n\t\t\tvar inputEl = this.$input ? this.$input[0] : null;\r\n\t\t\tif (onSelect && inputEl) {\r\n\t\t\t\tonSelect.apply(inputEl, [this.formattedDateTime, this]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* update our input with the new date time..\r\n\t\t*/\r\n\t\t_updateDateTime: function (dp_inst) {\r\n\t\t\tdp_inst = this.inst || dp_inst;\r\n\t\t\tvar dtTmp = (dp_inst.currentYear > 0? \r\n\t\t\t\t\t\t\tnew Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay) : \r\n\t\t\t\t\t\t\tnew Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\r\n\t\t\t\tdt = $.datepicker._daylightSavingAdjust(dtTmp),\r\n\t\t\t\t//dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\r\n\t\t\t\t//dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay)),\r\n\t\t\t\tdateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\r\n\t\t\t\tformatCfg = $.datepicker._getFormatConfig(dp_inst),\r\n\t\t\t\ttimeAvailable = dt !== null && this.timeDefined;\r\n\t\t\tthis.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\r\n\t\t\tvar formattedDateTime = this.formattedDate;\r\n\t\t\t\r\n\t\t\t// if a slider was changed but datepicker doesn't have a value yet, set it\r\n\t\t\tif (dp_inst.lastVal === \"\") {\r\n                dp_inst.currentYear = dp_inst.selectedYear;\r\n                dp_inst.currentMonth = dp_inst.selectedMonth;\r\n                dp_inst.currentDay = dp_inst.selectedDay;\r\n            }\r\n\r\n\t\t\t/*\r\n\t\t\t* remove following lines to force every changes in date picker to change the input value\r\n\t\t\t* Bug descriptions: when an input field has a default value, and click on the field to pop up the date picker. \r\n\t\t\t* If the user manually empty the value in the input field, the date picker will never change selected value.\r\n\t\t\t*/\r\n\t\t\t//if (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0)) {\r\n\t\t\t//\treturn;\r\n\t\t\t//}\r\n\r\n\t\t\tif (this._defaults.timeOnly === true) {\r\n\t\t\t\tformattedDateTime = this.formattedTime;\r\n\t\t\t} else if (this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) {\r\n\t\t\t\tformattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix;\r\n\t\t\t}\r\n\r\n\t\t\tthis.formattedDateTime = formattedDateTime;\r\n\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n\t\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t\t} else if (this.$altInput && this._defaults.timeOnly === false && this._defaults.altFieldTimeOnly === true) {\r\n\t\t\t\tthis.$altInput.val(this.formattedTime);\r\n\t\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t\t} else if (this.$altInput) {\r\n\t\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t\t\tvar altFormattedDateTime = '',\r\n\t\t\t\t\taltSeparator = this._defaults.altSeparator ? this._defaults.altSeparator : this._defaults.separator,\r\n\t\t\t\t\taltTimeSuffix = this._defaults.altTimeSuffix ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;\r\n\t\t\t\t\r\n\t\t\t\tif (!this._defaults.timeOnly) {\r\n\t\t\t\t\tif (this._defaults.altFormat) {\r\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(this._defaults.altFormat, (dt === null ? new Date() : dt), formatCfg);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taltFormattedDateTime = this.formattedDate;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (altFormattedDateTime) {\r\n\t\t\t\t\t\taltFormattedDateTime += altSeparator;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._defaults.altTimeFormat) {\r\n\t\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + altTimeSuffix;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\taltFormattedDateTime += this.formattedTime + altTimeSuffix;\r\n\t\t\t\t}\r\n\t\t\t\tthis.$altInput.val(altFormattedDateTime);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t\t}\r\n\r\n\t\t\tthis.$input.trigger(\"change\");\r\n\t\t},\r\n\r\n\t\t_onFocus: function () {\r\n\t\t\tif (!this.$input.val() && this._defaults.defaultValue) {\r\n\t\t\t\tthis.$input.val(this._defaults.defaultValue);\r\n\t\t\t\tvar inst = $.datepicker._getInst(this.$input.get(0)),\r\n\t\t\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\t\t\t\tif (tp_inst) {\r\n\t\t\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t$.timepicker.log(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* Small abstraction to control types\r\n\t\t* We can add more, just be sure to follow the pattern: create, options, value\r\n\t\t*/\r\n\t\t_controls: {\r\n\t\t\t// slider methods\r\n\t\t\tslider: {\r\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\r\n\t\t\t\t\tvar rtl = tp_inst._defaults.isRTL; // if rtl go -60->0 instead of 0->60\r\n\t\t\t\t\treturn obj.prop('slide', null).slider({\r\n\t\t\t\t\t\torientation: \"horizontal\",\r\n\t\t\t\t\t\tvalue: rtl ? val * -1 : val,\r\n\t\t\t\t\t\tmin: rtl ? max * -1 : min,\r\n\t\t\t\t\t\tmax: rtl ? min * -1 : max,\r\n\t\t\t\t\t\tstep: step,\r\n\t\t\t\t\t\tslide: function (event, ui) {\r\n\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, $(this), unit, rtl ? ui.value * -1 : ui.value);\r\n\t\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstop: function (event, ui) {\r\n\t\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\r\n\t\t\t\t},\r\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\r\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\r\n\t\t\t\t\t\tif (typeof(opts) === 'string') {\r\n\t\t\t\t\t\t\tif (opts === 'min' || opts === 'max') {\r\n\t\t\t\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\t\t\t\treturn obj.slider(opts, val * -1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn Math.abs(obj.slider(opts));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar min = opts.min, \r\n\t\t\t\t\t\t\tmax = opts.max;\r\n\t\t\t\t\t\topts.min = opts.max = null;\r\n\t\t\t\t\t\tif (min !== undefined) {\r\n\t\t\t\t\t\t\topts.max = min * -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (max !== undefined) {\r\n\t\t\t\t\t\t\topts.min = max * -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof(opts) === 'string' && val !== undefined) {\r\n\t\t\t\t\t\treturn obj.slider(opts, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t},\r\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\r\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\r\n\t\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\t\treturn obj.slider('value', val * -1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn Math.abs(obj.slider('value'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\treturn obj.slider('value', val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj.slider('value');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// select methods\r\n\t\t\tselect: {\r\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\r\n\t\t\t\t\tvar sel = '<select class=\"ui-timepicker-select\" data-unit=\"' + unit + '\" data-min=\"' + min + '\" data-max=\"' + max + '\" data-step=\"' + step + '\">',\r\n\t\t\t\t\t\tformat = tp_inst._defaults.pickerTimeFormat || tp_inst._defaults.timeFormat;\r\n\r\n\t\t\t\t\tfor (var i = min; i <= max; i += step) {\r\n\t\t\t\t\t\tsel += '<option value=\"' + i + '\"' + (i === val ? ' selected' : '') + '>';\r\n\t\t\t\t\t\tif (unit === 'hour') {\r\n\t\t\t\t\t\t\tsel += $.datepicker.formatTime($.trim(format.replace(/[^ht ]/ig, '')), {hour: i}, tp_inst._defaults);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (unit === 'millisec' || unit === 'microsec' || i >= 10) { sel += i; }\r\n\t\t\t\t\t\telse {sel += '0' + i.toString(); }\r\n\t\t\t\t\t\tsel += '</option>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsel += '</select>';\r\n\r\n\t\t\t\t\tobj.children('select').remove();\r\n\r\n\t\t\t\t\t$(sel).appendTo(obj).change(function (e) {\r\n\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t},\r\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\r\n\t\t\t\t\tvar o = {},\r\n\t\t\t\t\t\t$t = obj.children('select');\r\n\t\t\t\t\tif (typeof(opts) === 'string') {\r\n\t\t\t\t\t\tif (val === undefined) {\r\n\t\t\t\t\t\t\treturn $t.data(opts);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\to[opts] = val;\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { o = opts; }\r\n\t\t\t\t\treturn tp_inst.control.create(tp_inst, obj, $t.data('unit'), $t.val(), o.min || $t.data('min'), o.max || $t.data('max'), o.step || $t.data('step'));\r\n\t\t\t\t},\r\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\r\n\t\t\t\t\tvar $t = obj.children('select');\r\n\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\treturn $t.val(val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $t.val();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // end _controls\r\n\r\n\t});\r\n\r\n\t$.fn.extend({\r\n\t\t/*\r\n\t\t* shorthand just to use timepicker.\r\n\t\t*/\r\n\t\ttimepicker: function (o) {\r\n\t\t\to = o || {};\r\n\t\t\tvar tmp_args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t\tif (typeof o === 'object') {\r\n\t\t\t\ttmp_args[0] = $.extend(o, {\r\n\t\t\t\t\ttimeOnly: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn $(this).each(function () {\r\n\t\t\t\t$.fn.datetimepicker.apply($(this), tmp_args);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* extend timepicker to datepicker\r\n\t\t*/\r\n\t\tdatetimepicker: function (o) {\r\n\t\t\to = o || {};\r\n\t\t\tvar tmp_args = arguments;\r\n\r\n\t\t\tif (typeof(o) === 'string') {\r\n\t\t\t\tif (o === 'getDate') {\r\n\t\t\t\t\treturn $.fn.datepicker.apply($(this[0]), tmp_args);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.each(function () {\r\n\t\t\t\t\t\tvar $t = $(this);\r\n\t\t\t\t\t\t$t.datepicker.apply($t, tmp_args);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn this.each(function () {\r\n\t\t\t\t\tvar $t = $(this);\r\n\t\t\t\t\t$t.datepicker($.timepicker._newInst($t, o)._defaults);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t/*\r\n\t* Public Utility to parse date and time\r\n\t*/\r\n\t$.datepicker.parseDateTime = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\r\n\t\tvar parseRes = parseDateTimeInternal(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings);\r\n\t\tif (parseRes.timeObj) {\r\n\t\t\tvar t = parseRes.timeObj;\r\n\t\t\tparseRes.date.setHours(t.hour, t.minute, t.second, t.millisec);\r\n\t\t\tparseRes.date.setMicroseconds(t.microsec);\r\n\t\t}\r\n\r\n\t\treturn parseRes.date;\r\n\t};\r\n\r\n\t/*\r\n\t* Public utility to parse time\r\n\t*/\r\n\t$.datepicker.parseTime = function (timeFormat, timeString, options) {\r\n\t\tvar o = extendRemove(extendRemove({}, $.timepicker._defaults), options || {}),\r\n\t\t\tiso8601 = (timeFormat.replace(/\\'.*?\\'/g, '').indexOf('Z') !== -1);\r\n\r\n\t\t// Strict parse requires the timeString to match the timeFormat exactly\r\n\t\tvar strictParse = function (f, s, o) {\r\n\r\n\t\t\t// pattern for standard and localized AM/PM markers\r\n\t\t\tvar getPatternAmpm = function (amNames, pmNames) {\r\n\t\t\t\tvar markers = [];\r\n\t\t\t\tif (amNames) {\r\n\t\t\t\t\t$.merge(markers, amNames);\r\n\t\t\t\t}\r\n\t\t\t\tif (pmNames) {\r\n\t\t\t\t\t$.merge(markers, pmNames);\r\n\t\t\t\t}\r\n\t\t\t\tmarkers = $.map(markers, function (val) {\r\n\t\t\t\t\treturn val.replace(/[.*+?|()\\[\\]{}\\\\]/g, '\\\\$&');\r\n\t\t\t\t});\r\n\t\t\t\treturn '(' + markers.join('|') + ')?';\r\n\t\t\t};\r\n\r\n\t\t\t// figure out position of time elements.. cause js cant do named captures\r\n\t\t\tvar getFormatPositions = function (timeFormat) {\r\n\t\t\t\tvar finds = timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),\r\n\t\t\t\t\torders = {\r\n\t\t\t\t\t\th: -1,\r\n\t\t\t\t\t\tm: -1,\r\n\t\t\t\t\t\ts: -1,\r\n\t\t\t\t\t\tl: -1,\r\n\t\t\t\t\t\tc: -1,\r\n\t\t\t\t\t\tt: -1,\r\n\t\t\t\t\t\tz: -1\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tif (finds) {\r\n\t\t\t\t\tfor (var i = 0; i < finds.length; i++) {\r\n\t\t\t\t\t\tif (orders[finds[i].toString().charAt(0)] === -1) {\r\n\t\t\t\t\t\t\torders[finds[i].toString().charAt(0)] = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn orders;\r\n\t\t\t};\r\n\r\n\t\t\tvar regstr = '^' + f.toString()\r\n\t\t\t\t\t.replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\r\n\t\t\t\t\t\t\tvar ml = match.length;\r\n\t\t\t\t\t\t\tswitch (match.charAt(0).toLowerCase()) {\r\n\t\t\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\r\n\t\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\r\n\t\t\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\t\t\treturn '(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?';\r\n\t\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\t\treturn getPatternAmpm(o.amNames, o.pmNames);\r\n\t\t\t\t\t\t\tdefault:    // literal escaped in quotes\r\n\t\t\t\t\t\t\t\treturn '(' + match.replace(/\\'/g, \"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g, function (m) { return \"\\\\\" + m; }) + ')?';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t.replace(/\\s/g, '\\\\s?') +\r\n\t\t\t\t\to.timeSuffix + '$',\r\n\t\t\t\torder = getFormatPositions(f),\r\n\t\t\t\tampm = '',\r\n\t\t\t\ttreg;\r\n\r\n\t\t\ttreg = s.match(new RegExp(regstr, 'i'));\r\n\r\n\t\t\tvar resTime = {\r\n\t\t\t\thour: 0,\r\n\t\t\t\tminute: 0,\r\n\t\t\t\tsecond: 0,\r\n\t\t\t\tmillisec: 0,\r\n\t\t\t\tmicrosec: 0\r\n\t\t\t};\r\n\r\n\t\t\tif (treg) {\r\n\t\t\t\tif (order.t !== -1) {\r\n\t\t\t\t\tif (treg[order.t] === undefined || treg[order.t].length === 0) {\r\n\t\t\t\t\t\tampm = '';\r\n\t\t\t\t\t\tresTime.ampm = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tampm = $.inArray(treg[order.t].toUpperCase(), o.amNames) !== -1 ? 'AM' : 'PM';\r\n\t\t\t\t\t\tresTime.ampm = o[ampm === 'AM' ? 'amNames' : 'pmNames'][0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (order.h !== -1) {\r\n\t\t\t\t\tif (ampm === 'AM' && treg[order.h] === '12') {\r\n\t\t\t\t\t\tresTime.hour = 0; // 12am = 0 hour\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ampm === 'PM' && treg[order.h] !== '12') {\r\n\t\t\t\t\t\t\tresTime.hour = parseInt(treg[order.h], 10) + 12; // 12pm = 12 hour, any other pm = hour + 12\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresTime.hour = Number(treg[order.h]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (order.m !== -1) {\r\n\t\t\t\t\tresTime.minute = Number(treg[order.m]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.s !== -1) {\r\n\t\t\t\t\tresTime.second = Number(treg[order.s]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.l !== -1) {\r\n\t\t\t\t\tresTime.millisec = Number(treg[order.l]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.c !== -1) {\r\n\t\t\t\t\tresTime.microsec = Number(treg[order.c]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.z !== -1 && treg[order.z] !== undefined) {\r\n\t\t\t\t\tresTime.timezone = $.timepicker.timezoneOffsetNumber(treg[order.z]);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\treturn resTime;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};// end strictParse\r\n\r\n\t\t// First try JS Date, if that fails, use strictParse\r\n\t\tvar looseParse = function (f, s, o) {\r\n\t\t\ttry {\r\n\t\t\t\tvar d = new Date('2012-01-01 ' + s);\r\n\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\td = new Date('2012-01-01T' + s);\r\n\t\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\t\td = new Date('01/01/2012 ' + s);\r\n\t\t\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\t\t\tthrow \"Unable to parse time with native Date: \" + s;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\thour: d.getHours(),\r\n\t\t\t\t\tminute: d.getMinutes(),\r\n\t\t\t\t\tsecond: d.getSeconds(),\r\n\t\t\t\t\tmillisec: d.getMilliseconds(),\r\n\t\t\t\t\tmicrosec: d.getMicroseconds(),\r\n\t\t\t\t\ttimezone: d.getTimezoneOffset() * -1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn strictParse(f, s, o);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err2) {\r\n\t\t\t\t\t$.timepicker.log(\"Unable to parse \\ntimeString: \" + s + \"\\ntimeFormat: \" + f);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}; // end looseParse\r\n\t\t\r\n\t\tif (typeof o.parse === \"function\") {\r\n\t\t\treturn o.parse(timeFormat, timeString, o);\r\n\t\t}\r\n\t\tif (o.parse === 'loose') {\r\n\t\t\treturn looseParse(timeFormat, timeString, o);\r\n\t\t}\r\n\t\treturn strictParse(timeFormat, timeString, o);\r\n\t};\r\n\r\n\t/**\r\n\t * Public utility to format the time\r\n\t * @param {string} format format of the time\r\n\t * @param {Object} time Object not a Date for timezones\r\n\t * @param {Object} [options] essentially the regional[].. amNames, pmNames, ampm\r\n\t * @returns {string} the formatted time\r\n\t */\r\n\t$.datepicker.formatTime = function (format, time, options) {\r\n\t\toptions = options || {};\r\n\t\toptions = $.extend({}, $.timepicker._defaults, options);\r\n\t\ttime = $.extend({\r\n\t\t\thour: 0,\r\n\t\t\tminute: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tmillisec: 0,\r\n\t\t\tmicrosec: 0,\r\n\t\t\ttimezone: null\r\n\t\t}, time);\r\n\r\n\t\tvar tmptime = format,\r\n\t\t\tampmName = options.amNames[0],\r\n\t\t\thour = parseInt(time.hour, 10);\r\n\r\n\t\tif (hour > 11) {\r\n\t\t\tampmName = options.pmNames[0];\r\n\t\t}\r\n\r\n\t\ttmptime = tmptime.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\r\n\t\t\tswitch (match) {\r\n\t\t\tcase 'HH':\r\n\t\t\t\treturn ('0' + hour).slice(-2);\r\n\t\t\tcase 'H':\r\n\t\t\t\treturn hour;\r\n\t\t\tcase 'hh':\r\n\t\t\t\treturn ('0' + convert24to12(hour)).slice(-2);\r\n\t\t\tcase 'h':\r\n\t\t\t\treturn convert24to12(hour);\r\n\t\t\tcase 'mm':\r\n\t\t\t\treturn ('0' + time.minute).slice(-2);\r\n\t\t\tcase 'm':\r\n\t\t\t\treturn time.minute;\r\n\t\t\tcase 'ss':\r\n\t\t\t\treturn ('0' + time.second).slice(-2);\r\n\t\t\tcase 's':\r\n\t\t\t\treturn time.second;\r\n\t\t\tcase 'l':\r\n\t\t\t\treturn ('00' + time.millisec).slice(-3);\r\n\t\t\tcase 'c':\r\n\t\t\t\treturn ('00' + time.microsec).slice(-3);\r\n\t\t\tcase 'z':\r\n\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, false);\r\n\t\t\tcase 'Z':\r\n\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, true);\r\n\t\t\tcase 'T':\r\n\t\t\t\treturn ampmName.charAt(0).toUpperCase();\r\n\t\t\tcase 'TT':\r\n\t\t\t\treturn ampmName.toUpperCase();\r\n\t\t\tcase 't':\r\n\t\t\t\treturn ampmName.charAt(0).toLowerCase();\r\n\t\t\tcase 'tt':\r\n\t\t\t\treturn ampmName.toLowerCase();\r\n\t\t\tdefault:\r\n\t\t\t\treturn match.replace(/'/g, \"\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn tmptime;\r\n\t};\r\n\r\n\t/*\r\n\t* the bad hack :/ override datepicker so it doesn't close on select\r\n\t// inspired: http://stackoverflow.com/questions/1252512/jquery-datepicker-prevent-closing-picker-when-clicking-a-date/1762378#1762378\r\n\t*/\r\n\t$.datepicker._base_selectDate = $.datepicker._selectDate;\r\n\t$.datepicker._selectDate = function (id, dateStr) {\r\n\t\tvar inst = this._getInst($(id)[0]),\r\n\t\t\ttp_inst = this._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\r\n\t\t\tinst.inline = inst.stay_open = true;\r\n\t\t\t//This way the onSelect handler called from calendarpicker get the full dateTime\r\n\t\t\tthis._base_selectDate(id, dateStr);\r\n\t\t\tinst.inline = inst.stay_open = false;\r\n\t\t\tthis._notifyChange(inst);\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t} else {\r\n\t\t\tthis._base_selectDate(id, dateStr);\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* second bad hack :/ override datepicker so it triggers an event when changing the input field\r\n\t* and does not redraw the datepicker on every selectDate event\r\n\t*/\r\n\t$.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;\r\n\t$.datepicker._updateDatepicker = function (inst) {\r\n\r\n\t\t// don't popup the datepicker if there is another instance already opened\r\n\t\tvar input = inst.input[0];\r\n\t\tif ($.datepicker._curInst && $.datepicker._curInst !== inst && $.datepicker._datepickerShowing && $.datepicker._lastInput !== input) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof(inst.stay_open) !== 'boolean' || inst.stay_open === false) {\r\n\r\n\t\t\tthis._base_updateDatepicker(inst);\r\n\r\n\t\t\t// Reload the time control when changing something in the input text field.\r\n\t\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t\tif (tp_inst) {\r\n\t\t\t\ttp_inst._addTimePicker(inst);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* third bad hack :/ override datepicker so it allows spaces and colon in the input field\r\n\t*/\r\n\t$.datepicker._base_doKeyPress = $.datepicker._doKeyPress;\r\n\t$.datepicker._doKeyPress = function (event) {\r\n\t\tvar inst = $.datepicker._getInst(event.target),\r\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tif ($.datepicker._get(inst, 'constrainInput')) {\r\n\t\t\t\tvar ampm = tp_inst.support.ampm,\r\n\t\t\t\t\ttz = tp_inst._defaults.showTimezone !== null ? tp_inst._defaults.showTimezone : tp_inst.support.timezone,\r\n\t\t\t\t\tdateChars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat')),\r\n\t\t\t\t\tdatetimeChars = tp_inst._defaults.timeFormat.toString()\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/[hms]/g, '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/TT/g, ampm ? 'APM' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/Tt/g, ampm ? 'AaPpMm' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/tT/g, ampm ? 'AaPpMm' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/T/g, ampm ? 'AP' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/tt/g, ampm ? 'apm' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/t/g, ampm ? 'ap' : '') + \r\n\t\t\t\t\t\t\t\t\t\t\t\" \" + tp_inst._defaults.separator + \r\n\t\t\t\t\t\t\t\t\t\t\ttp_inst._defaults.timeSuffix + \r\n\t\t\t\t\t\t\t\t\t\t\t(tz ? tp_inst._defaults.timezoneList.join('') : '') + \r\n\t\t\t\t\t\t\t\t\t\t\t(tp_inst._defaults.amNames.join('')) + (tp_inst._defaults.pmNames.join('')) + \r\n\t\t\t\t\t\t\t\t\t\t\tdateChars,\r\n\t\t\t\t\tchr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);\r\n\t\t\t\treturn event.ctrlKey || (chr < ' ' || !dateChars || datetimeChars.indexOf(chr) > -1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $.datepicker._base_doKeyPress(event);\r\n\t};\r\n\r\n\t/*\r\n\t* Fourth bad hack :/ override _updateAlternate function used in inline mode to init altField\r\n\t* Update any alternate field to synchronise with the main field.\r\n\t*/\r\n\t$.datepicker._base_updateAlternate = $.datepicker._updateAlternate;\r\n\t$.datepicker._updateAlternate = function (inst) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar altField = tp_inst._defaults.altField;\r\n\t\t\tif (altField) { // update alternate field too\r\n\t\t\t\tvar altFormat = tp_inst._defaults.altFormat || tp_inst._defaults.dateFormat,\r\n\t\t\t\t\tdate = this._getDate(inst),\r\n\t\t\t\t\tformatCfg = $.datepicker._getFormatConfig(inst),\r\n\t\t\t\t\taltFormattedDateTime = '', \r\n\t\t\t\t\taltSeparator = tp_inst._defaults.altSeparator ? tp_inst._defaults.altSeparator : tp_inst._defaults.separator, \r\n\t\t\t\t\taltTimeSuffix = tp_inst._defaults.altTimeSuffix ? tp_inst._defaults.altTimeSuffix : tp_inst._defaults.timeSuffix,\r\n\t\t\t\t\taltTimeFormat = tp_inst._defaults.altTimeFormat !== null ? tp_inst._defaults.altTimeFormat : tp_inst._defaults.timeFormat;\r\n\t\t\t\t\r\n\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(altTimeFormat, tp_inst, tp_inst._defaults) + altTimeSuffix;\r\n\t\t\t\tif (!tp_inst._defaults.timeOnly && !tp_inst._defaults.altFieldTimeOnly && date !== null) {\r\n\t\t\t\t\tif (tp_inst._defaults.altFormat) {\r\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(tp_inst._defaults.altFormat, date, formatCfg) + altSeparator + altFormattedDateTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taltFormattedDateTime = tp_inst.formattedDate + altSeparator + altFormattedDateTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$(altField).val(altFormattedDateTime);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$.datepicker._base_updateAlternate(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* Override key up event to sync manual input changes.\r\n\t*/\r\n\t$.datepicker._base_doKeyUp = $.datepicker._doKeyUp;\r\n\t$.datepicker._doKeyUp = function (event) {\r\n\t\tvar inst = $.datepicker._getInst(event.target),\r\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t$.timepicker.log(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $.datepicker._base_doKeyUp(event);\r\n\t};\r\n\r\n\t/*\r\n\t* override \"Today\" button to also grab the time.\r\n\t*/\r\n\t$.datepicker._base_gotoToday = $.datepicker._gotoToday;\r\n\t$.datepicker._gotoToday = function (id) {\r\n\t\tvar inst = this._getInst($(id)[0]),\r\n\t\t\t$dp = inst.dpDiv;\r\n\t\tthis._base_gotoToday(id);\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tselectLocalTimezone(tp_inst);\r\n\t\tvar now = new Date();\r\n\t\tthis._setTime(inst, now);\r\n\t\t$('.ui-datepicker-today', $dp).click();\r\n\t};\r\n\r\n\t/*\r\n\t* Disable & enable the Time in the datetimepicker\r\n\t*/\r\n\t$.datepicker._disableTimepickerDatepicker = function (target) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\r\n\t\tif (tp_inst) {\r\n\t\t\tinst.settings.showTimepicker = false;\r\n\t\t\ttp_inst._defaults.showTimepicker = false;\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t$.datepicker._enableTimepickerDatepicker = function (target) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\r\n\t\tif (tp_inst) {\r\n\t\t\tinst.settings.showTimepicker = true;\r\n\t\t\ttp_inst._defaults.showTimepicker = true;\r\n\t\t\ttp_inst._addTimePicker(inst); // Could be disabled on page load\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* Create our own set time function\r\n\t*/\r\n\t$.datepicker._setTime = function (inst, date) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar defaults = tp_inst._defaults;\r\n\r\n\t\t\t// calling _setTime with no date sets time to defaults\r\n\t\t\ttp_inst.hour = date ? date.getHours() : defaults.hour;\r\n\t\t\ttp_inst.minute = date ? date.getMinutes() : defaults.minute;\r\n\t\t\ttp_inst.second = date ? date.getSeconds() : defaults.second;\r\n\t\t\ttp_inst.millisec = date ? date.getMilliseconds() : defaults.millisec;\r\n\t\t\ttp_inst.microsec = date ? date.getMicroseconds() : defaults.microsec;\r\n\r\n\t\t\t//check if within min/max times.. \r\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\r\n\r\n\t\t\ttp_inst._onTimeChange();\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* Create new public method to set only time, callable as $().datepicker('setTime', date)\r\n\t*/\r\n\t$.datepicker._setTimeDatepicker = function (target, date, withDate) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tthis._setDateFromField(inst);\r\n\t\t\tvar tp_date;\r\n\t\t\tif (date) {\r\n\t\t\t\tif (typeof date === \"string\") {\r\n\t\t\t\t\ttp_inst._parseTime(date, withDate);\r\n\t\t\t\t\ttp_date = new Date();\r\n\t\t\t\t\ttp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\r\n\t\t\t\t\ttp_date.setMicroseconds(tp_inst.microsec);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttp_date = new Date(date.getTime());\r\n\t\t\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\r\n\t\t\t\t}\r\n\t\t\t\tif (tp_date.toString() === 'Invalid Date') {\r\n\t\t\t\t\ttp_date = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._setTime(inst, tp_date);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/*\r\n\t* override setDate() to allow setting time too within Date object\r\n\t*/\r\n\t$.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;\r\n\t$.datepicker._setDateDatepicker = function (target, date) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof(date) === 'string') {\r\n\t\t\tdate = new Date(date);\r\n\t\t\tif (!date.getTime()) {\r\n\t\t\t\t$.timepicker.log(\"Error creating Date object from string.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tvar tp_date;\r\n\t\tif (date instanceof Date) {\r\n\t\t\ttp_date = new Date(date.getTime());\r\n\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\r\n\t\t} else {\r\n\t\t\ttp_date = date;\r\n\t\t}\r\n\t\t\r\n\t\t// This is important if you are using the timezone option, javascript's Date \r\n\t\t// object will only return the timezone offset for the current locale, so we \r\n\t\t// adjust it accordingly.  If not using timezone option this won't matter..\r\n\t\t// If a timezone is different in tp, keep the timezone as is\r\n\t\tif (tp_inst && tp_date) {\r\n\t\t\t// look out for DST if tz wasn't specified\r\n\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\r\n\t\t\t\ttp_inst.timezone = tp_date.getTimezoneOffset() * -1;\r\n\t\t\t}\r\n\t\t\tdate = $.timepicker.timezoneAdjust(date, tp_inst.timezone);\r\n\t\t\ttp_date = $.timepicker.timezoneAdjust(tp_date, tp_inst.timezone);\r\n\t\t}\r\n\r\n\t\tthis._updateDatepicker(inst);\r\n\t\tthis._base_setDateDatepicker.apply(this, arguments);\r\n\t\tthis._setTimeDatepicker(target, tp_date, true);\r\n\t};\r\n\r\n\t/*\r\n\t* override getDate() to allow getting time too within Date object\r\n\t*/\r\n\t$.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;\r\n\t$.datepicker._getDateDatepicker = function (target, noDefault) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\t// if it hasn't yet been defined, grab from field\r\n\t\t\tif (inst.lastVal === undefined) {\r\n\t\t\t\tthis._setDateFromField(inst, noDefault);\r\n\t\t\t}\r\n\r\n\t\t\tvar date = this._getDate(inst);\r\n\t\t\tif (date && tp_inst._parseTime($(target).val(), tp_inst.timeOnly)) {\r\n\t\t\t\tdate.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\r\n\t\t\t\tdate.setMicroseconds(tp_inst.microsec);\r\n\r\n\t\t\t\t// This is important if you are using the timezone option, javascript's Date \r\n\t\t\t\t// object will only return the timezone offset for the current locale, so we \r\n\t\t\t\t// adjust it accordingly.  If not using timezone option this won't matter..\r\n\t\t\t\tif (tp_inst.timezone != null) {\r\n\t\t\t\t\t// look out for DST if tz wasn't specified\r\n\t\t\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\r\n\t\t\t\t\t\ttp_inst.timezone = date.getTimezoneOffset() * -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdate = $.timepicker.timezoneAdjust(date, tp_inst.timezone);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn date;\r\n\t\t}\r\n\t\treturn this._base_getDateDatepicker(target, noDefault);\r\n\t};\r\n\r\n\t/*\r\n\t* override parseDate() because UI 1.8.14 throws an error about \"Extra characters\"\r\n\t* An option in datapicker to ignore extra format characters would be nicer.\r\n\t*/\r\n\t$.datepicker._base_parseDate = $.datepicker.parseDate;\r\n\t$.datepicker.parseDate = function (format, value, settings) {\r\n\t\tvar date;\r\n\t\ttry {\r\n\t\t\tdate = this._base_parseDate(format, value, settings);\r\n\t\t} catch (err) {\r\n\t\t\t// Hack!  The error message ends with a colon, a space, and\r\n\t\t\t// the \"extra\" characters.  We rely on that instead of\r\n\t\t\t// attempting to perfectly reproduce the parsing algorithm.\r\n\t\t\tif (err.indexOf(\":\") >= 0) {\r\n\t\t\t\tdate = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(':') - 2)), settings);\r\n\t\t\t\t$.timepicker.log(\"Error parsing the date string: \" + err + \"\\ndate string = \" + value + \"\\ndate format = \" + format);\r\n\t\t\t} else {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn date;\r\n\t};\r\n\r\n\t/*\r\n\t* override formatDate to set date with time to the input\r\n\t*/\r\n\t$.datepicker._base_formatDate = $.datepicker._formatDate;\r\n\t$.datepicker._formatDate = function (inst, day, month, year) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t\treturn tp_inst.$input.val();\r\n\t\t}\r\n\t\treturn this._base_formatDate(inst);\r\n\t};\r\n\r\n\t/*\r\n\t* override options setter to add time to maxDate(Time) and minDate(Time). MaxDate\r\n\t*/\r\n\t$.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;\r\n\t$.datepicker._optionDatepicker = function (target, name, value) {\r\n\t\tvar inst = this._getInst(target),\r\n\t\t\tname_clone;\r\n\t\tif (!inst) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar min = null,\r\n\t\t\t\tmax = null,\r\n\t\t\t\tonselect = null,\r\n\t\t\t\toverrides = tp_inst._defaults.evnts,\r\n\t\t\t\tfns = {},\r\n\t\t\t\tprop;\r\n\t\t\tif (typeof name === 'string') { // if min/max was set with the string\r\n\t\t\t\tif (name === 'minDate' || name === 'minDateTime') {\r\n\t\t\t\t\tmin = value;\r\n\t\t\t\t} else if (name === 'maxDate' || name === 'maxDateTime') {\r\n\t\t\t\t\tmax = value;\r\n\t\t\t\t} else if (name === 'onSelect') {\r\n\t\t\t\t\tonselect = value;\r\n\t\t\t\t} else if (overrides.hasOwnProperty(name)) {\r\n\t\t\t\t\tif (typeof (value) === 'undefined') {\r\n\t\t\t\t\t\treturn overrides[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfns[name] = value;\r\n\t\t\t\t\tname_clone = {}; //empty results in exiting function after overrides updated\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof name === 'object') { //if min/max was set with the JSON\r\n\t\t\t\tif (name.minDate) {\r\n\t\t\t\t\tmin = name.minDate;\r\n\t\t\t\t} else if (name.minDateTime) {\r\n\t\t\t\t\tmin = name.minDateTime;\r\n\t\t\t\t} else if (name.maxDate) {\r\n\t\t\t\t\tmax = name.maxDate;\r\n\t\t\t\t} else if (name.maxDateTime) {\r\n\t\t\t\t\tmax = name.maxDateTime;\r\n\t\t\t\t}\r\n\t\t\t\tfor (prop in overrides) {\r\n\t\t\t\t\tif (overrides.hasOwnProperty(prop) && name[prop]) {\r\n\t\t\t\t\t\tfns[prop] = name[prop];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (prop in fns) {\r\n\t\t\t\tif (fns.hasOwnProperty(prop)) {\r\n\t\t\t\t\toverrides[prop] = fns[prop];\r\n\t\t\t\t\tif (!name_clone) { name_clone = $.extend({}, name); }\r\n\t\t\t\t\tdelete name_clone[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (name_clone && isEmptyObject(name_clone)) { return; }\r\n\t\t\tif (min) { //if min was set\r\n\t\t\t\tif (min === 0) {\r\n\t\t\t\t\tmin = new Date();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmin = new Date(min);\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst._defaults.minDate = min;\r\n\t\t\t\ttp_inst._defaults.minDateTime = min;\r\n\t\t\t} else if (max) { //if max was set\r\n\t\t\t\tif (max === 0) {\r\n\t\t\t\t\tmax = new Date();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = new Date(max);\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst._defaults.maxDate = max;\r\n\t\t\t\ttp_inst._defaults.maxDateTime = max;\r\n\t\t\t} else if (onselect) {\r\n\t\t\t\ttp_inst._defaults.onSelect = onselect;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (value === undefined) {\r\n\t\t\treturn this._base_optionDatepicker.call($.datepicker, target, name);\r\n\t\t}\r\n\t\treturn this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\r\n\t};\r\n\t\r\n\t/*\r\n\t* jQuery isEmptyObject does not check hasOwnProperty - if someone has added to the object prototype,\r\n\t* it will return false for all objects\r\n\t*/\r\n\tvar isEmptyObject = function (obj) {\r\n\t\tvar prop;\r\n\t\tfor (prop in obj) {\r\n\t\t\tif (obj.hasOwnProperty(prop)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/*\r\n\t* jQuery extend now ignores nulls!\r\n\t*/\r\n\tvar extendRemove = function (target, props) {\r\n\t\t$.extend(target, props);\r\n\t\tfor (var name in props) {\r\n\t\t\tif (props[name] === null || props[name] === undefined) {\r\n\t\t\t\ttarget[name] = props[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/*\r\n\t* Determine by the time format which units are supported\r\n\t* Returns an object of booleans for each unit\r\n\t*/\r\n\tvar detectSupport = function (timeFormat) {\r\n\t\tvar tf = timeFormat.replace(/'.*?'/g, '').toLowerCase(), // removes literals\r\n\t\t\tisIn = function (f, t) { // does the format contain the token?\r\n\t\t\t\t\treturn f.indexOf(t) !== -1 ? true : false;\r\n\t\t\t\t};\r\n\t\treturn {\r\n\t\t\t\thour: isIn(tf, 'h'),\r\n\t\t\t\tminute: isIn(tf, 'm'),\r\n\t\t\t\tsecond: isIn(tf, 's'),\r\n\t\t\t\tmillisec: isIn(tf, 'l'),\r\n\t\t\t\tmicrosec: isIn(tf, 'c'),\r\n\t\t\t\ttimezone: isIn(tf, 'z'),\r\n\t\t\t\tampm: isIn(tf, 't') && isIn(timeFormat, 'h'),\r\n\t\t\t\tiso8601: isIn(timeFormat, 'Z')\r\n\t\t\t};\r\n\t};\r\n\r\n\t/*\r\n\t* Converts 24 hour format into 12 hour\r\n\t* Returns 12 hour without leading 0\r\n\t*/\r\n\tvar convert24to12 = function (hour) {\r\n\t\thour %= 12;\r\n\r\n\t\tif (hour === 0) {\r\n\t\t\thour = 12;\r\n\t\t}\r\n\r\n\t\treturn String(hour);\r\n\t};\r\n\r\n\tvar computeEffectiveSetting = function (settings, property) {\r\n\t\treturn settings && settings[property] ? settings[property] : $.timepicker._defaults[property];\r\n\t};\r\n\r\n\t/*\r\n\t* Splits datetime string into date and time substrings.\r\n\t* Throws exception when date can't be parsed\r\n\t* Returns {dateString: dateString, timeString: timeString}\r\n\t*/\r\n\tvar splitDateTime = function (dateTimeString, timeSettings) {\r\n\t\t// The idea is to get the number separator occurrences in datetime and the time format requested (since time has\r\n\t\t// fewer unknowns, mostly numbers and am/pm). We will use the time pattern to split.\r\n\t\tvar separator = computeEffectiveSetting(timeSettings, 'separator'),\r\n\t\t\tformat = computeEffectiveSetting(timeSettings, 'timeFormat'),\r\n\t\t\ttimeParts = format.split(separator), // how many occurrences of separator may be in our format?\r\n\t\t\ttimePartsLen = timeParts.length,\r\n\t\t\tallParts = dateTimeString.split(separator),\r\n\t\t\tallPartsLen = allParts.length;\r\n\r\n\t\tif (allPartsLen > 1) {\r\n\t\t\treturn {\r\n\t\t\t\tdateString: allParts.splice(0, allPartsLen - timePartsLen).join(separator),\r\n\t\t\t\ttimeString: allParts.splice(0, timePartsLen).join(separator)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdateString: dateTimeString,\r\n\t\t\ttimeString: ''\r\n\t\t};\r\n\t};\r\n\r\n\t/*\r\n\t* Internal function to parse datetime interval\r\n\t* Returns: {date: Date, timeObj: Object}, where\r\n\t*   date - parsed date without time (type Date)\r\n\t*   timeObj = {hour: , minute: , second: , millisec: , microsec: } - parsed time. Optional\r\n\t*/\r\n\tvar parseDateTimeInternal = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\r\n\t\tvar date,\r\n\t\t\tparts,\r\n\t\t\tparsedTime;\r\n\r\n\t\tparts = splitDateTime(dateTimeString, timeSettings);\r\n\t\tdate = $.datepicker._base_parseDate(dateFormat, parts.dateString, dateSettings);\r\n\r\n\t\tif (parts.timeString === '') {\r\n\t\t\treturn {\r\n\t\t\t\tdate: date\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tparsedTime = $.datepicker.parseTime(timeFormat, parts.timeString, timeSettings);\r\n\r\n\t\tif (!parsedTime) {\r\n\t\t\tthrow 'Wrong time format';\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdate: date,\r\n\t\t\ttimeObj: parsedTime\r\n\t\t};\r\n\t};\r\n\r\n\t/*\r\n\t* Internal function to set timezone_select to the local timezone\r\n\t*/\r\n\tvar selectLocalTimezone = function (tp_inst, date) {\r\n\t\tif (tp_inst && tp_inst.timezone_select) {\r\n\t\t\tvar now = date || new Date();\r\n\t\t\ttp_inst.timezone_select.val(-now.getTimezoneOffset());\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t* Create a Singleton Instance\r\n\t*/\r\n\t$.timepicker = new Timepicker();\r\n\r\n\t/**\r\n\t * Get the timezone offset as string from a date object (eg '+0530' for UTC+5.5)\r\n\t * @param {number} tzMinutes if not a number, less than -720 (-1200), or greater than 840 (+1400) this value is returned\r\n\t * @param {boolean} iso8601 if true formats in accordance to iso8601 \"+12:45\"\r\n\t * @return {string}\r\n\t */\r\n\t$.timepicker.timezoneOffsetString = function (tzMinutes, iso8601) {\r\n\t\tif (isNaN(tzMinutes) || tzMinutes > 840 || tzMinutes < -720) {\r\n\t\t\treturn tzMinutes;\r\n\t\t}\r\n\r\n\t\tvar off = tzMinutes,\r\n\t\t\tminutes = off % 60,\r\n\t\t\thours = (off - minutes) / 60,\r\n\t\t\tiso = iso8601 ? ':' : '',\r\n\t\t\ttz = (off >= 0 ? '+' : '-') + ('0' + Math.abs(hours)).slice(-2) + iso + ('0' + Math.abs(minutes)).slice(-2);\r\n\t\t\r\n\t\tif (tz === '+00:00') {\r\n\t\t\treturn 'Z';\r\n\t\t}\r\n\t\treturn tz;\r\n\t};\r\n\r\n\t/**\r\n\t * Get the number in minutes that represents a timezone string\r\n\t * @param  {string} tzString formatted like \"+0500\", \"-1245\", \"Z\"\r\n\t * @return {number} the offset minutes or the original string if it doesn't match expectations\r\n\t */\r\n\t$.timepicker.timezoneOffsetNumber = function (tzString) {\r\n\t\tvar normalized = tzString.toString().replace(':', ''); // excuse any iso8601, end up with \"+1245\"\r\n\r\n\t\tif (normalized.toUpperCase() === 'Z') { // if iso8601 with Z, its 0 minute offset\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (!/^(\\-|\\+)\\d{4}$/.test(normalized)) { // possibly a user defined tz, so just give it back\r\n\t\t\treturn tzString;\r\n\t\t}\r\n\r\n\t\treturn ((normalized.substr(0, 1) === '-' ? -1 : 1) * // plus or minus\r\n\t\t\t\t\t((parseInt(normalized.substr(1, 2), 10) * 60) + // hours (converted to minutes)\r\n\t\t\t\t\tparseInt(normalized.substr(3, 2), 10))); // minutes\r\n\t};\r\n\r\n\t/**\r\n\t * No way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)\r\n\t * @param  {Date} date\r\n\t * @param  {string} toTimezone formatted like \"+0500\", \"-1245\"\r\n\t * @return {Date}\r\n\t */\r\n\t$.timepicker.timezoneAdjust = function (date, toTimezone) {\r\n\t\tvar toTz = $.timepicker.timezoneOffsetNumber(toTimezone);\r\n\t\tif (!isNaN(toTz)) {\r\n\t\t\tdate.setMinutes(date.getMinutes() + -date.getTimezoneOffset() - toTz);\r\n\t\t}\r\n\t\treturn date;\r\n\t};\r\n\r\n\t/**\r\n\t * Calls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * n.b. The input value must be correctly formatted (reformatting is not supported)\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the timepicker() call\r\n\t * @return {jQuery}\r\n\t */\r\n\t$.timepicker.timeRange = function (startTime, endTime, options) {\r\n\t\treturn $.timepicker.handleRange('timepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t/**\r\n\t * Calls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @param  {string} method Can be used to specify the type of picker to be added\r\n\t * @return {jQuery}\r\n\t */\r\n\t$.timepicker.datetimeRange = function (startTime, endTime, options) {\r\n\t\t$.timepicker.handleRange('datetimepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t/**\r\n\t * Calls `datepicker` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @return {jQuery}\r\n\t */\r\n\t$.timepicker.dateRange = function (startTime, endTime, options) {\r\n\t\t$.timepicker.handleRange('datepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t/**\r\n\t * Calls `method` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {string} method Can be used to specify the type of picker to be added\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @return {jQuery}\r\n\t */\r\n\t$.timepicker.handleRange = function (method, startTime, endTime, options) {\r\n\t\toptions = $.extend({}, {\r\n\t\t\tminInterval: 0, // min allowed interval in milliseconds\r\n\t\t\tmaxInterval: 0, // max allowed interval in milliseconds\r\n\t\t\tstart: {},      // options for start picker\r\n\t\t\tend: {}         // options for end picker\r\n\t\t}, options);\r\n\r\n\t\tfunction checkDates(changed, other) {\r\n\t\t\tvar startdt = startTime[method]('getDate'),\r\n\t\t\t\tenddt = endTime[method]('getDate'),\r\n\t\t\t\tchangeddt = changed[method]('getDate');\r\n\r\n\t\t\tif (startdt !== null) {\r\n\t\t\t\tvar minDate = new Date(startdt.getTime()),\r\n\t\t\t\t\tmaxDate = new Date(startdt.getTime());\r\n\r\n\t\t\t\tminDate.setMilliseconds(minDate.getMilliseconds() + options.minInterval);\r\n\t\t\t\tmaxDate.setMilliseconds(maxDate.getMilliseconds() + options.maxInterval);\r\n\r\n\t\t\t\tif (options.minInterval > 0 && minDate > enddt) { // minInterval check\r\n\t\t\t\t\tendTime[method]('setDate', minDate);\r\n\t\t\t\t}\r\n\t\t\t\telse if (options.maxInterval > 0 && maxDate < enddt) { // max interval check\r\n\t\t\t\t\tendTime[method]('setDate', maxDate);\r\n\t\t\t\t}\r\n\t\t\t\telse if (startdt > enddt) {\r\n\t\t\t\t\tother[method]('setDate', changeddt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction selected(changed, other, option) {\r\n\t\t\tif (!changed.val()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar date = changed[method].call(changed, 'getDate');\r\n\t\t\tif (date !== null && options.minInterval > 0) {\r\n\t\t\t\tif (option === 'minDate') {\r\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() + options.minInterval);\r\n\t\t\t\t}\r\n\t\t\t\tif (option === 'maxDate') {\r\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() - options.minInterval);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (date.getTime) {\r\n\t\t\t\tother[method].call(other, 'option', option, date);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$.fn[method].call(startTime, $.extend({\r\n\t\t\tonClose: function (dateText, inst) {\r\n\t\t\t\tcheckDates($(this), endTime);\r\n\t\t\t},\r\n\t\t\tonSelect: function (selectedDateTime) {\r\n\t\t\t\tselected($(this), endTime, 'minDate');\r\n\t\t\t}\r\n\t\t}, options, options.start));\r\n\t\t$.fn[method].call(endTime, $.extend({\r\n\t\t\tonClose: function (dateText, inst) {\r\n\t\t\t\tcheckDates($(this), startTime);\r\n\t\t\t},\r\n\t\t\tonSelect: function (selectedDateTime) {\r\n\t\t\t\tselected($(this), startTime, 'maxDate');\r\n\t\t\t}\r\n\t\t}, options, options.end));\r\n\r\n\t\tcheckDates(startTime, endTime);\r\n\t\tselected(startTime, endTime, 'minDate');\r\n\t\tselected(endTime, startTime, 'maxDate');\r\n\t\treturn $([startTime.get(0), endTime.get(0)]);\r\n\t};\r\n\r\n\t/**\r\n\t * Log error or data to the console during error or debugging\r\n\t * @param  {Object} err pass any type object to log to the console during error or debugging\r\n\t * @return {void}\r\n\t */\r\n\t$.timepicker.log = function (err) {\r\n\t\tif (window.console) {\r\n\t\t\twindow.console.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t * Add util object to allow access to private methods for testability.\r\n\t */\r\n\t$.timepicker._util = {\r\n\t\t_extendRemove: extendRemove,\r\n\t\t_isEmptyObject: isEmptyObject,\r\n\t\t_convert24to12: convert24to12,\r\n\t\t_detectSupport: detectSupport,\r\n\t\t_selectLocalTimezone: selectLocalTimezone,\r\n\t\t_computeEffectiveSetting: computeEffectiveSetting,\r\n\t\t_splitDateTime: splitDateTime,\r\n\t\t_parseDateTimeInternal: parseDateTimeInternal\r\n\t};\r\n\r\n\t/*\r\n\t* Microsecond support\r\n\t*/\r\n\tif (!Date.prototype.getMicroseconds) {\r\n\t\tDate.prototype.microseconds = 0;\r\n\t\tDate.prototype.getMicroseconds = function () { return this.microseconds; };\r\n\t\tDate.prototype.setMicroseconds = function (m) {\r\n\t\t\tthis.setMilliseconds(this.getMilliseconds() + Math.floor(m / 1000));\r\n\t\t\tthis.microseconds = m % 1000;\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}\r\n\r\n\t/*\r\n\t* Keep up with the version\r\n\t*/\r\n\t$.timepicker.version = \"1.4.3\";\r\n\r\n})(jQuery);\r\n\n\n  }).apply(root, arguments);\n});\n}(this));\n\n","/**\n * Created by mcandela on 20/11/13.\n */\n\ndefine('view.control-panel',[\n    \"env.utils\",\n    \"env.params-manager\",\n    \"view.full-screen\",\n    \"lib.jquery-ui.timepicker\"\n], function(utils, paramsManager, FullScreenView){\n\n    /**\n     * ControlPanelView is the view component managing the representation of the control panel\n     *\n     * @class ControlPanelView\n     * @constructor\n     * @module view\n     */\n\n    var ControlPanelView = function(env){\n        var container, chart, thresholdsPopup, legendColors, legendPercentages, legendUnit, config, lang, templateManager,\n            disabledOpacity, normalOpacity, filtersPopup, extraDataPopup, dnsResponseDom, tracerouteDom, lazyLoadTab2,\n            autoUpdateButton, slidingMenu, insideSubMenu, slidingMenuOpened, fullScreenButton, hostBindResponseDom,\n            lazyLoadTab3, lazyLoadTab1;\n\n        config = env.config;\n        lang = env.lang;\n        container = env.container;\n        chart = container.chart;\n        templateManager = env.mainView.templateManager;\n\n        disabledOpacity = config.style.disabledControllerOpacity;\n        normalOpacity = config.style.normalControllerOpacity;\n        this.dom = $(templateManager.controlPanel);\n\n\n        /**\n         * This method updates the width of this view\n         *\n         * @method updateWidth\n         */\n\n        this.updateWidth = function(){\n            var margin;\n\n            margin = 3;\n            this.dom.css(\"width\", env.container.chart.width() - margin + \"px\");\n        };\n\n\n        /**\n         * This method renders this view\n         *\n         * @method render\n         * @input {Object} parentDom The parent DOM where this view should be drawn\n         */\n\n        this.render = function(parentDom){\n            var $this, datepickers;\n\n            $this = this;\n            parentDom.$.prepend($this.dom);\n            this.dom.css(\"margin-left\", config.labelWidth);\n\n            this.fullScreenView = new FullScreenView(env);\n\n            datepickers = $(templateManager.timepickersPopup);\n            filtersPopup = $(templateManager.filtersPopup);\n            thresholdsPopup = $(templateManager.thresholdsPopup);\n            extraDataPopup = $(templateManager.extraDataPopup);\n            dnsResponseDom = $(templateManager.dnsResponse);\n            hostBindResponseDom = $(templateManager.hostBindResponse);\n            tracerouteDom = $(templateManager.tracerouteRensponse);\n            slidingMenu = $(templateManager.slidingMenu);\n\n            autoUpdateButton = this.dom.find(\".keep-updated\");\n            fullScreenButton = this.dom.find(\".full-screen\");\n\n            this.dialogPopUp = this.dom.find(\".dnsmon-popup\");\n\n            this.legend = this.dom.find(\".legend\");\n            this.aggregationLevelLegend = this.dom.find(\".legend-agr-level\");\n\n            this.updatePeriodically = {\n                \"dom\": autoUpdateButton,\n                \"icon\": autoUpdateButton.find(\"img\")\n            };\n\n            this.fullScreenButton = {\n                \"dom\": fullScreenButton,\n                \"icon\": fullScreenButton.find(\"img\")\n            };\n\n            this.aggregationLevelLegend.html(lang.aggregationLevelLabel + env.aggregationLabel);\n\n            this.viewSelect = this.dom.find(\".legend-controller-select\");\n\n\n\n            this.thresholdsPopup = {\n                \"dom\": thresholdsPopup,\n                \"slider\": thresholdsPopup.find(\".thresholds-slider\"),\n                \"legendPercentages\": thresholdsPopup.find(\".pls-percentage\"),\n                \"legendUnit\": thresholdsPopup.find(\".pls-unit\"),\n                \"legendColors\": thresholdsPopup.find(\".pls-color\"),\n                \"description\": thresholdsPopup.find(\".popup-pls-text\"),\n                \"messageApply\": thresholdsPopup.find(\".popup-pls-apply\")\n            };\n\n            this.extraDataPopup = {\n                \"dom\": extraDataPopup,\n                \"rawUrl\": extraDataPopup.find(\".popup-raw-data\"),\n                \"overviewRawUrl\": extraDataPopup.find(\".popup-overview-raw-data\"),\n                \"dnsResponse\": extraDataPopup.find(\".popup-dns-response\"),\n                \"hostBindResponse\": extraDataPopup.find(\".popup-hostnamebind-response\"),\n                \"traceroutePlace\":extraDataPopup.find(\".popup-traceroute\"),\n\n                \"dnsResponseDom\": dnsResponseDom,\n                \"hostBindResponseDom\": hostBindResponseDom,\n                \"tracerouteDom\": tracerouteDom\n            };\n\n            this.filtersPopup = {\n                \"dom\": filtersPopup,\n                \"excludeErrorsCheck\": filtersPopup.find(\".exclude-errors\"),\n                \"filter3Protocol\": filtersPopup.find(\".dnsmon-filter-3protocol\"),\n                \"filter4Protocol\": filtersPopup.find(\".dnsmon-filter-4protocol\")\n            };\n\n            this.datepickers = {\n                \"dom\": datepickers\n            };\n\n            legendColors = $this.legend.find(\".pls-color\");\n            legendUnit = $this.legend.find(\".pls-unit\");\n            legendPercentages = $this.legend.find(\".pls-percentage\");\n\n            legendColors.last().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[0]));\n            legendColors.first().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[1] + config.colorSeparationOffset)); // Greater than\n\n            this.thresholdsPopup.legendPercentages.last().val(env.mainView.colorDomainBreakPoints[0]);\n            this.thresholdsPopup.legendPercentages.first().val(env.mainView.colorDomainBreakPoints[1]);\n\n            this.thresholdsPopup.legendColors.last().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[0]));\n            this.thresholdsPopup.legendColors.first().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[1] + config.colorSeparationOffset)); // Greater than\n\n\n            this.dialogPopUp.dialog({\n                resizable: false,\n                modal: true,\n                hide: 200,\n                autoOpen: false,\n                show: 100,\n                open: function(){\n                    $('.ui-dialog').addClass('default-text');\n                },\n                close: function(){\n                    $('.ui-dialog').removeClass('default-text');\n                }\n            });\n\n            this.initButtonEventHandlers();\n        };\n\n\n        /**\n         * This method creates sliding menus\n         *\n         * @method bindSlidingMenu\n         * @input {Object} callerButton The DOM element where to attach the sliding menu\n         * @input {Object} menuItemsHtml The DOM to draw inside the sliding menu\n         * @input {Number} height The height of the menu\n         * @input {String} cssClass The class to be applied to the sliding menu\n         * @input {Function} callback The callback to be called on click\n         */\n\n        this.bindSlidingMenu = function(callerButton, menuItemsHtml, height, cssClass, callback){\n            var timerHide;\n\n            if (insideSubMenu == null){\n                env.mainDom.$.append(slidingMenu); // Append the sub menu dom\n                slidingMenuOpened = false;\n                insideSubMenu = false;\n\n                slidingMenu\n                    .on(\"mouseenter\", function(){\n                        insideSubMenu = true;\n                    })\n                    .on(\"mouseleave\", function(evt){\n                        insideSubMenu = false;\n                        if ($(evt.target).attr('class') == slidingMenu.attr('class')){\n                            hideSubMenu();\n                        }\n                    });\n            }\n\n            function hideSubMenu(){\n                if (insideSubMenu == false){\n                    slidingMenu\n                        .removeClass(cssClass)\n                        .off(\"click\")\n                        .hide()\n                        .css({\n                            height: \"0\"\n                        });\n                    slidingMenuOpened = false;\n                    env.mainDom.$.tooltip(\"enable\");\n                }\n            }\n\n            callerButton\n                .on(\"mouseenter\",\n                function(){\n                    if (slidingMenuOpened == false){\n                        clearTimeout(timerHide);\n                        slidingMenuOpened = true;\n                        slidingMenu.html(menuItemsHtml);\n\n                        slidingMenu\n                            .on(\"click\", callback)\n                            .addClass(cssClass)\n                            .css({\n                                left: callerButton.position().left,\n                                top: callerButton.position().top + 20\n                            })\n                            .show()\n                            .animate({\n                                height: height\n                            }, 300);\n\n                        env.mainDom.$.tooltip(\"disable\");\n                    }\n                })\n                .on(\"mouseleave\", function(){\n                    clearTimeout(timerHide);\n                    timerHide = setTimeout(hideSubMenu, 1000);\n                });\n\n\n        };\n\n\n        /**\n         * This method populates the view selectbox with all the options\n         *\n         * @method loadPossibleView\n         */\n\n        this.loadPossibleView = function(){\n            var queryType;\n            queryType = env.params.type;\n\n            this.removeAllViews();\n\n            switch(queryType){\n                case \"probes\":\n                    this.addPossibleView(lang.packetLossLabel, \"pls\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n\n                case \"servers\":\n                    this.addPossibleView(lang.packetLossLabel, \"pls\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n\n                case \"instances\":\n                    this.addPossibleView(lang.numberProbesLabel, \"prb\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n            }\n        };\n\n\n        /**\n         * This method manages the auto-update function. It is an indirection for keepUpdated in MainView but it manages\n         * the menu and the feedback for the user\n         *\n         * @method keepUpdatedActive\n         * @input {Boolean} active If true the auto-update function will be activated\n         */\n\n        this.keepUpdatedActive = function(active){\n            if(env.isOngoing){ // Is the measurement ongoing?\n                if (!active){\n                    env.mainView.showMessage(lang.keepUpdatedNotActive);\n                    this.updatePeriodically.icon.attr(\"src\", env.widgetUrl + 'view/img/keep_updated_icon.png');\n                }else{\n                    env.mainView.showMessage(lang.keepUpdatedActive);\n                    this.updatePeriodically.icon.attr(\"src\", env.widgetUrl + 'view/img/keep_updated_icon_move2.png');\n                }\n\n                env.isUpdatedPeriodicallyActive = active;\n                env.mainView.timeController.keepUpdated(active);\n            }\n        };\n\n\n        /**\n         * This method manages all the auto-start functions\n         *\n         * @method _initAutoStartFunctions\n         * @private\n         */\n\n        this._initAutoStartFunctions = function(){\n            var $this;\n\n            $this = this;\n\n            env.mainView.on(\"load\", function(){\n\n                if (env.isUpdatedPeriodicallyActive){\n                    $this.keepUpdatedActive(true); // Start the auto-update function\n                }\n\n                if (env.fullScreenActive){\n                    $this.fullScreenView.fullScreenMode(true); // Start the full-screen\n                }\n\n            });\n        };\n\n\n        /**\n         * This method creates all the listeners for the controllers\n         *\n         * @method initButtonEventHandlers\n         */\n\n        this.initButtonEventHandlers = function(){\n            var timeController, manualZoomFactor, $this;\n\n            timeController = env.mainView.timeController;\n            manualZoomFactor = config.manualZoomFactor;\n            $this = this;\n\n            this._initAutoStartFunctions();\n\n            this.updatePeriodicallyButton = this.updatePeriodically.dom\n                .attr(\"title\", lang.keepUpdatedTitle)\n                .css(\"opacity\", disabledOpacity)\n                .on(\"click\", function(){\n                    env.isUpdatedPeriodicallyActive = !env.isUpdatedPeriodicallyActive;\n                    $this.keepUpdatedActive(env.isUpdatedPeriodicallyActive);\n                });\n\n\n            this.zoomInButton = this.dom\n                .find(\".zoom-in\")\n                .attr(\"title\", lang.zoomInTitle)\n                .on(\"click\", function(){\n                    if (env.isZoomableIn){\n                        timeController.zoomIn.call(timeController, manualZoomFactor);\n                    }\n                });\n\n            this.zoomOutButton = this.dom\n                .find(\".zoom-out\")\n                .attr(\"title\", lang.zoomOutTitle)\n                .on(\"click\", function(){\n                    if (env.isZoomableOut){\n                        timeController.zoomOut.call(timeController, manualZoomFactor);\n                    }\n                });\n\n            this.leftButton = this.dom\n                .find(\".left\")\n                .attr(\"title\", lang.shiftLeftTitle)\n                .on(\"click\", function(){\n                    if (env.isTranslableLeft){\n                        timeController.shiftLeft.call(timeController);\n                    }\n                });\n\n            this.rightButton = this.dom\n                .find(\".right\")\n                .attr(\"title\", lang.shiftRightTitle)\n                .on(\"click\", function(){\n                    if (env.isTranslableRight){\n                        timeController.shiftRight.call(timeController);\n                    }\n                });\n\n            this.fullScreenButton.dom\n                .attr(\"title\", lang.fullScreenTitle)\n                .on(\"click\", function(){\n                    env.fullScreenActive = !env.fullScreenActive; // Toggle full screen\n                    $this.setFullScreen(env.fullScreenActive);\n                });\n\n            this.forwardButton = this.dom\n                .find(\".forward\")\n                .attr(\"title\", lang.forwardTitle)\n                .on(\"click\", function(){\n                    timeController.getNewData.call(timeController, null);\n                });\n\n            this.bindSlidingMenu(this.forwardButton, $(templateManager.getLastData), 90, 'get-last-data-sliding-panel', function(evt){\n                var value;\n\n                value = paramsManager.convertRemoteToLocalTimeWindow($(evt.target).text());\n\n                timeController.getNewData.call(timeController, value);\n            });\n\n\n            this.datepickerButton = this.dom\n                .find(\".timepicker\")\n                .attr(\"title\", lang.changeTimeWindowTitle)\n                .on(\"click\", function(){\n\n                    $this.dialogPopUp.html($this.datepickers.dom);\n                    $this.dialogPopUp.dialog(\"open\");\n\n                    $this.datepickers.start = $this.dialogPopUp.find(\".timepicker-start\");\n                    $this.datepickers.stop = $this.dialogPopUp.find(\".timepicker-stop\");\n\n                    $this.datepickers.start.datetimepicker({\n                        minDate: utils.localDateToUTCDate(env.measurementStartTime),\n                        maxDate: utils.localDateToUTCDate(env.measurementEndTime),\n                        dateFormat: \"yy-mm-dd\",\n                        beforeShow: function(){\n                            $('#ui-datepicker-div').addClass('default-text');\n                        },\n                        onClose: function(){\n                            $('#ui-datepicker-div').removeClass('default-text');\n                        }\n                    });\n\n                    $this.datepickers.stop.datetimepicker({\n                        minDate: utils.localDateToUTCDate(env.measurementStartTime),\n                        maxDate: utils.localDateToUTCDate(env.measurementEndTime),\n                        dateFormat: \"yy-mm-dd\",\n                        beforeShow: function(){\n                            $('#ui-datepicker-div').addClass('default-text');\n                        },\n                        onClose: function(){\n                            $('#ui-datepicker-div').removeClass('default-text');\n                        }\n                    });\n\n                    $this.datepickers.start.datepicker(\"setDate\", utils.localDateToUTCDate(env.params.startDate));\n                    $this.datepickers.stop.datepicker(\"setDate\", utils.localDateToUTCDate(env.params.endDate));\n\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.changeTimeWindowTitle,\n                        width: 380,\n                        height: 140,\n                        buttons: {\n                            \"Cancel\": function() {\n                                $(this).dialog(\"close\");\n                            },\n\n                            \"Apply\": function() {\n                                env.params.startDate = utils.UTCDateToLocalDate($this.datepickers.start.datetimepicker('getDate'));\n                                env.params.endDate = utils.UTCDateToLocalDate($this.datepickers.stop.datetimepicker('getDate'));\n                                env.mainView.updateXDomain(true);\n                                $(this).dialog(\"close\");\n                            }\n                        },\n                        beforeClose: function() {\n                            $this.datepickers.start.datepicker(\"destroy\");\n                            $this.datepickers.stop.datepicker(\"destroy\");\n                        }\n                    });\n\n                });\n\n            this.thresholdsButton = this.dom\n                .find(\".thresholds,.legend-pls\") // Both button and legend are clickable STAT-511\n                .attr(\"title\", lang.changeColorsRangeTitle)\n                .on(\"click\", function(){\n                    var thresholdsRanges;\n\n                    $this.dialogPopUp.dialog(\"open\");\n\n                    thresholdsRanges = $this._getThresholdsRanges();\n                    $this.dialogPopUp.html($this.thresholdsPopup.dom);\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.changeColorsRangeTitle,\n                        width: 460,\n                        height: 220,\n                        buttons: {\n\n                            \"Default\": function(){\n                                var newColorScale, showFilter;\n\n                                showFilter = env.showFilter;\n\n                                newColorScale = utils.computeColorScale(config.normalColorScales[showFilter]);\n                                env.mainView.updateOnlyColors(newColorScale.valueRange);\n                                $this.updateLegend(newColorScale.valueRange[2], newColorScale.valueRange[3]);\n                                env.history.update();\n                                $(this).dialog(\"close\");\n                            },\n\n                            \"Close\": function() {\n                                $(this).dialog(\"close\");\n                            }\n                        }\n                    });\n\n                    $this.thresholdsPopup.description.html(lang.thresholdsDescritions[env.showFilter]);\n\n                    $this.thresholdsPopup.slider.show();\n                    $this.thresholdsPopup.messageApply.hide();\n\n                    $this.thresholdsPopup\n                        .slider\n                        .slider({\n                            range: true,\n                            min: thresholdsRanges[0],\n                            max: thresholdsRanges[1],\n                            values: env.mainView.colorDomainBreakPoints,\n                            stop: function(){\n                                env.history.update();\n                            },\n                            slide: function(event, ui) {\n                                var newValuesRange;\n\n                                $this.updateLegend(ui.values[0], ui.values[1]);\n\n                                newValuesRange = [\n                                    thresholdsRanges[0],\n                                    ui.values[0],\n                                    ui.values[0],\n                                    ui.values[1],\n                                    thresholdsRanges[1]\n                                ];\n                                env.mainView.updateOnlyColors(newValuesRange);\n                            }\n                        });\n\n                    $this.thresholdsPopup.legendPercentages\n                        .off('keydown')\n                        .off('change')\n                        .on('keydown', function(evt){\n                            var unicode;\n\n                            evt.stopPropagation();\n                            unicode = (evt.which) ? evt.which : evt.keyCode;\n                            if (!(unicode > 31 && (unicode < 48 || unicode > 57) && (unicode < 96 || unicode > 105))) {\n                                $this.thresholdsPopup.slider.hide();\n                                $this.thresholdsPopup.messageApply.show();\n                            }\n                        })\n                        .on('change keyup', function(evt){\n                            var max, min, valueMax, valueMin, values, slider, parent, unicode;\n                            evt.stopPropagation();\n\n                            unicode = (evt.which) ? evt.which : evt.keyCode;\n\n                            if (!unicode || unicode == 13){\n\n                                $this.thresholdsPopup.messageApply.hide();\n                                slider = $this.thresholdsPopup.slider;\n\n                                slider.show();\n\n                                max = slider.slider('option', 'max');\n                                min = slider.slider('option', 'min');\n\n                                parent = $this.thresholdsPopup.dom;\n\n                                values = [parseFloat(parent.find('.min-val').val()), parseFloat(parent.find('.max-val').val())];\n\n                                valueMin = (utils.isNumber(values[0]) && values[0] < max && values[0] > min) ? parseFloat(values[0]) : parseFloat(min);\n                                valueMax = (utils.isNumber(values[1]) && values[1] < max && values[1] > min) ? parseFloat(values[1]) : parseFloat(max);\n\n\n                                if (valueMax < valueMin){ // Don't invert the boundaries\n                                    if (valueMax == parseFloat($(this).val())){ // Give to the user a feedback related to what is changed in the last interaction\n                                        valueMax = valueMin;\n                                    }else{\n                                        valueMin = valueMax;\n                                    }\n\n                                }\n\n                                slider.slider(\"values\", 1, valueMin);\n                                $this.thresholdsPopup.legendPercentages.last().val(valueMin);\n\n                                slider.slider(\"values\", 0, valueMax);\n                                $this.thresholdsPopup.legendPercentages.first().val(valueMax);\n\n                                $this.updateLegend(valueMin, valueMax);\n                                env.mainView.updateOnlyColors([min, valueMin, valueMin, valueMax, max]);\n                            }\n                        });\n                });\n\n            this.allRowsButton = this.dom\n                .find(\".allrows\")\n                .attr(\"title\", lang.allRowsTitle)\n                .css(\"opacity\", disabledOpacity)\n                .on(\"click\", function(){\n                    if (env.params.selectedRows.length != 0){\n\n                        env.params.selectedRows = [];\n                        env.params.filterProbes = false;\n                        env.mainView.redraw();\n                    }\n                });\n\n            this.filterSelection = this.dom\n                .find(\".filters\")\n                .attr(\"title\", lang.filterSelectionTitle)\n                .on(\"click\", function(){\n\n                    $this.dialogPopUp.dialog(\"open\");\n                    $this.dialogPopUp.html($this.filtersPopup.dom);\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.filtersPopupTitle,\n                        width: 300,\n                        height: 140,\n                        buttons: {\n                            \"Close\": function() {\n                                $(this).dialog(\"close\");\n                            }\n                        }\n                    });\n\n                    $this.filtersPopup\n                        .excludeErrorsCheck\n                        .off(\"click\")\n                        .attr('checked', (env.session.getValue('exclude-errors') == 'true'))\n                        .on(\"click\", function(){\n                            env.session.saveValue('exclude-errors', $(this).is(\":checked\"));\n                            env.mainView.redraw();\n                        });\n\n\n                    $this.filtersPopup\n                      .filter3Protocol\n                      .off(\"change\")\n                      .attr(\"disabled\", (env.params.type == \"probes\"))\n                      .val((env.params.ipVersion == null) ? \"both\" : env.params.ipVersion)\n                      .on(\"change\", function(){\n                        var actualVal;\n\n                        actualVal = $(this).val();\n                        actualVal = (actualVal == \"both\") ? null : actualVal;\n                        env.params.selectedRows = [];\n                        env.params.ipVersion = actualVal;\n                        env.mainView.redraw();\n                      });\n\n                    $this.filtersPopup\n                      .filter4Protocol\n                      .off(\"change\")\n                      .val((env.params.isTcp) ? \"tcp\" : \"udp\")\n                      .on(\"change\", function(){\n                        env.params.isTcp = ($(this).val() == \"tcp\");\n                        env.mainView.redraw();\n                      });\n\n                });\n\n            this.viewSelect\n                .on(\"change\", function(){\n                    env.showFilter = $(this).val();\n                    env.mainView.redraw();\n                });\n        };\n\n\n        /**\n         * This method returns the ranges for the colors thresholds\n         *\n         * @method _getThresholdsRanges\n         * @private\n         * @return {Array} An array composed of two integers\n         */\n\n        this._getThresholdsRanges = function(){\n            var showFilter;\n\n            showFilter = env.showFilter;\n            switch(showFilter){\n                case \"pls\":\n                    return [0, 100];\n                    break;\n\n                case \"rtt\":\n                    return [0, 5000];\n                    break;\n\n                case \"relative-rtt\":\n                    return [0, 1000];\n                    break;\n\n                case \"prb\":\n                    return [0, 5000];\n                    break;\n            }\n        };\n\n\n        /**\n         * This method manages the full screen mode. It is an indirection for fullScreenMode in FullScreenView\n         * but it manages the menu and the feedback for the user\n         *\n         * @method setFullScreen\n         * @return {Boolean} fullScreen If true the full screen will be activated\n         */\n\n        this.setFullScreen = function(fullScreen){\n            var icon;\n\n            icon = (fullScreen) ? 'view/img/dnsmon_smallscreen_icon.png' : 'view/img/dnsmon_fullscreen_icon.png';\n\n            this.fullScreenButton.icon.attr(\"src\", env.widgetUrl + icon);\n            this.fullScreenView.fullScreenMode(fullScreen);\n        };\n\n\n        /**\n         * This method updates the status of all the items in the menu (e.g. if a button is clickable or not)\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            this.allRowsButton.css(\"opacity\", (env.params.selectedRows.length == 0) ? disabledOpacity : normalOpacity);\n            this.rightButton.css(\"opacity\", (env.isTranslableRight == false) ? disabledOpacity : normalOpacity);\n            this.leftButton.css(\"opacity\", (env.isTranslableLeft == false) ? disabledOpacity : normalOpacity);\n            this.zoomInButton.css(\"opacity\", (env.isZoomableIn == false) ? disabledOpacity : normalOpacity);\n            this.zoomOutButton.css(\"opacity\", (env.isZoomableOut == false) ? disabledOpacity : normalOpacity);\n\n            this.updatePeriodicallyButton.css(\"opacity\", (env.isOngoing == false) ? disabledOpacity : normalOpacity);\n\n\n            this.updateAggregationLevelLegend(lang.aggregationLevelLabel + ': ' + env.aggregationLabel);\n\n            this.updateLegend(env.mainView.colorDomainBreakPoints[0], env.mainView.colorDomainBreakPoints[1]);\n\n            this.loadPossibleView();\n        };\n\n\n        /**\n         * This method updates the color thresholds with the new values\n         *\n         * @method updateLegend\n         * @input {Number} firstValue An integer for the first threshold\n         * @input {Number} secondValue An integer for the second threshold\n         */\n\n        this.updateLegend = function(firstValue, secondValue){\n            var firstUnit, secondUnit, showFilter, realFirstValue, realSecondValue, realFirstUnit, realSecondUnit;\n\n            showFilter = env.showFilter;\n\n            realFirstValue = firstValue;\n            realSecondValue = secondValue;\n\n            switch(showFilter){\n                case \"pls\":\n                    realFirstUnit = \"%\";\n                    realSecondUnit = \"%\";\n                    firstUnit = realFirstUnit;\n                    secondUnit = realSecondUnit;\n                    break;\n\n                case \"rtt\":\n                    if (firstValue >= 1000){\n                        firstValue = (firstValue/1000).toFixed(1);\n                        realFirstUnit = \"ms\";\n                        firstUnit = \"s\";\n                    }else{\n                        realFirstUnit = \"ms\";\n                        firstUnit = \"ms\";\n                    }\n\n                    if (secondValue >= 1000){\n                        secondValue = (secondValue/1000).toFixed(1);\n                        realSecondUnit = \"ms\";\n                        secondUnit = \"s\";\n                    }else{\n                        realSecondUnit = \"ms\";\n                        secondUnit = \"ms\";\n                    }\n\n                    break;\n\n                case \"relative-rtt\":\n                    realFirstUnit = \"%\";\n                    realSecondUnit = \"%\";\n                    firstUnit = realFirstUnit;\n                    secondUnit = realSecondUnit;\n                    break;\n\n                case \"prb\":\n                    firstUnit = \"#p\";\n                    secondUnit = \"#p\";\n                    break;\n            }\n\n            legendPercentages.last().html(firstValue);\n            legendPercentages.first().html(secondValue);\n\n            legendUnit.last().html(firstUnit);\n            legendUnit.first().html(secondUnit);\n\n            this.thresholdsPopup.legendPercentages.last().val(realFirstValue);\n            this.thresholdsPopup.legendPercentages.first().val(realSecondValue);\n\n            this.thresholdsPopup.legendUnit.last().html(realFirstUnit);\n            this.thresholdsPopup.legendUnit.first().html(realSecondUnit);\n        };\n\n\n        /**\n         * This method updates the data resolution legend\n         *\n         * @method updateAggregationLevelLegend\n         * @input {String} newLabel The new legend\n         */\n\n        this.updateAggregationLevelLegend = function(newLabel){\n            var domElement;\n            domElement = this.aggregationLevelLegend;\n\n            if (domElement.text() != newLabel){\n                domElement\n                    .html(newLabel)\n                    .attr(\"title\", lang.aggregationLevelTitle)\n                    .toggleClass(\"updated\");\n\n                setTimeout(function(){\n                    domElement.toggleClass(\"updated\");\n                }, config.aggregationLegendUpdatedDuration);\n            }\n\n        };\n\n\n        /**\n         * This method appends an option for the selectobox fo the views\n         *\n         * @method addPossibleView\n         * @input {String} label The name of the view\n         * @input {String} value The value/key of the view\n         */\n\n        this.addPossibleView = function(label, value){\n            var checked, showFilter;\n\n            showFilter = env.showFilter;\n\n            checked = (value == showFilter) ? 'selected=\"selected\"' : '' ;\n            this.viewSelect.append('<option value=\"' + value + '\" ' + checked + '>' + label + '</option>');\n        };\n\n\n        /**\n         * This method removes all the options of the selectobox fo the views\n         *\n         * @method removeAllViews\n         */\n\n        this.removeAllViews = function(){\n            this.viewSelect.html(\"\");\n        };\n\n\n        this._showDnsResponse = function(cell, dnsResponsePlace){\n            var htmlDnsResponse, dataItem;\n\n            this.dialogPopUp.dialog({height: 320, minWidth: 0, minHeight: 0, maxHeight: 0});\n            this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n            if (!lazyLoadTab1) {\n                env.connector.getNativeDnsResult(cell, function (data) { // Show the DNS response\n\n                    lazyLoadTab1 = true;\n                    for (var n = 0, length = data.length; n < length; n++) {\n                        dataItem = data[n];\n                        htmlDnsResponse = this.extraDataPopup.dnsResponseDom.clone();\n\n                        htmlDnsResponse.find(\".dns-response-prbid\").html(dataItem.probeId);\n                        htmlDnsResponse.find(\".dns-response-rt\").html(dataItem.responseTime);\n                        htmlDnsResponse.find(\".dns-response-date\").html(utils.dateToString(dataItem.date));\n\n                        if (dataItem.nsId) {\n                            htmlDnsResponse.find(\".dns-response-nsid\").html(dataItem.nsId);\n                        } else {\n                            htmlDnsResponse.find(\".dns-response-nsid-rd\").hide();\n                        }\n\n                        if (dataItem.response && dataItem.response != '') {\n                            htmlDnsResponse.find(\".dns-response-plaintext\").html(dataItem.response);\n                        }\n\n                        if (dataItem.error) {\n                            htmlDnsResponse.find(\".dns-response-plaintext\").addClass(\"dns-response-error\").html('[' + dataItem.error.type + '] ' + dataItem.error.message);\n                        }\n\n                        dnsResponsePlace.append(htmlDnsResponse);\n                    }\n\n                }, this);\n            }\n        };\n\n\n        this._showTraceroutes = function(cell, traceroutePlace){\n            var dataItem, textareaWidth, tracerouteArea;\n\n            this.dialogPopUp.dialog({height: 512, minWidth: 490, minHeight: 512, maxHeight: 512});\n            this.dialogPopUp.dialog(\"option\", \"resizable\", true);\n            if (!lazyLoadTab2) {\n                env.connector.getClosestTraceroutes(cell, function (data) { // Show the closest Traceroutes\n                    lazyLoadTab2 = true;\n                    if (data.length > 0) {\n                        tracerouteDom = this.extraDataPopup.tracerouteDom.clone();\n                        traceroutePlace.append(tracerouteDom);\n\n                        if (data.length >= 2) {\n//                            this.dialogPopUp.dialog(\"option\", \"resizable\", true);\n                            this.dialogPopUp.dialog({\n                                resize: function (event, ui) {\n                                    if (ui.size.width > textareaWidth * 2 + 74) {\n                                        $(this).addClass(\"resized-dialog-traceroute\");\n                                    } else {\n                                        $(this).removeClass(\"resized-dialog-traceroute\");\n                                    }\n                                }\n                            });\n\n                        } else {\n                            this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n                        }\n\n                        for (var n = 0, length = data.length; n < length; n++) {\n\n                            dataItem = data[n];\n\n                            tracerouteArea = $('<div class=\"textarea\"></div>').tooltip(\n                                {\n                                    tooltipClass: 'custom-jquery-ui-tooltip',\n                                    hide: {\n                                        effect: \"fade\",\n                                        duration: config.tooltipFade\n                                    }\n                                });\n\n                            tracerouteArea.html(dataItem);\n                            tracerouteDom.append(tracerouteArea);\n                            textareaWidth = tracerouteArea.outerWidth();\n                        }\n\n                    }\n                }, this);\n            }\n        };\n\n        this._showHostonameBindResponse = function(cell, hostBindResponsePlace){\n            var htmlHostnameResponse, dataItem;\n\n            this.dialogPopUp.dialog({height: 380, minWidth: 0, minHeight: 0, maxHeight: 0});\n            this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n            if (!lazyLoadTab3) {\n                env.connector.getClosestHostnameBind(cell, function (data) { // Show the closest Traceroutes\n                    lazyLoadTab3 = true;\n                    if (data.length > 0) {\n\n                        for (var n = 0, length = data.length; n < length; n++) {\n                            dataItem = data[n];\n\n                            htmlHostnameResponse = this.extraDataPopup.hostBindResponseDom.clone();\n                            htmlHostnameResponse.find(\".hostbind-response-prbid\").html(dataItem.probeId);\n                            htmlHostnameResponse.find(\".hostbind-response-msmId\").html(dataItem.msmId);\n                            htmlHostnameResponse.find(\".hostbind-response-rt\").html(dataItem.responseTime);\n                            htmlHostnameResponse.find(\".hostbind-response-date\").html(utils.dateToString(dataItem.date));\n\n                            if (dataItem.response && dataItem.response != '') {\n                                htmlHostnameResponse.find(\".hostbind-response-plaintext\").html(dataItem.response);\n                            } else {\n                                htmlHostnameResponse.find(\".hostbind-response-plaintext\").html(env.lang.hostBindResponseNoAnswer);\n                            }\n\n                            hostBindResponsePlace.append(htmlHostnameResponse);\n                        }\n\n                    }\n                }, this);\n            }\n        };\n\n        /**\n         * This method renders a dialog box with all the information related to a cell\n         *\n         * @method showExtraInfoDialog\n         * @input {Object} cell A cell object\n         */\n\n        this.showExtraInfoDialog = function(cell){\n            var overviewUrls, sampleUrls, parentOverview, parentSample, linkText, linkUrl, linkCurrent, urlItem,\n                dnsResponsePlace, traceroutePlace, dialogHeight, n, length, hostBindResponsePlace, $this;\n\n            $this = this;\n\n            lazyLoadTab1 = false;\n            lazyLoadTab2 = false;\n            lazyLoadTab3 = false;\n\n            overviewUrls = env.connector.getDataUrls(cell);\n            sampleUrls = env.connector.getCellDataUrls(cell);\n\n            dialogHeight = 210;\n\n            this.dialogPopUp.dialog({\n                title: lang.extraInfoDialogTitle,\n                width: 500,\n                height: dialogHeight,\n                close: function(){\n                    var $this;\n\n                    $this = $(this);\n                    $this.removeClass(\"resized-dialog-traceroute\");\n                    $this.dialog({height: 0, minWidth: 0, minHeight: 0, maxHeight: Infinity});\n                    $this.dialog(\"option\", \"resizable\", false);\n                },\n                buttons: {\n                    \"Close\": function() {\n                        $(this).dialog(\"close\");\n                    }\n                }\n            });\n\n            this.dialogPopUp.dialog(\"open\");\n            this.dialogPopUp.html(this.extraDataPopup.dom);\n\n            parentOverview = this.extraDataPopup.overviewRawUrl;\n            parentSample = this.extraDataPopup.rawUrl;\n\n            parentOverview.html('');\n            parentSample.html('');\n\n            for (n=0,length=sampleUrls.length; n<length; n++){\n                urlItem = sampleUrls[n];\n                linkUrl = urlItem.url;\n                linkText = urlItem.label;\n                linkCurrent = urlItem.current;\n\n                if (env.retrievedAggregationLevel != 0 || linkCurrent){\n                    parentSample.append('<a target=\"_blank\" href=\"' + linkUrl + '\" title=\"' + linkText + '\">' + linkText + ((linkCurrent) ? ' (current)' : '') + '</a> ');\n                }\n            }\n\n            for (n=0,length=overviewUrls.length; n<length; n++){\n                urlItem = overviewUrls[n];\n                linkUrl = urlItem.url;\n                linkText = urlItem.label;\n                linkCurrent = urlItem.current;\n                if (env.retrievedAggregationLevel != 0 || linkCurrent){\n                    parentOverview.append('<a target=\"_blank\" href=\"' + linkUrl + '\" title=\"' + linkText + '\">' + linkText + ((linkCurrent) ? ' (current)' : '') + '</a> ');\n                }\n            }\n\n            dnsResponsePlace = this.extraDataPopup.dnsResponse;\n            dnsResponsePlace.html(\"\").removeClass('dns-response-error');\n\n            hostBindResponsePlace = this.extraDataPopup.hostBindResponse;\n            hostBindResponsePlace.html(\"\").removeClass('hostbind-response-error');\n\n            traceroutePlace = this.extraDataPopup.traceroutePlace;\n            traceroutePlace.html(\"\");\n\n            this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n\n            if (env.retrievedAggregationLevel == 0) {\n                this.dialogPopUp.find('.popup-tabs').show().tabs().find('a').on('click', function () {\n                    var tab, tabId;\n\n                    tab = $(this);\n                    tabId = tab.attr('href');\n\n                    switch (tabId) {\n\n                        case '#tabs-1':\n                            $this._showDnsResponse(cell, dnsResponsePlace);\n                            break;\n\n                        case '#tabs-2':\n                            $this._showTraceroutes(cell, traceroutePlace);\n                            break;\n\n                        case '#tabs-3':\n                            $this._showHostonameBindResponse(cell, hostBindResponsePlace);\n                            break;\n                    }\n                });\n                this._showDnsResponse(cell, dnsResponsePlace);\n            } else {\n                this.dialogPopUp.find('.popup-tabs').hide();\n            }\n\n        };\n\n\n    };\n\n    return ControlPanelView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 10:59 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('controller.gesture-manager',[\n    \"env.utils\",\n    \"lib.d3\"\n], function(utils, d3){\n\n    /**\n     * GesturesManager provides all the features handling user gestures/interactions.\n     *\n     * @class GesturesManager\n     * @constructor\n     * @module controller\n     */\n\n    var GesturesManager =  function(env){\n        var $this, config, mouseWheelSensibility, eventsAttachedOn;\n\n        $this = this;\n        config = env.config;\n        mouseWheelSensibility = config.mouseWheelSensibility;\n\n        this.alreadyInit = false;\n        this.eventsList = {};\n        this.eventsList.scrollDown = [];\n        this.eventsList.scrollUp = [];\n        this.eventsList.scrollLeft = [];\n        this.eventsList.scrollRight = [];\n\n        env.timeEventsActive = true;\n\n\n        /**\n         * Attach a callback to a gesture\n         *\n         * @method on\n         * @param {String} evt An event id\n         * @param {Function} callback A callback\n         * @param {Object} context The context of the callback\n         */\n\n        this.on = function(evt, func, context){\n\n            if (!this.alreadyInit) {\n                this._init();\n                this.alreadyInit = true;\n            }\n\n            this.eventsList[evt].push({\n                bindedFunction: func,\n                context: context\n            });\n\n        };\n\n\n        /**\n         * Initialise all the events related to the mouse wheel\n         *\n         * @method _initMouseWheel\n         * @private\n         */\n\n        this._initMouseWheel = function(){\n            env.container.chart.dom.$.on('DOMMouseScroll mousewheel', function (evt) {\n                var list, element, newYDomain, wheelDelta, characherization;\n\n                evt.preventDefault();\n\n                if (mouseWheelSensibility != 0){\n                    mouseWheelSensibility--;\n                    return false;\n                }else{\n                    mouseWheelSensibility = config.mouseWheelSensibility;\n                }\n\n                list = [];\n\n                if (env.timeEventsActive ==  true){\n\n                    if (env.isUpdatedPeriodicallyActive){ // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    wheelDelta = evt.originalEvent.detail || -(evt.originalEvent.wheelDelta/120);\n\n                    if (wheelDelta < 0) { //alternative options for wheelData: wheelDeltaX & wheelDeltaY\n\n                        list = $this.eventsList.scrollDown;\n\n                    }else{\n\n                        if (config.allRowsZoomingOut && $this.rowsSubSelection){ // It is possible to get all the rows before to zoom out, check config.allRowsZoomingOut\n\n                            $this.rowsSubSelection = false;\n                            env.timeEventsActive = false;\n                            env.params.selectedRows = [];\n                            characherization = env.mainView.rowsCharacterization(env.mainView.rows);\n                            newYDomain = characherization.domain;\n                            env.mainView.yAxis.setDomain(function(){return newYDomain;});\n                            env.mainView.redraw();\n\n                        }else{\n                            list = $this.eventsList.scrollUp;\n                        }\n\n                    }\n\n                    for (var n=0,length=list.length; n<length; n++){\n                        element = list[n];\n                        element.bindedFunction.call(element.context, wheelDelta);\n                    }\n\n                }\n                return false;\n            });\n\n        };\n\n\n        /**\n         * Initialise all the events related to the keyboard\n         *\n         * @method _initKeyEvents\n         * @private\n         */\n\n        this._initKeyEvents = function(){\n            eventsAttachedOn.$.keydown(function(evt){\n                var list, element, key;\n\n                if (env.timeEventsActive ==  true){\n                    key = (evt.which) ? evt.which : evt.keyCode;\n                    switch(key){\n                        case 37: //Left\n                            list = $this.eventsList.scrollLeft;\n                            break;\n\n                        case 39: //Right\n                            list = $this.eventsList.scrollRight;\n                            break;\n                    }\n\n                    if (list){\n                        evt.preventDefault();\n\n                        for (var n=0,length=list.length; n<length; n++){\n                            element = list[n];\n                            element.bindedFunction.call(element.context);\n                        }\n                    }\n                }\n\n            });\n        };\n\n\n        /**\n         * Initialise all the events\n         *\n         * @method _init\n         * @private\n         */\n\n        this._init = function(){\n            eventsAttachedOn = env.document;\n            env.timeEventsActive = true;\n\n            if (env.activeMouseZoom) {\n                this._initMouseWheel();\n            }\n\n            if(env.activeKeys){\n                this._initKeyEvents();\n            }\n\n            if (env.activeGestures){\n                this._initializeSelectionTool();\n            }\n\n            this._initializeActiveLabels();\n            this._initializeRemoveRowsFunction();\n        };\n\n\n        /**\n         * Initialise the function to remove rows\n         *\n         * @method _initializeRemoveRowsFunction\n         * @private\n         */\n\n        this._initializeRemoveRowsFunction = function(){\n\n            eventsAttachedOn.$.on(\"keydown\", function(evt){\n                var key;\n\n                key = (evt.which) ? evt.which : evt.keyCode;\n                if (evt.shiftKey || key == 16) { // Shift\n                    env.rowRemotionOngoing = true;\n                    env.mainView.showMessage(env.lang.clickToRemoveRow);\n                    d3.selectAll(\".y text\").attr(\"class\", \"removable\");\n                }\n            });\n\n            eventsAttachedOn.$.on(\"keyup\", function(evt){\n                if (env.rowRemotionOngoing){ // Shift\n                    env.rowRemotionOngoing = false;\n                    d3.selectAll(\".y text\").attr(\"class\", null);\n                }\n            });\n        };\n\n\n        /**\n         * This method removes a row from the scene.\n         *\n         * @method _removeRowFromSelection\n         * @private\n         * @input {Object} rowSelection The selected row in a jQuery format\n         */\n\n        this._removeRowFromSelection = function(rowSelection){\n            var rowMagnet;\n\n            rowMagnet = rowSelection.attr(\"magnet\");\n\n            if (env.params.selectedRows.length == 0){\n                env.params.selectedRows = $.map(env.connector.getRows(), function(item){ return item.id; }); // Get all rows\n            }\n\n            env.params.filterProbes = true;\n            env.params.selectedRows = utils.removeSubArray(env.params.selectedRows, [rowMagnet]);\n            env.mainView.redraw();\n        };\n\n\n        /**\n         * This method executes the default click behaviour of a label on the y-axis.\n         *\n         * @method _executeRowAction\n         * @private\n         * @input {Object} rowSelection The selected row in a jQuery format\n         */\n\n        this._executeRowAction = function(rowSelection){\n            var queryType, triggerAction, rowMagnet, rowObject;\n\n            triggerAction = false;\n            queryType = env.params.type;\n            rowMagnet = rowSelection.attr(\"magnet\");\n            rowObject = env.connector.getRowById(rowMagnet);\n\n            switch (queryType) {\n\n                case \"probes\":\n                    window.open(env.connector.getProbesPageUrl(rowMagnet, env.params), \"_blank\");\n                    break;\n\n                case \"servers\":\n                    if (rowObject.cells.length > 0) {\n                        env.params.type = \"probes\";\n                        env.params.root = env.params.group;\n                        env.params.group = rowMagnet;\n                        env.params.filterProbes = false;\n                        env.params.selectedRows = [];\n                        triggerAction = true;\n                    } else {\n                        env.mainView.showMessage(env.lang.noDataForRow);\n                    }\n                    break;\n            }\n\n            if (triggerAction == true) {\n                env.mainView.breadcrumbs.addLevel(rowSelection.text());\n                env.mainView.redraw();\n            }\n\n        };\n\n\n        /**\n         * Initialise labels on the y-axis\n         *\n         * @method _initializeActiveLabels\n         * @private\n         */\n\n        this._initializeActiveLabels = function(){\n            env.mainView.yAxis.onClick(function(evt){\n                var selectedRow;\n\n                selectedRow = $(this);\n\n                if (!env.rowRemotionOngoing) {\n\n                    $this._executeRowAction(selectedRow);\n\n                }else{\n\n                    $this._removeRowFromSelection(selectedRow);\n\n                }\n            });\n        };\n\n\n\n\n        /**\n         * Initialise the selection tool\n         *\n         * @method _initializeSelectionTool\n         * @private\n         */\n\n        this._initializeSelectionTool = function(){\n            var svg, body, selectionRect, endCoords, trackerDomElement, container, params, chart, selectedCells,\n                removeSelectionWithFeedback, coords, startCoords, currentElement, coordsMousemove, finalStartCoords,\n                finalEndCoords, removeRect, startSelection, stopSelection,\n                getNormalCellColor, getSelectedCellColor, updateSelectionTimes, selectedRectsBoundingBox,\n                updateSelectionNormal, updateSelectionLowProfile, dragStarted, selectionTooltipStart, selectionTooltipStop;\n\n            container = env.container;\n            params = env.params;\n            chart = container.chart;\n            svg = chart.svg;\n            body = d3.select(\"body\");\n\n\n            trackerDomElement = svg;\n\n            selectedRectsBoundingBox = {min: {x: Infinity, y: Infinity}, max: {x: -1, y: -1}}; //Reset the selection boundaries\n\n            trackerDomElement.style(\"cursor\", config.style.selectionCursor);\n\n\n            // This function removes the selection providing a feedback for the user\n            removeSelectionWithFeedback = function(event){\n\n                if (event.target.nodeName != 'rect' && event.target.nodeName != 'svg'){\n\n                    if (selectionRect){ //Remove the low profile selection rect\n                        selectionRect\n                            .transition()\n                            .duration(config.selectionWithdrawalDuration)\n                            .attr(\"width\", \"0\")\n                            .attr(\"height\", \"0\")\n                            .remove();\n                    }\n\n                    selectionTooltipStart.remove();\n                    selectionTooltipStop.remove();\n\n                    if(selectedCells && env.lowProfile == false){ //Remove the selected rectangles\n                        selectedCells\n                            .transition()\n                            .duration(config.selectionWithdrawalDuration)\n                            .style(\"fill\", getNormalCellColor);\n                    }\n\n                    currentElement = null;\n\n                    env.timeEventsActive = true;\n\n                    body.classed(\"stat-noselect\", false); //Remove the non-selection from all the dom\n                    eventsAttachedOn.$.off(\"mouseup.selection\").off(\"keyup.selection\"); // Remove useless listeners\n                    document.onselectstart = function(){return true;}; //Remove the cursor hack\n                    trackerDomElement.on(\"mousemove\", null);// .on(\"mouseup\", null); //Remove the selection events\n                }\n            };\n\n\n            // This function provides the selection feature in the low-profile mode\n            updateSelectionLowProfile = function(){\n                var chartHeight, chartWidth, x, y, width, height, tooltipsOffset, dates, startDateString, endDateString,\n                    tooltipWidth;\n\n                if (currentElement == null) return;\n\n                coordsMousemove = d3.mouse(currentElement);\n\n                chartHeight = chart.height();\n                chartWidth = chart.width();\n\n                tooltipsOffset = 3;\n\n                // The following lines bound the selection inside the chart\n                coordsMousemove[0] = (coordsMousemove[0] > 0) ? coordsMousemove[0] : 1 ;\n                coordsMousemove[0] = (coordsMousemove[0] < chartWidth) ? coordsMousemove[0] : chartWidth ;\n\n                coordsMousemove[1] = (coordsMousemove[1] > 0) ? coordsMousemove[1] : 1 ;\n                coordsMousemove[1] = (coordsMousemove[1] < chartHeight) ? coordsMousemove[1] : chartHeight ;\n\n                endCoords = {x: ((coordsMousemove[0] > 0) ? coordsMousemove[0] : 1 ), y: coordsMousemove[1]};\n                dragStarted = true;\n\n                x = Math.min(startCoords.x, endCoords.x);\n                y = Math.min(startCoords.y, endCoords.y);\n                width = Math.abs(startCoords.x - endCoords.x);\n                height = Math.abs(startCoords.y - endCoords.y);\n\n                dates = $this._computeSubDomains(startCoords, endCoords);\n\n                startDateString = utils.dateToString(dates[0][0]);\n                endDateString = utils.dateToString(dates[0][1]);\n\n                tooltipWidth = (startDateString.length * 8); // Where 8 is the base width of a char in the tooltip (don't retrieve it for performance purposes)\n\n                selectionTooltipStart\n                    .css({\n                        \"position\": \"absolute\",\n                        \"left\": x + chart.margin.left - tooltipsOffset - selectionTooltipStart.outerWidth(),\n                        \"top\": y + chart.margin.top - tooltipsOffset - selectionTooltipStart.outerHeight(),\n                        \"width\": tooltipWidth\n                    })\n                    .text(startDateString)\n                    .show();\n\n                selectionTooltipStop\n                    .css({\n                        \"position\": \"absolute\",\n                        \"left\": x + width + chart.margin.left + tooltipsOffset,\n                        \"top\": y + height + chart.margin.top + tooltipsOffset,\n                        \"width\": tooltipWidth\n                    })\n                    .text(endDateString)\n                    .show();\n\n                selectionRect.attr({\n                    \"x\": x, //Update the selection rectangle in low profile mode\n                    \"y\": y,\n                    \"width\": width,\n                    \"height\": height\n                }).style(\"fill-opacity\", function(){\n                    return (env.lowProfile == true) ? 0.5 : 0.2;\n                });\n            };\n\n\n            // This function provides the selection feature in the normal mode\n            updateSelectionNormal = function(){\n                var selectionVertices, allCells;\n\n                updateSelectionTimes--;\n\n                if (currentElement != null && updateSelectionTimes == 0) {\n\n                    allCells = env.container.chart.svg.selectAll(\"rect.cell\");\n\n                    updateSelectionLowProfile();\n\n                    dragStarted = true;\n\n                    updateSelectionTimes = config.sensibilityFactorDuringSelection; // Reset the number of callback accepted\n\n                    coordsMousemove = d3.mouse(currentElement); // Get the actual cursor position\n\n                    endCoords = {x: coordsMousemove[0], y: coordsMousemove[1]};// Get the actual cursor position in our internal format\n\n                    selectedRectsBoundingBox = {min: {x: Infinity, y: Infinity}, max: {x: -1, y: -1}}; //Reset the selection boundaries\n\n                    finalStartCoords = {x: Math.min(startCoords.x, endCoords.x), y: Math.min(startCoords.y, endCoords.y)}; //Calculate the bounding box of the cells touched by the selection\n                    finalEndCoords = {x: Math.max(startCoords.x, endCoords.x), y: Math.max(startCoords.y, endCoords.y)};\n\n                    selectionVertices = utils.getRectangularVertexPoints(finalStartCoords.x, finalStartCoords.y, finalEndCoords.x - finalStartCoords.x, finalEndCoords.y - finalStartCoords.y); // Get Selection vertices\n\n                    // This function finds the subset of cells outside the bounding box\n                    allCells\n                        .filter(function (d) {\n                            var out;\n                            out = d.selected;\n\n                            if (out == true) {\n                                d.selected = false;\n                            }\n\n                            return out;\n                        })\n                        .style(\"fill\", getNormalCellColor); //Replace the color of the cells outside with the default one (useful for cells no longer involved in the selection)\n\n\n                    // This function finds the subset of cells inside the bounding box\n                    selectedCells = allCells\n                        .filter(function (d) {\n                            var isCellSelected, rectVertices, currentRect;\n\n                            currentRect = d3.select(this); // Points the current cell\n\n                            d.optional.rectVertices = d.optional.rectVertices || utils.getRectangularVertexPoints(d.optional.xPosition, d.optional.yPosition, parseFloat(currentRect.attr(\"width\")), parseFloat(currentRect.attr(\"height\"))); // Calculate the cell vertices\n\n                            rectVertices = d.optional.rectVertices;\n\n                            isCellSelected = utils.isThereAnIntersection(selectionVertices, rectVertices);// && d.selected == false; // Find if there is an intersection\n\n                            if (isCellSelected == true) {\n                                /*\n                                 * Calculate the real bounding box based on cells boundaries\n                                 */\n                                selectedRectsBoundingBox.min = {x: Math.min(rectVertices[0].x, selectedRectsBoundingBox.min.x), y: Math.min(rectVertices[2].y, selectedRectsBoundingBox.min.y)};\n                                selectedRectsBoundingBox.max = {x: Math.max(rectVertices[0].x, selectedRectsBoundingBox.max.x), y: Math.max(rectVertices[3].y, selectedRectsBoundingBox.max.y)};\n\n                                d.selected = true;\n                            }\n\n                            return isCellSelected;\n                        })\n                        .style(\"fill\", getSelectedCellColor); //Change the color of the selected cells\n\n\n                }\n            };\n\n            // This function is called when the user starts to select cells\n            startSelection = function() {\n                var mainView;\n\n                mainView = env.mainView;\n\n                mainView.popUp.hide(); // Cancel any popup\n                mainView.showMessage(''); // Cancel any message\n                mainView.selectColumn(false); // Unselect column\n                mainView.selectRow(false); // Unselect row\n\n                env.timeEventsActive = false;\n\n                dragStarted = false;\n\n                document.onselectstart = function () {return false;}; //Cursor hack to avoid browser default dragging cursor\n\n                currentElement = this;\n\n                coords = d3.mouse(currentElement);\n\n                startCoords = {x: coords[0], y: coords[1]};\n                endCoords = {x: coords[0], y: coords[1]};\n\n\n                if (env.lowProfile == true) {\n\n                    d3.select(eventsAttachedOn.plain) //Attach the low profile callback for the mouse gestures\n                        .on(\"mousemove\", updateSelectionLowProfile);\n                }\n\n\n                if (selectionRect){ //Remove any possible old selection rectangles (can happen when the window goes out of focus)\n                    selectionRect.remove();\n                }\n\n                selectionRect = svg //Introduce the selection rectangle\n                    .append(\"rect\")\n                    .attr(\"class\", \"selection-rect\");\n\n                selectionTooltipStart = $('<div class=\"dnsmon-tooltip selection-tooltip-start custom-jquery-ui-tooltip\"></div>');\n                selectionTooltipStop = $('<div class=\"dnsmon-tooltip selection-tooltip-stop custom-jquery-ui-tooltip\"></div>');\n\n                container.dom.$.append(selectionTooltipStart);\n                container.dom.$.append(selectionTooltipStop);\n\n\n                if (env.lowProfile == false){\n\n                    d3.select(eventsAttachedOn.plain) //Attach the high profile callback for the mouse gestures\n                        .on(\"mousemove\", updateSelectionNormal);\n\n                    getNormalCellColor = env.mainView.getCellColor;\n                    getSelectedCellColor = env.mainView.getSelectedCellColor;\n                    updateSelectionTimes = config.sensibilityFactorDuringSelection;\n                }\n\n                body.classed(\"stat-noselect\", true);\n\n                eventsAttachedOn.$\n                    .on(\"mouseup.selection\", stopSelection)\n                    .on(\"keyup.selection\", function(evt){\n                        var key;\n\n                        key = (evt.which) ? evt.which : evt.keyCode;\n                        if (key == 27){ // Esc\n                            removeSelectionWithFeedback(evt);\n                        }\n                    });\n\n            };\n\n            // This function is called when the user stops to select cells\n            stopSelection = function(evt) {\n                var zoomAnimationDuration, zoomAnimationDelay, selectionWithdrawalDuration;\n\n                zoomAnimationDuration = config.zoomAnimationDuration;\n                zoomAnimationDelay = config.zoomAnimationDelay;\n                selectionWithdrawalDuration = config.selectionWithdrawalDuration;\n\n                if (currentElement == null){\n                    return;\n                }\n\n\n                body.classed(\"stat-noselect\", false);\n                eventsAttachedOn.$.off(\"mouseup.selection\").off(\"keyup.selection\");\n                env.mainView.selectColumn(false); // Unselect column\n                env.mainView.selectRow(false); // Unselect row\n                document.onselectstart = function () {return true;}; //Remove the cursor hack\n\n                if (dragStarted == false){\n                    $this._clickEvent(evt);\n\n                    currentElement = null; // Reset it (also if not used in the same function)\n                    if (selectionRect){\n                        selectionRect.remove();\n                    }\n                    return;\n                }\n\n                selectionTooltipStart.remove();\n                selectionTooltipStop.remove();\n\n                if (env.lowProfile == true || selectedRectsBoundingBox.min.x == Infinity) { // Set the approximate box\n                    selectedRectsBoundingBox.min = {x: Math.min(startCoords.x, endCoords.x), y: Math.min(startCoords.y, endCoords.y)};\n                    selectedRectsBoundingBox.max = {x: Math.max(startCoords.x, endCoords.x), y: Math.max(startCoords.y, endCoords.y)};\n                }\n\n                removeRect = function(){ //This function will be pushed as a callback of the redraw function in order to remove the selection rect if the selection is not applicable\n                    selectionRect\n                        .transition()\n                        .duration(zoomAnimationDuration)\n                        .delay(zoomAnimationDelay)\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 0)\n                        .attr(\"width\", chart.width())\n                        .attr(\"height\", chart.height())\n                        .remove();\n\n                    env.timeEventsActive = true;\n                };\n\n                if (!$this._computeSubDomainsAndApply(selectedRectsBoundingBox.min, selectedRectsBoundingBox.max, removeRect)){ //checks if the new subselection is not applicable\n\n                    env.timeEventsActive = true;\n\n                    if (selectionRect){\n                        selectionRect\n                            .transition()\n                            .duration(selectionWithdrawalDuration)\n                            .attr(\"x\", (selectedRectsBoundingBox.max.x - selectedRectsBoundingBox.min.x)/2 + selectedRectsBoundingBox.min.x)\n                            .attr(\"y\", (selectedRectsBoundingBox.max.y - selectedRectsBoundingBox.min.y)/2 + selectedRectsBoundingBox.min.y)\n                            .attr(\"width\", 0)\n                            .attr(\"height\", 0)\n                            .remove();\n                    }\n\n                    if (selectedCells){\n                        selectedCells //Gives a feedback to the user about the inapplicability of the subselection\n                            .style(\"fill\", config.style.noSelectableAreaColor)\n                            .transition()\n                            .duration(selectionWithdrawalDuration)\n                            .style(\"fill\", getNormalCellColor);\n\n                    }\n                }\n\n                currentElement = null; //Reset the selection start point\n                trackerDomElement\n                    .on(\"mousemove\", null);\n            };\n\n            trackerDomElement\n                .on(\"mousedown\", startSelection);\n        };\n\n\n        /**\n         * This function is called when an user clicks on a cell\n         *\n         * @method _clickEvent\n         * @private\n         */\n\n        this._clickEvent = function(evt){\n            var selectedCellData, target;\n\n            env.timeEventsActive = true;\n            target = d3.select(evt.target);\n            selectedCellData = target[0][0][\"__data__\"];\n            if (selectedCellData){\n                env.mainView.controlPanel.showExtraInfoDialog(selectedCellData);\n            }\n\n        };\n\n\n        /**\n         * This function computes the new sub-domain after a selection\n         *\n         * @method _computeSubDomains\n         * @private\n         * @param {Number} finalStartCoords The top-left point of the selection\n         * @param {Number} finalEndCoords The bottom-right point of the selection\n         * @return {Array} The new domain\n         */\n\n        this._computeSubDomains = function(finalStartCoords, finalEndCoords){\n            var newXDomain, newXRange, newYRange, newYDomain;\n\n            newXRange = [finalStartCoords.x, finalEndCoords.x];\n\n            newYRange = [finalStartCoords.y, finalEndCoords.y];\n            newXDomain = env.mainView.xAxis.getSubDomain(newXRange);\n            newYDomain = env.mainView.yAxis.getSubDomain(newYRange);\n\n            return [newXDomain, newYDomain];\n        };\n\n\n        /**\n         * This function computes and applies the new sub-domain after a selection\n         *\n         * @method _computeSubDomainsAndApply\n         * @private\n         * @param {Number} startCoords The top-left point of the selection\n         * @param {Number} endCoords The bottom-right point of the selection\n         * @param {Function} callback A callback function\n         * @return {Boolean} True if the new domain is applied\n         */\n\n        this._computeSubDomainsAndApply = function(startCoords, endCoords, callback){\n            var newXDomain, newYDomain, domains, row, tmpSelectedRows, tmpStartDate, tmpEndDate, newSelection;\n\n            domains = this._computeSubDomains(startCoords, endCoords);\n            newXDomain = domains[0];\n            newYDomain = domains[1];\n\n            if ((newXDomain.length > 0 ) &&\n                (newYDomain.length > 0)) {  // Zoom damper\n\n                tmpStartDate = newXDomain[0];\n                tmpEndDate = newXDomain[1];\n\n                tmpSelectedRows = [];\n\n\n                for (var n=0,length=env.mainView.rows.length; n<length ;n++){\n                    row = env.mainView.rows[n];\n\n                    if (utils.indexOf(row.label, newYDomain) != -1){\n                        tmpSelectedRows.push(row.id);\n                        this.rowsSubSelection = true;\n                    }\n                }\n\n                if (env.mainView.timeController.isSubSelectable(tmpStartDate, tmpEndDate, tmpSelectedRows)){ // Check if the sub-selection is possible\n\n                    utils.log('Subselection possible', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows;\n                    env.params.filterProbes = true;\n                    env.params.startDate = tmpStartDate;\n                    env.params.endDate = tmpEndDate;\n\n                    env.mainView.redraw(callback, this);\n                    return true;\n\n                }else if (env.retrievedAggregationLevel != env.minAggregation && env.retrievedAggregationLevel != 0){ // We still have some aggregation levels in the middle\n\n                    utils.log('Subselection too small, enlarged', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows;\n                    env.params.filterProbes = true;\n                    newSelection = env.mainView.timeController.getZoomableWindow(tmpStartDate, tmpEndDate);\n                    newSelection = env.mainView.timeController.getBoundedWindow(newSelection.start, newSelection.end);\n                    env.params.startDate = newSelection.start;\n                    env.params.endDate = newSelection.end;\n                    env.mainView.showMessage(env.lang.minimumSelectionImposed);\n\n                    env.mainView.redraw(callback, this);\n                    return true;\n\n                }else if (env.mainView.timeController.isSelectionReduced(tmpSelectedRows)){ // Check if the selection is a sub-selection\n\n                    utils.log('Subselection too small, not enlargeable, some rows removed', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows; //Don't change time, only the selected probes\n                    env.params.filterProbes = true;\n                    env.mainView.redraw(callback, this);\n                    env.mainView.showMessage(env.lang.minimumTimeSelectionReached);\n                    return true;\n\n                }else{\n\n                    utils.log('Subselection too small, not enlargeable, rows cannot be removed', env.debugMode);\n                    env.mainView.showMessage(env.lang.tooZoomedMessage); //SubSelection failed\n                    return false;\n                }\n            }\n        }\n\n    };\n\n    return GesturesManager;\n});\n\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/18/13\n * Time: 9:32 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('controller.time',[\n    \"env.utils\",\n    \"controller.gesture-manager\"\n], function(utils, GesturesManager){\n\n    /**\n     * TimeController provides all the functions to manage the time in the tool.\n     *\n     * @class TimeController\n     * @constructor\n     * @module controller\n     */\n\n    var TimeController = function(env){\n        var gesturesManager, config, subMinutes, addMinutes, updateTimer;\n\n        config = env.config;\n        gesturesManager = new GesturesManager(env);\n\n        addMinutes = utils.addMinutes;\n        subMinutes = utils.subMinutes;\n\n        this.init = function(){\n            gesturesManager.on('scrollRight', this.shiftRight, this);\n            gesturesManager.on('scrollLeft', this.shiftLeft, this);\n            gesturesManager.on('scrollUp', this.zoomOut, this);\n            gesturesManager.on('scrollDown', this.zoomIn, this);\n        };\n\n\n        /**\n         * Checks if it is possible to zoom-out with the current selection\n         *\n         * @method _isZoomableOut\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the zoom-out is applicable\n         */\n\n        this._isZoomableOut = function(startDate, endDate){\n            var aggregationLevel;\n            aggregationLevel = this._getAggregationLevel(startDate, endDate);\n            return (aggregationLevel <= env.maxAggregation && startDate >= env.measurementStartTime && endDate <= env.measurementEndTime);\n        };\n\n\n        /**\n         * Checks if it is possible to zoom-in with the current selection\n         *\n         * @method _isZoomableIn\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the zoom-in is applicable\n         */\n\n        this._isZoomableIn = function(startDate, endDate){\n            var aggregationLevel, virtualZoom;\n\n            aggregationLevel = this._getAggregationLevel(startDate, endDate);\n\n            virtualZoom = (aggregationLevel > (env.minAggregation * config.virtualZoomFactor));\n\n            return virtualZoom;\n        };\n\n\n        /**\n         * Checks if it is possible to shift left the time window\n         *\n         * @method _isTranslableLeft\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @return {Boolean} True if the shift is applicable\n         */\n\n        this._isTranslableLeft = function(startDate){\n            return (startDate >= env.measurementStartTime);\n        };\n\n\n        /**\n         * Checks if it is possible to shift right the time window\n         *\n         * @method _isTranslableRight\n         * @private\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the shift is applicable\n         */\n\n        this._isTranslableRight = function(endDate){\n            return (endDate <= env.measurementEndTime);\n        };\n\n\n        this._getAggregationLevel = function(startDate, endDate){\n            var maxNumberOfCells, aggregationSeconds, containerWidth, timeInterval;\n\n            timeInterval = Math.floor((endDate - startDate) / 1000);\n\n            containerWidth = env.container.chart.width();\n\n            maxNumberOfCells = containerWidth / (config.cellsMinWidth + config.xCellsMargin);\n\n            aggregationSeconds = timeInterval / maxNumberOfCells;\n\n            return (aggregationSeconds > 0) ? aggregationSeconds.toFixed(2) : 0;\n        };\n\n\n        /**\n         * Zoom in the chart\n         *\n         * @method zoomIn\n         * @param {Number} zoomLevel A value to be applied at the current zoom\n         */\n\n        this.zoomIn = function(zoomLevel){\n            var startDate, endDate, minutes;\n\n            if (env.timeEventsActive == true) {\n                minutes = ((env.params.endDate - env.params.startDate) / 60000) * config.zoomProportion * Math.abs(zoomLevel);\n\n                startDate = addMinutes(env.params.startDate, minutes);\n                endDate = subMinutes(env.params.endDate, minutes);\n\n                if (this._isZoomableIn(startDate, endDate)) {\n                    env.params.startDate = startDate;\n                    env.params.endDate = endDate;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Zoom out the chart\n         *\n         * @method zoomOut\n         * @param {Number} zoomLevel A value to be applied at the current zoom\n         */\n\n        this.zoomOut = function(zoomLevel){\n            var startDate, endDate, minutes, newTimeWindow;\n\n            if (env.timeEventsActive == true) {\n                minutes = ((env.params.endDate - env.params.startDate) / 60000) * config.zoomProportion * Math.abs(zoomLevel);\n\n                startDate = subMinutes(env.params.startDate, minutes);\n                endDate = addMinutes(env.params.endDate, minutes);\n\n                newTimeWindow = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isZoomableOut(newTimeWindow.start, newTimeWindow.end)) {\n                    env.params.startDate = newTimeWindow.start;\n                    env.params.endDate = newTimeWindow.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Shift left the time window\n         *\n         * @method shiftLeft\n         */\n\n        this.shiftLeft = function(){\n            var startDate, endDate, timeOffset, newBoundaries;\n\n            if (env.timeEventsActive == true) {\n                timeOffset = ((env.params.endDate - env.params.startDate) / 60000) * config.slideProportion;\n\n                startDate = subMinutes(env.params.startDate, timeOffset);\n                endDate = subMinutes(env.params.endDate, timeOffset);\n\n                newBoundaries = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isTranslableLeft(startDate) || env.params.startDate.getTime() != newBoundaries.start.getTime()) {\n                    env.params.startDate = newBoundaries.start;\n                    env.params.endDate = newBoundaries.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Shift right the time window\n         *\n         * @method shiftRight\n         */\n\n        this.shiftRight = function(){\n            var startDate, endDate, timeOffset, newBoundaries;\n\n            if (env.timeEventsActive == true) {\n                timeOffset = ((env.params.endDate - env.params.startDate) / 60000) * config.slideProportion;\n\n                startDate = addMinutes(env.params.startDate, timeOffset);\n                endDate = addMinutes(env.params.endDate, timeOffset);\n\n                newBoundaries = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isTranslableRight(endDate) || env.params.endDate.getTime() != newBoundaries.end.getTime()) {\n                    env.params.startDate = newBoundaries.start;\n                    env.params.endDate = newBoundaries.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Check if the new selection is a sub-selection of the previous one\n         *\n         * @method isSelectionReduced\n         * @param {Array} selectedRows The new list of selected rows\n         * @return {Boolean} True if the new selection is a sub-selection of the previous one\n         */\n\n        this.isSelectionReduced = function(selectedRows){\n            var isSelectionReduced;\n\n            isSelectionReduced = (selectedRows.length < env.params.selectedRows.length || env.params.selectedRows.length == 0);\n\n            return isSelectionReduced;\n        };\n\n\n        /**\n         * Check if the new selection can be applied\n         *\n         * @method isSubSelectable\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @param {Array} selectedRows The new list of selected rows\n         * @return {Boolean} True if the new selection can be applied\n         */\n\n        this.isSubSelectable = function(startDate, endDate, selectedRows){\n            var isZoomableIn, isTimeChangend, isSelectionReduced;\n\n            isZoomableIn = this._isZoomableIn(startDate, endDate);\n\n            isTimeChangend = !((env.params.startDate == startDate) && (env.params.endDate == endDate));\n\n            isSelectionReduced = this.isSelectionReduced(selectedRows);\n\n\n            return isZoomableIn || (!isZoomableIn && !isTimeChangend && isSelectionReduced);\n        };\n\n\n        /**\n         * Check if the new selection can be reduced\n         *\n         * @method isReducible\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the new selection can be reduced\n         */\n\n        this.isReducible = function(startDate, endDate, selectedRows){\n            var isZoomableIn, isTimeChangend, isSelectionReduced;\n\n            isZoomableIn = this._isZoomableIn(startDate, endDate);\n\n            isTimeChangend = !((env.params.startDate == startDate) && (env.params.endDate == endDate));\n\n            isSelectionReduced = this.isSelectionReduced(selectedRows);\n\n\n            return isZoomableIn || (!isZoomableIn && !isTimeChangend && isSelectionReduced);\n        };\n\n\n        /**\n         * Update the status of the controller parameters of the whole widget.\n         *\n         * @method updateStatus\n         */\n\n        this.updateStatus = function(){\n            var startDate, endDate, timeOffset, zoomMinutes, offsetTmp, newTimeWindow;\n\n            startDate = env.params.startDate;\n            endDate = env.params.endDate;\n\n            offsetTmp = ((endDate - startDate) / 60000);\n\n            timeOffset = offsetTmp * config.slideProportion;\n            zoomMinutes = offsetTmp * config.zoomProportion * Math.abs(config.manualZoomFactor);\n\n            env.params.aggregationLevel = this._getAggregationLevel(startDate, endDate);\n\n            env.isZoomableIn = this._isZoomableIn(addMinutes(startDate, zoomMinutes), subMinutes(endDate, zoomMinutes));\n\n            newTimeWindow = this.getBoundedWindow(subMinutes(startDate, zoomMinutes), addMinutes(endDate, zoomMinutes));\n            env.isZoomableOut = this._isZoomableOut(newTimeWindow.start, newTimeWindow.end);\n\n            env.isTranslableLeft = this._isTranslableLeft(subMinutes(startDate, timeOffset));\n            env.isTranslableRight = this._isTranslableRight(addMinutes(endDate, timeOffset));\n        };\n\n\n        /**\n         * Update the chart with the latest available data\n         *\n         * @method getNewData\n         * @param {integer} timeWindow A time window express as seconds if null the current one will be used\n         */\n\n        this.getNewData = function(timeWindow){\n            env.params.startDate = null;\n            env.params.endDate = null;\n            env.params.timeWindow = (timeWindow) ? timeWindow : env.timeWindowSeconds;\n            env.timeEventsActive = false;\n\n            env.mainView.redraw(function(){\n                env.timeEventsActive = true;\n            });\n        };\n\n\n        /**\n         * Given a time interval, this function checks if it is valid otherwise it returns the closer valid selection\n         *\n         * @method getBoundedWindow\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Object} Returns start and end time (two Date Objects)\n         */\n\n        this.getBoundedWindow = function(startDate, endDate){\n            var timeWindowMinutes, newStartDate, newEndDate;\n\n            timeWindowMinutes = (endDate - startDate) / 60000; // Time window in minutes\n\n            if (startDate < env.measurementStartTime && endDate <= env.measurementEndTime){\n\n                newStartDate = env.measurementStartTime;\n                newEndDate = addMinutes(newStartDate, timeWindowMinutes);\n\n            }else if (endDate > env.measurementEndTime && startDate >= env.measurementStartTime){\n\n                newEndDate = env.measurementEndTime;\n                newStartDate = subMinutes(newEndDate, timeWindowMinutes);\n\n            }else{\n\n                newStartDate = startDate;\n                newEndDate = endDate;\n\n            }\n\n            return {start: newStartDate, end: newEndDate};\n        };\n\n\n        /**\n         * Given a time interval, this function checks if it is valid otherwise it returns the closer valid zoomable selection\n         *\n         * @method getZoomableWindow\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Object} Returns start and end time (two Date Objects)\n         */\n\n        this.getZoomableWindow = function(startDate, endDate){\n            var minTimeWindow, newTimeWindow, newStartDate, newEndDate, timeWindowCenter, halfMinTimeWindow;\n\n            minTimeWindow = ((env.minAggregation * config.virtualZoomFactor) * env.maxNumberOfCellsPerRow) * 1000;\n            newTimeWindow = (endDate.getTime() - startDate.getTime());\n            timeWindowCenter = startDate.getTime() + (newTimeWindow / 2);\n            halfMinTimeWindow = (minTimeWindow / 2);\n\n            newStartDate = new Date(timeWindowCenter - halfMinTimeWindow);\n            newEndDate = new Date(timeWindowCenter + halfMinTimeWindow);\n\n            return {start: newStartDate, end: newEndDate};\n        };\n\n\n        /**\n         * This function starts the auto-update feature.\n         *\n         * @method keepUpdated\n         * @param {Boolean} keepUpdate If true the auto-update feature starts\n         */\n\n        this.keepUpdated = function(keepUpdate){\n            var $this, interval;\n\n            $this = this;\n            interval = ((env.debugMode) ? 6000 : (config.updateEverySeconds * 1000));\n\n            if (keepUpdate){\n                this.getNewData(null); // First refresh\n                updateTimer = setInterval($this.getNewData, interval);\n            }else{\n                clearInterval(updateTimer);\n            }\n        };\n\n    };\n\n    return TimeController;\n});\n","\ndefine('view.svg.time-axis',[\n    \"lib.d3\"\n], function(d3){\n\n    /**\n     * SvgTimeAxisView is the view component representing the x-axis in SVG terms.\n     * It provides additional functions to manage interactions with the x elements.\n     *\n     * @class SvgTimeAxisView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgTimeAxisView = function(container, options){\n\n        this.orient = options.orient;\n\n        this.container = container;\n\n        this.range = options.range;\n\n        this.domain = options.domain;\n\n        this.parent = this.container.svg.append('g');\n\n        this.setRange = function(range){\n            this.range = range;\n            this.update();\n        }\n\n        this.setDomain = function(domain){\n            this.domain = domain;\n            this.update();\n        }\n\n        this.render = function(){\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._rotate();\n        };\n\n        this.update = function(){\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._rotate();\n        };\n\n        this._buildFunction = function(){\n            this.scale = d3\n                .time\n                .scale\n                .utc()\n                .domain(this.domain())\n                .range(this.range());\n\n            this.axisFunction = d3.svg\n                .axis()\n                .scale(this.scale)\n                .tickFormat(this.timeFormat)\n                .ticks(20);\n\n            this.axisFunction\n                .orient(this.orient);\n\n            if (this.orient == 'left'){\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.chart.margin.top,\n                    bottom: 0\n                };\n            }else{\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.height() - this.container.chart.margin.bottom,\n                    bottom: this.container.chart.margin.bottom\n                };\n            }\n\n\n            this.parent\n                .attr(\"class\", \"x axis\")\n                .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top+ ')');\n        };\n\n        this._rotate = function(){\n            this.parent.selectAll(\"text\")\n                .style(\"text-anchor\", \"end\")\n                .attr(\"dx\", \"-.8em\")\n                .attr(\"dy\", \".15em\")\n                .attr('transform', 'rotate(-65)');\n        };\n\n\n        this.getSubDomain = function(newRange){\n            return newRange.map(this.scale.invert).sort(d3.ascending);\n        };\n\n        this.timeFormat = d3.time.format.utc.multi([\n            [\".%L\", function(d) { return d.getUTCMilliseconds(); }],\n            [\":%S\", function(d) { return d.getUTCSeconds(); }],\n            [\"%H:%M\", function(d) { return d.getUTCMinutes(); }],\n            [\"%H:%M\", function(d) { return d.getUTCHours(); }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCDay() && d.getUTCDate() != 1; }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCDate() != 1; }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCMonth(); }],\n            [\"%Y\", function() { return true; }]\n        ]);\n\n        this.container.updateList.push({update: this.update, context: this});\n\n    };\n\n    return SvgTimeAxisView;\n});\n\n\n\n","\ndefine('view.svg.ordinal-axis',[\n    \"lib.d3\"\n], function(d3){\n\n    /**\n     * SvgOrdinalAxisView is the view component representing the y-axis in SVG terms.\n     * It provides additional functions to manage interactions with the y elements.\n     *\n     * @class SvgOrdinalAxisView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgOrdinalAxisView = function(container, options){\n        var onMouseOverCallbacks, onMouseOutCallbacks, onClickCallbacks, $this, uniqueGroups, groupsRepresentation,\n            axisTooltip, groupsCount;\n\n        $this = this;\n        onMouseOverCallbacks = [];\n        onMouseOutCallbacks = [];\n        onClickCallbacks = [];\n        groupsRepresentation = {};\n        groupsCount = {};\n\n        this.magnetValues = options.magnetValues;\n\n        this.descriptions = options.descriptions;\n\n        this.groups = options.groups;\n\n        this.displayGroupBlocks = options.displayGroupBlocks;\n\n        this.orient = options.orient;\n\n        this.container = container;\n\n        this.range = options.range;\n\n        this.domain = options.domain;\n\n        this.parent = this.container.svg.append('g');\n\n\n        this._computeGroupsColors = function(){\n            if (this.displayGroupBlocks && this.groups){\n                uniqueGroups = [];\n                $.each(this.groups, function(i, el){\n                    if($.inArray(el, uniqueGroups) === -1) uniqueGroups.push(el);\n                });\n\n\n                this.colors = (uniqueGroups.length <= 10) ? [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"] : [\"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"];\n            }\n        };\n\n\n        this._getColorForGroup = function(group){\n            var colorIndex;\n\n            colorIndex = uniqueGroups.indexOf(group);\n            return this.colors[colorIndex] || this._generateRandomColor();\n        };\n\n\n        this._generateRandomColor = function(){\n            var letters, color;\n\n            letters = '0123456789ABCDEF'.split('');\n            color = '#';\n\n            for (var i = 0; i < 6; i++ ) {\n                color += letters[Math.round(Math.random() * 15)];\n            }\n\n            return color;\n        };\n\n\n        this.setRange = function(range){\n            this.range = range;\n            this.update();\n        };\n\n        this.setDomain = function(domain, magnetValues, descriptions, groups){\n            this.domain = domain;\n\n            if (magnetValues){\n                this.magnetValues = magnetValues;\n            }\n\n            if (descriptions){\n                this.descriptions = descriptions;\n            }\n\n            if (groups){\n                this.groups = groups;\n            }\n\n            this.update();\n        };\n\n        this.render = function(){\n            this._computeGroupsColors();\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._initOnClick();\n            this._initOnMouseOver();\n            this._initOnMouseOut();\n\n            axisTooltip = $('<div></div>')\n                .addClass('dnsmon-tooltip')\n                .addClass('custom-jquery-ui-tooltip').hide();\n            container.dom.$.append(axisTooltip);\n\n            this._initTooltips();\n        };\n\n        this._initTooltips = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mousemove\")\n                .off(\"mouseout\")\n                .on(\"mousemove\", function(evt){\n                    axisTooltip.show();\n                    axisTooltip\n                        .html(d3.select(this).attr('label'))\n                        .css({\n                            \"top\" : evt.clientY + 13,\n                            \"left\" : evt.clientX\n                        });\n                })\n                .on(\"mouseout\", function(evt){\n\n                    axisTooltip.hide();\n                });\n        };\n\n        this.update = function(){\n            this._computeGroupsColors();\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n\n            this._initOnClick();\n            this._initOnMouseOver();\n            this._initOnMouseOut();\n            this._initTooltips();\n        };\n\n\n        this._buildFunction = function(){\n            var scale;\n\n            if (this.orient == 'left'){\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.chart.margin.top,\n                    bottom: 0\n                };\n            }else{\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.height() - this.container.chart.margin.bottom,\n                    bottom: this.container.chart.margin.bottom\n                };\n            }\n\n            scale = d3.scale\n                .ordinal()\n                .domain(this.domain())\n                .rangeRoundBands(this.range(), options.offset, 0);\n\n\n            scale.invert = function(x) {\n                var domainElements, domainElement, inverseElementPosition, lastDomainElement;\n                domainElements = this.domain();\n\n                lastDomainElement = domainElements[0];\n\n                for (var n=0,length=domainElements.length; n<length; n++){\n                    domainElement = domainElements[n];\n\n                    inverseElementPosition = scale(domainElement);\n                    if (inverseElementPosition >= x){\n                        break;\n                    }\n\n                    lastDomainElement = domainElement;\n                }\n                return lastDomainElement;\n            };\n\n            this.scale = scale;\n\n            this.axisFunction = d3.svg\n                .axis()\n                .scale(this.scale);\n\n            if ($this.displayGroupBlocks && $this.groups){\n                for (var group in groupsRepresentation){\n                    if (groupsRepresentation[group]){\n                        groupsRepresentation[group].remove();\n                        groupsRepresentation[group] = null;\n                    }\n                }\n            }\n\n            this.axisFunction\n                .orient(this.orient)\n                .tickSize(0)\n                .tickFormat(function(d){\n                    var thisElement, thisParentNode;\n                    thisElement = d3.select(this);\n                    thisParentNode = d3.select(this.parentNode);\n\n                    if ($this.magnetValues){\n                        thisElement.attr(\"magnet\", $this.magnetValues[d.replace(\" \", \"_\")]);\n                    }\n\n                    if ($this.descriptions){\n                        thisElement.attr(\"label\", $this.descriptions[d.replace(\" \", \"_\")]);\n                    }\n\n\n                    if ($this.displayGroupBlocks && $this.groups){ // Draw group blocks\n                        var group = $this.groups[d.replace(\" \", \"_\")];\n\n                        if (!groupsRepresentation[group]){\n\n                            groupsCount[group] = 1;\n                            groupsRepresentation[group] = thisParentNode\n                                .append(\"svg:rect\")\n                                .attr(\"width\", 4)\n                                .attr(\"y\", -$this.scale.rangeBand()/2)\n                                .attr(\"x\", -container.chart.margin.left + 1)\n                                .attr(\"height\", $this.scale.rangeBand())\n                                .attr(\"stroke-width\", 1)\n                                .attr(\"title\", group)\n                                .attr(\"shape-rendering\", \"crispEdges\")\n                                .style(\"fill\", function(d){\n                                    return $this._getColorForGroup(group);\n                                });\n                        }else{\n                            groupsCount[group] ++;\n                            groupsRepresentation[group]\n                                .attr(\"height\", function(){\n                                    return groupsCount[group] * ($this.scale.rangeBand() + ($this.scale.rangeBand()/2));\n                                });\n\n                        }\n                    }\n\n                    if (options.grid == true){\n                        thisParentNode\n                            .append(\"rect\")\n                            .attr(\"width\", 500)\n                            .attr(\"height\", 1)\n                            .attr(\"y\", $this.scale.rangeBand()/2);\n                    }\n                    return d;\n                });\n\n            this.parent\n                .attr(\"class\", \"y axis\")\n                .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top+ ')');\n        };\n\n        this.getSubDomain = function(selection){\n            var startElement, stopElement, domainElements, domainElement, subDomain, insideSubDomain, start, stop;\n\n            subDomain = [];\n\n            start = selection[0];\n            stop = selection[1];\n\n            startElement = this.scale.invert(start);\n\n            stopElement = this.scale.invert(stop);\n\n            domainElements = this.domain();\n\n            insideSubDomain = false;\n\n            for (var n=0,length=domainElements.length; n<length; n++){\n                domainElement = domainElements[n];\n\n\n                if (domainElement == startElement || insideSubDomain == true){\n                    insideSubDomain = true;\n                    subDomain.push(domainElement);\n                }\n\n                if (domainElement == stopElement){\n                    insideSubDomain = false;\n                    break;\n                }\n            }\n\n            if (subDomain.length == 2 && subDomain[0] == subDomain[1]){\n                subDomain = [subDomain[0]];\n            }\n            return subDomain;\n        };\n\n        this.onClick = function(callback){\n            onClickCallbacks.push(callback);\n        };\n\n        this.onMouseOver = function(callback){\n            onMouseOverCallbacks.push(callback);\n        };\n\n        this.onMouseOut = function(callback){\n            onMouseOutCallbacks.push(callback);\n        };\n\n        this._initOnClick = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"click\")\n                .on(\"click\", function(evt){\n\n                    var callback, context;\n                    for(var n=0,length=onClickCallbacks.length; n<length; n++){\n\n                        callback = onClickCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n\n                });\n        };\n\n\n        this._initOnMouseOver = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mouseover\")\n                .on(\"mouseover\", function(evt){\n                    var callback, context;\n                    for(var n=0,length=onMouseOverCallbacks.length; n<length; n++){\n\n                        callback = onMouseOverCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n                });\n        };\n\n        this._initOnMouseOut = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mouseout\")\n                .on(\"mouseout\", function(evt){\n                    var callback, context;\n                    for(var n=0,length=onMouseOutCallbacks.length; n<length; n++){\n\n                        callback = onMouseOutCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n                });\n        };\n\n\n        this.container.updateList.push({update: this.update, context: this});\n\n    };\n\n    return SvgOrdinalAxisView;\n});\n\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 10:59 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\ndefine('view.main',[\n    \"env.utils\",\n    \"lib.d3\",\n    \"view.template-manager\",\n    \"view.time-overview\",\n    \"view.svg.container\",\n    \"view.pop-up\",\n    \"view.breadcrumbs\",\n    \"view.control-panel\",\n    \"controller.time\",\n    \"view.svg.time-axis\",\n    \"view.svg.ordinal-axis\",\n    \"env.params-manager\"\n], function(utils, d3, TemplateManagerView, TimeOverviewView,\n            SvgContainerView, PopUpView, BreadcrumbsView,\n            ControlPanelView, TimeController, SvgTimeAxisView, SvgOrdinalAxisView, paramsManager){\n\n    /**\n     * MainView is a mandatory view component in charge of initialising and coordinating the whole\n     * representation layer\n     *\n     * @class MainView\n     * @constructor\n     * @module view\n     */\n\n    var MainView = function(env){\n        var representedTimeWindowInSeconds, loadingImageDom, config, $this, oldStartDate, oldEndDate, d3Cells;\n\n        config = env.config;\n        $this = this;\n\n\n        /**\n         * This method initializes the representation layer\n         *\n         * @method init\n         * @input {Object} mainDom A dom element where to place the widget\n         * @input {Object} instanceParam A vector of parameter to initialise the widget\n         */\n\n        this.init = function(mainDom, instanceParam){\n            /*\n             * Create the dom elements needed\n             */\n            this.templateManager = new TemplateManagerView(env);\n            this.templateManager.createDom(mainDom, instanceParam);\n            this.defaultDimensions = {width: instanceParam.width, height: instanceParam.height};\n\n            env.container = new SvgContainerView(\n                this.templateManager.dom.svgContainer,\n                {\n                    left: config.labelWidth,\n                    right: config.chartMargins.right,\n                    top: config.chartMargins.top,\n                    bottom: config.chartMargins.bottom\n                }, {\n                    trackerPadding: config.trackerPadding,\n                    animationDuration: config.zoomAnimationDuration,\n                    maxHeight: env.maxHeight - config.style.controlPanelHeight - config.style.timeOverviewHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2),\n                    minHeight: env.minHeight - config.style.controlPanelHeight - config.style.timeOverviewHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2)\n                });\n\n            /*\n             * Instantiate all components\n             */\n            this.timeController = new TimeController(env);\n            this.popUp = new PopUpView(env);\n            this.controlPanel = new ControlPanelView(env);\n            this.breadcrumbs = new BreadcrumbsView(env);\n\n            this.timeOverview = new TimeOverviewView(\n                {\n                    margins: config.timeOverviewMargins,\n                    verticalLabels: true,\n                    hideIfLessThanSeconds: config.hideTimeOverviewWhenLessThanSeconds,\n                    granularityLevels: config.brusherBucketLevelsMinutes,\n                    width: env.container.chart.width() + config.timeOverviewMargins.left,\n                    height: config.style.timeOverviewHeight\n                },\n\n                {\n                    end: function(startDate, endDate, points){\n                        env.params.startDate = startDate;\n                        env.params.endDate = endDate;\n\n                        if (env.isUpdatedPeriodicallyActive){ // Disable the auto refresh function if active\n                            $this.controlPanel.keepUpdatedActive(false);\n                        }\n\n                        env.mainView.updateXDomain(true);\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    interaction: function(startDate, endDate, points){\n                        env.params.startDate = startDate;\n                        env.params.endDate = endDate;\n                        env.mainView.updateXDomain(false);\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    change: function(startDate, endDate, points){\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    init: function(startDate, endDate, points){\n                        env.container.chart.updateBoundaries(points);\n                    }\n\n                });\n\n            /*\n             * Push elements in the update list\n             */\n            env.container.updateList.push({\n                update: function(){\n                    var newWidth;\n\n                    newWidth = env.container.chart.width();\n\n                    this.templateManager.dom.timeOverviewContainer.$.width(newWidth + config.timeOverviewMargins.left);\n                    this.timeOverview.width(newWidth + config.timeOverviewMargins.left);\n                },\n                context: this});\n\n            env.container.updateList.push({\n                update: this.controlPanel.updateWidth,\n                context: this.controlPanel\n            });\n\n\n            /*\n             * Mouse tracking globally visible (to optimize)\n             */\n            env.mouse = {};\n            env.mainDom.$.on(\"mousemove\", function(evt){\n                var offset = $(this).offset();\n                env.mouse = {x: evt.pageX - offset.left, y: evt.pageY - offset.top};\n            });\n\n            this.loadingImage(true);\n            env.connector.retrieveData(this.firstDraw, this); // Get the data and start the visualization\n        };\n\n\n        /**\n         * This method computes the best height, related to the number of rows, for the chart\n         *\n         * @method _computeWidgetBestHeight\n         * @private\n         * @return {Number} The height\n         */\n\n        this._computeWidgetBestHeight = function(){\n            var height;\n\n            height = (this.defaultDimensions.height - config.style.timeOverviewHeight - config.style.controlPanelHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2) ) || env.container.chart.computeBestHeight(this.rows.length);\n            return height;\n        };\n\n\n        /**\n         * This method draws the chart\n         *\n         * @method firstDraw\n         * @input {Object} A data-set\n         */\n\n        this.firstDraw = function(data){\n\n            utils.log(\"Visualization starts\", env.debugMode);\n            this.rows = data.rows;\n\n            /*\n             * Set dimensions of the elements based on data\n             */\n            env.container.height(this._computeWidgetBestHeight());\n\n            this._initAxis(data);\n            this._render(data);\n            this.timeController.init();\n            this.timeOverview.init(this.templateManager.dom.timeOverviewContainer.plain, [env.measurementStartTime, env.measurementEndTime], [env.params.startDate, env.params.endDate]);\n            this.controlPanel.render(env.mainDom);\n            this.breadcrumbs.init();\n\n            this.timeController.updateStatus();\n            this.controlPanel.update();\n\n            this.setTimeMargins(data.startDate, data.endDate);\n\n            utils.callCallbacks(env.callbacks[\"load\"], paramsManager.fromInternalToExternal(env.params));\n\n            this.loadingImage(false);\n            utils.log(\"Visualization ends\", env.debugMode);\n        };\n\n\n        /**\n         * This method computes and applies the actual color scale\n         *\n         * @method updateColorScales\n         */\n\n        this.updateColorScales = function(){\n            var rangeInSession, showFilter, internalColorScale;\n\n            showFilter = env.showFilter;\n\n            if (!this.normalColorScales){\n                this.normalColorScales = config.normalColorScales;\n                this.selectionColorScales = config.selectionColorScales;\n            }\n\n            this.colorDomainAndRange = utils.computeColorScale(this.normalColorScales[showFilter]);\n            this.selectionColorDomainAndRange = utils.computeColorScale(this.selectionColorScales[showFilter]);\n\n            // Get the actual range from the session\n            rangeInSession = env.session.getValue(\"color_range_\" + showFilter);\n\n            // Apply the range in session\n            if (rangeInSession){\n                rangeInSession = $.map(rangeInSession.split(\"-\"), parseFloat);\n                this._applyRange(rangeInSession);\n            }else{\n                // Save the current range\n                env.session.saveValue(\"color_range_\" + showFilter,  utils.join(this.colorDomainAndRange.valueRange, \"-\"));\n\n            }\n\n            internalColorScale = this._addOffsetToColorScale(this.colorDomainAndRange.valueRange);\n\n            this.color = d3.scale.linear().domain(internalColorScale).range(this.colorDomainAndRange.colorRange);\n            this.selectionColor = d3.scale.linear().domain(internalColorScale).range(this.selectionColorDomainAndRange.colorRange);\n\n            //Compute the breakpoints\n            this.colorDomainBreakPoints = [this.colorDomainAndRange.valueRange[2], this.colorDomainAndRange.valueRange[3]];\n        };\n\n\n        /**\n         * This method introduces some offsets in the ranges in order to preserve the consistency with the legend\n         *\n         * @method _addOffsetToColorScale\n         * @private\n         * @input {Array} colorScale A color scale expressed as an array of values\n         */\n\n        this._addOffsetToColorScale = function(colorScale){\n            return [ colorScale[0], colorScale[1], colorScale[2] + config.colorSeparationOffset, colorScale[3], colorScale[4] ];\n        };\n\n\n        /**\n         * This method applies a new range to the color scales\n         *\n         * @method _applyRange\n         * @private\n         * @input {Array} newValuesRange A color range expressed as an array of values\n         */\n\n        this._applyRange = function(newValuesRange){\n            // Update the normal color range fot this visualization type\n            this.colorDomainAndRange.valueRange = newValuesRange;\n\n            // Update the selection color range fot this visualization type\n            this.selectionColorDomainAndRange.valueRange = newValuesRange;\n        };\n\n\n        /**\n         * This method changes the color of the cells without executing a complete redraw\n         *\n         * @method updateOnlyColors\n         * @input {Array} newValuesRange A color range expressed as an array of values\n         */\n\n        this.updateOnlyColors = function(newValuesRange){\n            var $this, showFilter, internalRange;\n\n            $this = this;\n\n            showFilter = env.showFilter;\n\n            this._applyRange(newValuesRange);\n\n            internalRange = this._addOffsetToColorScale(this.colorDomainAndRange.valueRange);\n\n            // Compute the new color scales\n            this.color = d3.scale.linear().domain(internalRange).range(this.colorDomainAndRange.colorRange);\n            this.selectionColor = d3.scale.linear().domain(internalRange).range(this.selectionColorDomainAndRange.colorRange);\n\n            // Save the current range\n            env.session.saveValue(\"color_range_\" + showFilter,  utils.join(this.colorDomainAndRange.valueRange, \"-\"));\n\n            this.colorDomainBreakPoints = [this.colorDomainAndRange.valueRange[2], this.colorDomainAndRange.valueRange[3]];\n\n\n            d3Cells.style(\"fill\", $this.getCellColor);\n        };\n\n\n        /**\n         * This method initialises the svg axis of the chart\n         *\n         * @method _initAxis\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._initAxis = function(data){\n            var $this, yRowsToDomainAndMagnets;\n\n            $this = this;\n            yRowsToDomainAndMagnets = this.rowsCharacterization(this.rows);\n\n            this.xDomain = function(){\n                return [env.params.startDate, env.params.endDate];\n            };\n\n            this.xRange = function(){\n                return [0, env.container.chart.width()];\n            };\n\n\n            this.yDomain = function(){\n                return yRowsToDomainAndMagnets.domain;\n            };\n\n            this.yRange = function(){\n                return [0, env.container.chart.height()];\n            };\n\n            this.updateColorScales();\n\n            this.xAxis = new SvgTimeAxisView(env.container, {domain: this.xDomain, range: this.xRange, orient: \"bottom\", offset: config.xSeparationOffset});\n            this.yAxis = new SvgOrdinalAxisView(env.container,\n                {\n                    domain: this.yDomain,\n                    range: this.yRange,\n                    orient: \"left\",\n                    offset: config.ySeparationOffset,\n                    magnetValues: yRowsToDomainAndMagnets.magnets,\n                    descriptions: yRowsToDomainAndMagnets.descriptions,\n                    groups: yRowsToDomainAndMagnets.groups,\n                    displayGroupBlocks: env.grouping\n                });\n\n            this.yAxis.onMouseOver(function(evt){\n                $this.selectRow(true, $(this).attr(\"magnet\"));\n            });\n\n            this.yAxis.onMouseOut(function(evt){\n                $this.selectRow(false, $(this).attr(\"magnet\"));\n            });\n\n        };\n\n\n        /**\n         * This method allows to register listeners\n         *\n         * @method on\n         * @input {String} eventType An event type\n         * @input {Function} callback A callback\n         */\n\n        this.on = function(eventType, callback){\n            env.callbacks[eventType].push(callback);\n        };\n\n\n        /**\n         * This method redraws completely the chart\n         *\n         * @method redraw\n         * @input {Function} callback A callback triggered after the redraw\n         * @input {Object} context The context of the callback\n         */\n\n        this.redraw = function(callback, context){\n            var context = context || this;\n\n            this.updateColorScales();\n            this.loadingImage(true);\n\n            this.selectColumn(false);\n            this.selectRow(false);\n\n            env.connector.retrieveData(function(data){\n                this.update(data);\n\n                this.loadingImage(false);\n\n                if (callback != null){\n                    callback.call(context, data);\n                }\n            }, this);\n        };\n\n\n        /**\n         * This method selects a column of the chart\n         *\n         * @method selectColumn\n         * @input {Boolean} selected True if selected\n         * @input {Number} position The x position of the selection\n         * @input {Number} width The width of the selection\n         */\n\n        this.selectColumn = function(selected, position, width){\n            var verticalSelectorPadding, halfVerticalSelectorPadding;\n\n            clearTimeout(this._selectColumnTimer);\n\n            this._selectColumnTimer = setTimeout(function(){\n\n                if (selected && env.timeEventsActive){\n\n                    verticalSelectorPadding = config.style.verticalSelectorPadding;\n                    halfVerticalSelectorPadding = verticalSelectorPadding / 2;\n                    width += verticalSelectorPadding;\n\n                    if (env.retrievedAggregationLevel == 0){ // Center the vertical selector for the native resolution\n                        position += (width / 2); // Center it on an half of the cell\n                        width = 1;\n                    }\n\n                    env.container.chart.chartSelectorVertical\n                        .attr(\"transform\", \"translate(\" + (position - halfVerticalSelectorPadding) + \", \" + 0 + \")\")\n                        .style(\"stroke-width\", ((width == 1) ? \"1px\" : config.style.selectorRectStokeWidth))\n                        .style(\"display\", \"block\")\n                        .attr(\"width\", width);\n                }else{\n                    env.container.svg\n                        .select(\".\" + config.domClasses.chartSelectorVertical)\n                        .style(\"display\", \"none\");\n                }\n\n            }, ((selected) ? config.selectRowColumnTimer : 0));\n\n        };\n\n\n        /**\n         * This method selects a row of the chart starting from a label\n         *\n         * @method _selectLabel\n         * @private\n         * @input {Boolean} selected True if selected\n         * @input {String} rowId The ID of a row\n         */\n\n        this._selectLabel = function(selected, rowId){\n            var $this = this;\n\n            if (env.timeEventsActive){\n                if ($this._previousSelectedYLabel){\n                    $this._previousSelectedYLabel\n                        .css(\"font-size\", config.style.axisLabelsFontSizeDefault)\n                        .css(\"font-weight\", \"normal\");\n                }\n\n                if (selected){\n                    env.mainDom.$.find('text').each(function(){\n                        var label = $(this);\n                        if ((label.attr(\"magnet\") == rowId)){\n\n                            label\n                                .css(\"font-size\", config.style.axisLabelsFontSizeSelected)\n                                .css(\"font-weight\", \"bold\");\n\n                            $this._previousSelectedYLabel = label;\n                        }\n                    });\n                }\n            }\n        };\n\n\n        /**\n         * This method selects a row of the chart\n         *\n         * @method selectRow\n         * @input {Boolean} selected True if selected\n         * @input {String} rowId The ID of a row\n         */\n\n        this.selectRow = function(selected, rowId){\n            var $this, chartSvg;\n\n            $this = this;\n            clearTimeout(this._selectRowTimer);\n\n            this._selectRowTimer = setTimeout(function(){\n                $this._selectLabel(selected, rowId);\n\n                chartSvg = env.container.chart.svg;\n\n                if (selected  && env.timeEventsActive){\n\n                    if (!env.lowProfile){\n\n                        chartSvg\n                            .selectAll(\".cell\")\n                            .each(function(){\n                                var cell, cellClasses;\n                                cell = d3.select(this);\n                                cellClasses = cell.attr(\"class\").split(\" \");\n\n                                if (cellClasses[2] != \"origin\" + rowId){\n\n                                    cell\n                                        .transition()\n                                        .duration(((selected) ? config.hoverTransitionDuration : 0))\n                                        .style({\n                                            \"opacity\": config.cellUnselectedOpacity\n                                        });\n\n                                }else{\n\n                                    cell\n                                        .style({\n                                            \"opacity\": 1,\n                                            \"stroke\": \"#616161\",\n                                            \"stroke-width\": \"1px\"\n                                        });\n\n                                }\n\n                            });\n\n                    } else {\n\n                        if ($this._previusoSelectedRowCells){\n                            $this._previusoSelectedRowCells\n                                .style(\"stroke-width\", \"0px\");\n                        }\n\n                        $this._previusoSelectedRowCells = chartSvg\n                            .selectAll(\".origin\" + rowId)\n                            .style(\"stroke\", \"#616161\")\n                            .style(\"stroke-width\", \"1px\");\n                    }\n\n                }else{\n\n                    if (!env.lowProfile){\n                        chartSvg\n                            .selectAll(\".cell\")\n                            .style(\"opacity\", \"1\")\n                            .style(\"stroke-width\", \"0px\");\n                    }else{\n                        if ($this._previusoSelectedRowCells){\n                            $this._previusoSelectedRowCells\n                                .style(\"stroke-width\", \"0px\");\n                        }\n                    }\n\n                    delete $this._previusoSelectedRowCells;\n                }\n            }, (selected) ? config.selectRowColumnTimer : 0);\n\n        };\n\n\n        /**\n         * This method returns the values of the selected cell related to the current type of visualisation\n         *\n         * @method getCellValue\n         * @input {Object} cellData The d3 cell data object\n         * @return {String} The value\n         */\n\n        this.getCellValue = function(cellData){\n            var value, showFilter, excludeErrors;\n\n            showFilter = env.showFilter;\n            excludeErrors = (env.session.getValue('exclude-errors') == 'true'); // ...SessionManager manages only strings\n\n            switch(showFilter){\n                case 'pls':\n                    value = ((excludeErrors) ? cellData.getNumberCorrectResponses() : cellData.getPacketLoss());\n                    break;\n\n                case 'rtt':\n                    value = cellData.getResponseTime();\n                    break;\n\n                case 'relative-rtt':\n                    value = cellData.getRelativeResponseTime();\n                    break;\n            }\n\n            return value;\n        };\n\n\n        /**\n         * This method shows or hides the throbber image\n         *\n         * @method loadingImage\n         * @input {Boolean} isVisible True if visible\n         */\n\n        this.loadingImage = function(isVisible){\n            var moveLoadingImage, mouseCoords;\n\n            loadingImageDom = this.templateManager.dom.loadingImage.$;\n            mouseCoords = env.mouse;\n            moveLoadingImage = this._moveLoadingImage;\n\n            if (isVisible){\n                loadingImageDom\n                    .css({\n                        \"left\": mouseCoords.x,\n                        \"top\": mouseCoords.y\n                    })\n                    .show();\n                env.document.$.on(\"mousemove\", moveLoadingImage);\n            }else{\n                loadingImageDom.hide();\n                env.document.$.off(\"mousemove\", moveLoadingImage);\n            }\n        };\n\n\n        /**\n         * This method moves the throbber image in order to follow the cursor\n         *\n         * @method _moveLoadingImage\n         * @private\n         * @input {Object} evt A JavaScript event\n         */\n\n        this._moveLoadingImage = function(evt){\n            var mouseCoords;\n\n            mouseCoords = env.mouse;\n\n            loadingImageDom\n                .css({\n                    \"left\": mouseCoords.x,\n                    \"top\": mouseCoords.y\n                });\n        };\n\n\n        /**\n         * This method updates the time domain\n         *\n         * @method updateXDomain\n         * @input {Object} pullData If true a new data-set will be requested\n         */\n\n        this.updateXDomain = function(pullData){\n            var chart, elementIndex, shakeIterations, shakeDuration, shakeTransform, shakingElementsReduction;\n\n            chart = env.container.chart;\n\n            if (env.params.startDate < env.measurementStartTime || env.params.endDate > env.measurementEndTime){ // Check the boundaries\n                return false;\n            }\n\n            this.xAxis.setDomain(function(){\n                return [env.params.startDate, env.params.endDate];\n            });\n\n            this.timeOverview.updateSelection([env.params.startDate, env.params.endDate]);\n\n            if (!chart.hidden){\n                if (env.lowProfile == true || !config.shakeActive) {\n                    chart.dom.$.fadeTo(config.redrawFadeOut, 0.4);\n                    chart.hidden = true;\n                }else{\n\n                    shakeTransform = function(d){\n                        var x, y;\n\n                        x = d.optional.xPosition + Math.floor(Math.random() * config.shakeTuner);\n                        y = d.optional.yPosition + Math.floor(Math.random() * config.shakeTuner);\n\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    elementIndex = 0;\n                    shakeIterations = 5;\n                    shakingElementsReduction = (d3Cells.length < 40) ? 1 : 4;\n                    shakeDuration = config.shakeDuration/shakeIterations;\n\n                    d3Cells\n                        .each(function(d){\n                            var that = this;\n                            if (elementIndex % shakingElementsReduction == 0){\n                                for (var n=5; n>0; n--){\n                                    setTimeout(\n                                        function(){\n                                            d3.select(that)\n                                                .attr(\"transform\", shakeTransform);\n                                        },\n                                            shakeDuration * n\n                                    );\n                                }\n                            }\n                            elementIndex++;\n                        });\n\n                }\n            }\n\n            if (pullData){\n                this.redraw();\n            }\n        };\n\n\n        /**\n         * This support method lists all the steps for a complete redraw\n         *\n         * @method _render\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._render = function(data){\n            this.xAxis.render();\n            this.yAxis.render();\n            this._setLowProfile(data);\n            this._renderCells(data);\n\n            env.history.init();\n        };\n\n\n        /**\n         * This support method draws all the cell\n         *\n         * @method _renderCells\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._renderCells = function(data){\n            var cellsTransform, cellWidth, cellHeight, rect, $this, cellClass, transformSet, orderingFunction, pxToSec,\n                cellTranslateLeft, cellsSVG;\n\n            $this = this;\n\n            cellTranslateLeft = (env.retrievedAggregationLevel == 0) ? (config.cellsMinWidth / 2) : 0;\n\n            representedTimeWindowInSeconds = env.timeWindowSeconds;\n\n            orderingFunction = function(d){\n                return d.row.id + \"-\" + d.group + \"-\" + d.time;\n            };\n\n            cellsTransform = function(d) {\n                d.selected = false;\n                d.optional.xPosition = $this.xAxis.scale(d.time) - cellTranslateLeft;\n                d.optional.xPosition = (d.optional.xPosition < 0) ? 0 : d.optional.xPosition; // OPTIMISATION: don't call Math.max\n                d.optional.yPosition = $this.yAxis.scale(d.row.label);\n                return \"translate(\" + d.optional.xPosition + \",\" + d.optional.yPosition + \")\";\n            };\n\n            cellClass = function(d){\n                return 'cell time_' + d.time.getTime() + ' origin' + d.row.id;\n            };\n\n            pxToSec = (env.container.chart.width() / env.timeWindowSeconds);\n\n            cellsSVG = env.container.chart.svg.selectAll(\"rect.cell\");\n\n            cellWidth = function(cellData){\n                var cellWidth;\n\n                if (cellData.endTime){\n                    cellWidth = (pxToSec * ((cellData.endTime - cellData.time)/1000)) - config.xCellsMargin;\n                }else{\n                    cellWidth = (pxToSec * (env.samplingFrequency/100) * config.nativeCellWidthFrequencyPercentage) - config.xCellsMargin;\n                }\n\n                if (cellWidth < config.cellsMinWidth){\n                    cellWidth = config.cellsMinWidth;\n                }\n                return cellWidth;\n            };\n\n\n            cellHeight = function(d){\n\n                if (window.dynamicHeight == true && d.getPacketLoss() > 66 && d.getPacketLoss() < 99){\n                    var height = $this.yAxis.scale.rangeBand() * config.yCellsMargin;\n                    return Math.min(d.respondingTime, height);\n                }\n                return $this.yAxis.scale.rangeBand() - ($this.yAxis.scale.rangeBand() * config.yCellsMargin);\n            };\n\n\n            this.cellWidth = cellWidth;\n\n            d3Cells = cellsSVG\n                .data(data.cells, orderingFunction);\n\n            d3Cells\n                .exit()\n                .on('click', null)\n                .on('mousemove', null)\n                .on('mouseenter', null)\n                .on('mouseout', null)\n                .remove();\n\n            d3Cells\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", cellClass)\n                .attr(\"rx\", 2)\n                .attr(\"ry\", 2)\n                .attr(\"y\", 0)\n                .style(\"fill\", $this.getCellColor)\n                .style(\"cursor\", config.style.selectionCursor)\n                .on(\"mousemove\", function(d){\n\n                    if ($this._mouseEntered != true){ // To improve performance\n\n                        /*\n                         * The block under (repetition of the mousenter) tries to avoid bugs in some browser that sometimes skip the mouseenter event\n                         */\n                        var xPosition, columnWidth;\n\n                        columnWidth = parseFloat(d3.select(this).attr(\"width\"));\n                        xPosition = d.optional.xPosition;\n\n                        $this.selectRow(true, d.row.id);\n                        $this.selectColumn(true, xPosition, columnWidth);\n                        $this._mouseEntered = true;\n\n                    }else{\n\n                        if (env.timeEventsActive){\n                            var mouseCursor, mouseCursorFormatted;\n                            mouseCursor = d3.mouse(env.container.dom.plain);\n                            mouseCursorFormatted = {x: mouseCursor[0], y: mouseCursor[1]};\n                            $this.popUp.show(d, mouseCursorFormatted);\n                        }\n                    }\n                })\n                .on(\"mouseenter\", function(d){\n\n                    if (env.timeEventsActive){\n                        var xPosition, columnWidth;\n\n                        columnWidth = parseFloat(d3.select(this).attr(\"width\"));\n                        xPosition = d.optional.xPosition;\n\n                        $this.popUp.hide();\n                        $this.selectRow(true, d.row.id);\n                        $this.selectColumn(true, xPosition, columnWidth);\n                        $this._mouseEntered = true;\n                    }\n\n                })\n                .on(\"mouseout\", function(d){\n\n                    if (env.timeEventsActive){\n                        $this.popUp.hide();\n\n                        $this.selectRow(false, d.row.id);\n                        $this.selectColumn(false);\n\n                        $this._mouseEntered = false;\n                    }\n                });\n\n\n            if (this.drawn && env.lowProfile == false && this.previosNumberOfCells > d3Cells[0].length){\n                transformSet = d3Cells\n                    .transition()\n                    .duration(config.zoomAnimationDuration)\n                    .attr(\"width\", cellWidth)\n                    .attr(\"height\", cellHeight)\n                    .attr(\"transform\", cellsTransform)\n                    .style(\"stroke-width\", \"0px\")\n                    .delay(config.zoomAnimationDelay)\n                    .style(\"fill\", $this.getCellColor);\n            }else{\n                d3Cells\n                    .attr(\"width\", cellWidth)\n                    .attr(\"height\", cellHeight)\n                    .attr(\"transform\", cellsTransform)\n                    .style(\"stroke-width\", \"0px\")\n                    .style(\"fill\", $this.getCellColor);\n            }\n\n            this.previosNumberOfCells = d3Cells[0].length;\n\n            this.drawn = true;\n\n            utils.log(\"Number of cell displayed: \" + data.cells.length, env.debugMode);\n\n//            delete this.d3Cells;\n        };\n\n\n        /**\n         * This method computes the color of a given cell\n         *\n         * @method getCellColor\n         * @input {Object} cell A cell object\n         */\n\n        this.getCellColor = function(cell){\n            var value, color;\n\n            value = $this.getCellValue(cell);\n\n            if (value != null){\n                color = $this.color(value);\n            }else{\n                color = config.style.noRttAvailableColor;\n            }\n\n            return color;\n        };\n\n\n        /**\n         * This method computes the color of a given cell when it is selected\n         *\n         * @method getSelectedCellColor\n         * @input {Object} cell A cell object\n         */\n\n        this.getSelectedCellColor = function(cell){\n            var value, color;\n\n            value = $this.getCellValue(cell);\n\n            if (value != null){\n                color = $this.selectionColor(value);\n            }else{\n                color = config.style.noRttAvailableSelectionColor;\n            }\n\n            return color;\n        };\n\n\n        /**\n         * This method updates the chart applying the new data-set\n         *\n         * @method update\n         * @input {Object} data A data-set\n         */\n\n        this.update = function(data){\n            utils.log(\"Visualization update starts\", env.debugMode);\n            var yRowsToDomainAndMagnets;\n\n            this.rows = data.rows;\n\n            env.timeEventsActive = true;\n\n            this.timeController.updateStatus();\n            this.controlPanel.update();\n            env.history.update();\n\n            env.container.height(this._computeWidgetBestHeight());\n\n            this.setTimeMargins(data.startDate, data.endDate);\n\n            yRowsToDomainAndMagnets = this.rowsCharacterization(this.rows);\n\n            this.xAxis.setDomain(function(){\n                return [env.params.startDate, env.params.endDate];\n            });\n\n            this.yAxis.setDomain(\n                function(){\n                    return yRowsToDomainAndMagnets.domain;\n                },\n                yRowsToDomainAndMagnets.magnets,\n                yRowsToDomainAndMagnets.descriptions,\n                yRowsToDomainAndMagnets.groups\n            );\n\n            this._setLowProfile(data);\n            this._renderCells(data);\n\n            if (env.container.chart.hidden == true){\n                env.container.chart.dom.$.fadeTo(config.redrawFadeIn, 1);\n                env.container.chart.hidden = false;\n            }\n\n            this.timeOverview.update([env.measurementStartTime, env.measurementEndTime], [env.params.startDate, env.params.endDate]);\n\n            utils.callCallbacks(env.callbacks[\"change\"], paramsManager.fromInternalToExternal(env.params)); // Call all the \"change\" callbacks\n\n            utils.log(\"Visualization update ends\", env.debugMode);\n        };\n\n\n        /**\n         * This method sets the right profile mode related to the data-set dimension\n         *\n         * @method _setLowProfile\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._setLowProfile = function(data){\n            var lowProfileLimitations;\n            lowProfileLimitations = config.lowProfileLimitations;\n\n            env.lowProfile = (config.forceLowProfile) || (lowProfileLimitations.numerOfCells < data.cells.length);\n        };\n\n\n        /**\n         * This method computes all the information of the y-axis items\n         *\n         * @method rowsCharacterization\n         * @input {Object} data A data-set of rows\n         * @return {Object} A map of characterizations (i.e. domain, magnets, descriptions, groups)\n         */\n\n        this.rowsCharacterization = function(list){\n            var domain, magnets, domainElement, idParsed, descriptions, groups;\n            domain = [];\n            magnets = {};\n            descriptions = {};\n            groups = {};\n\n            list = list.sort(function(a, b) {\n\n                if (a.group != \"\"){\n                    a = a.group + \"-\" + a.internalOrder;\n                    b = b.group + \"-\" + b.internalOrder;\n                }else{\n                    a = parseInt(a.id);\n                    b = parseInt(b.id);\n                }\n                return a < b ? -1 : a > b ? 1 : 0;\n            });\n\n\n            for (var n=0,length=list.length; n<length; n++){\n                domainElement = list[n];\n                if (domainElement.label){\n                    domain.push(domainElement.label);\n                    idParsed = domainElement.label.replace(\" \", \"_\");\n                    magnets[idParsed] = domainElement.id;\n                    descriptions[idParsed] = domainElement.description;\n                    groups[idParsed] = domainElement.group;\n                }\n            }\n            return {\n                domain: domain,\n                magnets: magnets,\n                descriptions: descriptions,\n                groups: groups\n            };\n        };\n\n\n        /**\n         * This method shows a textual message to the user\n         *\n         * @method showMessage\n         * @input {String} text The message\n         */\n\n        this.showMessage = function(text){\n            if (text == ''){\n                this.templateManager.dom.message.$.hide();\n            }else{\n                this.templateManager.dom.message.$.html(text).show().fadeOut(config.messagesFadeOutSeconds);\n            }\n        };\n\n\n        /**\n         * This method applies new margins to the current time window\n         *\n         * @method setTimeMargins\n         * @input {Date} start The start date\n         * @input {Date} end The end date\n         */\n\n        this.setTimeMargins = function(start, end){\n            var timeMarginsContainer, timeMargins, startDateDiv, endDateDiv;\n\n            timeMarginsContainer = this.templateManager.dom.timeMargins.$;\n            timeMargins = timeMarginsContainer.children();\n\n            startDateDiv = timeMargins.first();\n            endDateDiv = timeMargins.last();\n\n            if (oldStartDate != start) {\n\n                startDateDiv.html(env.lang.fromTimeRange + ' ' + utils.dateToStringShort(start));\n                startDateDiv.toggleClass(\"updated\");\n                setTimeout(function () {startDateDiv.toggleClass(\"updated\");}, config.aggregationLegendUpdatedDuration);\n\n            }\n            if (oldEndDate != end){\n\n                if (!env.isUpdatedPeriodicallyActive){\n                    endDateDiv.html(env.lang.toTimeRange + ' ' + utils.dateToStringShort(end) + \" UTC\");\n                }else{\n                    endDateDiv.html(env.lang.lastUpdateAt + ' ' + utils.dateToStringShort(env.lastUpdate) + \" UTC\");\n                }\n                endDateDiv.toggleClass(\"updated\");\n                setTimeout(function(){endDateDiv.toggleClass(\"updated\");}, config.aggregationLegendUpdatedDuration);\n\n            }\n\n            oldStartDate = start;\n            oldEndDate = end;\n        };\n\n    };\n\n    return MainView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:45 AM\n * To change this template use File | Settings | File Templates.\n */\n\n/*\n *\n */\ndefine('model.cell',[\"env.utils\"], function(utils){\n\n    /**\n     * Cell is the model object for a cell.\n     *\n     * @class Cell\n     * @constructor\n     * @module model\n     */\n\n    var Cell = function(row, time){\n\n        this.row = row;\n\n        this.time = time;\n\n        this.id = this.getId();\n\n        this.optional = {};\n    };\n\n\n    /**\n     * This method returns the packet loss of this cell\n     *\n     * @method getPacketLoss\n     * @return {Number} A percentage\n     */\n\n    Cell.prototype.getPacketLoss = function(){\n        return this.loss;\n    };\n\n\n    /**\n     * This method returns the errors of the dns response of this cell\n     *\n     * @method getErrors\n     * @return {Object} A Map of errors\n     */\n\n    Cell.prototype.getErrors = function(){\n        return this.errors;\n    };\n\n\n    /**\n     * This method returns the number of the correct dns responses of this cell\n     *\n     * @method getNumberCorrectResponses\n     * @return {Number} The number of the correct responses\n     */\n\n    Cell.prototype.getNumberCorrectResponses = function(){\n        return this.numberCorrectResponses;\n    };\n\n\n    /**\n     * This method returns the response time of this cell\n     *\n     * @method getResponseTime\n     * @return {Number} An amount of milliseconds\n     */\n\n    Cell.prototype.getResponseTime = function(){\n        return this.respondingTime;\n    };\n\n\n    /**\n     * This method returns the relative response time of this cell.\n     * The relative response time is the percentage of increase from the minimum response time of the cell's row.\n     *\n     * @method getRelativeResponseTime\n     * @return {Number} A percentage\n     */\n\n    Cell.prototype.getRelativeResponseTime = function(){\n        return (this.respondingTime == null) ? null : (((this.respondingTime - this.row.minimumResponseTime) / this.row.minimumResponseTime) * 100);\n    };\n\n\n    /**\n     * This method returns the unique ID of this cell\n     *\n     * @method getId\n     * @return {String} A unique ID\n     */\n\n    Cell.prototype.getId = function(){\n        return \"\" + this.row.id + \"_\" + this.time.getTime();\n    };\n\n\n    /**\n     * This method returns a string describing this cell\n     *\n     * @method toString\n     * @return {String} A string describing this cell\n     */\n\n    Cell.prototype.toString = function(){\n        var string = \"\";\n\n        if (this.respondingTime) {\n            string += \"RTT: \" + this.respondingTime + \"<br>\";\n        }\n\n        string += \"Packet Loss: \" + this.loss;\n\n        return string;\n    };\n\n\n    /**\n     * This method returns an array of strings describing this cell in a multi-line way\n     *\n     * @method toArrayString\n     * @return {Array} An array of strings\n     */\n\n    Cell.prototype.toArrayString = function(){\n        var stringArray, type;\n\n        stringArray = [];\n\n        switch(this.row.___type___){\n\n            case \"server\":\n                type = \"Server: \";\n                break;\n\n            case \"probe\":\n                type = \"Probe: \";\n                break;\n        }\n\n        stringArray.push(type + this.row.label);\n        if (this.endTime){\n            stringArray.push(\"From \" + utils.dateToString(this.time));\n            stringArray.push(\"To \" + utils.dateToString(this.endTime));\n        }else{\n            stringArray.push(\"At \" + utils.dateToString(this.time));\n        }\n\n        stringArray.push('RTT' + ((this.sent == 1) ? '' : ' (median)') + ': ' +((this.respondingTime) ? this.respondingTime + ' ms' : 'NA'));\n        stringArray.push(\"Queries sent: \" + this.sent);\n        stringArray.push(\"Unanswered queries: \" + this.loss + \"%\");\n\n        if (this.errors[\"ServFail\"]) stringArray.push(\"\\\"ServFail\\\" errors: \" + this.errors[\"ServFail\"]);\n        if (this.errors[\"NXDomain\"]) stringArray.push(\"\\\"NXDomain\\\" errors: \" + this.errors[\"NXDomain\"]);\n        if (this.errors[\"Refused\"]) stringArray.push(\"\\\"Refused\\\" errors: \" + this.errors[\"Refused\"]);\n        if (this.errors[\"others\"]) stringArray.push(\"Other errors: \" + this.errors[\"others\"]);\n        return stringArray;\n    };\n\n    return Cell;\n});\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:45 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('model.row',[], function(){\n\n    /**\n     * Row is the model object for a row.\n     *\n     * @class Row\n     * @constructor\n     * @module model\n     */\n\n    var Row = function(id, label){\n        this.id = id;\n        this.label = label;\n        this.cells = [];\n\n        this.group = \"\";\n\n        this.minimumResponseTime = null;\n        this.measurementId = null;\n    };\n\n    return Row;\n});\n","define('connector.atlas.rest',[\n    \"env.utils\"\n], function(utils){\n\n    /**\n     * Connector is in charge of connecting the data-apis and providing a JSON format to the layers over.\n     *\n     * @class Connector\n     * @constructor\n     * @module connector.Atlas\n     */\n\n    var Connector = function(env){\n        var perServerDataUrl, serversDataUrl, nativeDnsResultDataUrl, closesttraceroutesDataUrl, config,\n            commonServer, closestNsidDataUrl, xhrEnvelop;\n\n        config = env.config;\n\n        this.maxNumberOfCells = env.muxNumberOfCells || config.maxNumberOfCells;\n        env.downoadedBytes = 0;\n\n        //weir-dev\n        commonServer = \"https://atlas.ripe.net/dnsmon/api\";\n\n        perServerDataUrl = (typeof DNSMON_PROBES_DATA_API_URL === \"undefined\") ? commonServer + \"/probes\" : DNSMON_PROBES_DATA_API_URL;\n        serversDataUrl = (typeof DNSMON_SERVERS_DATA_API_URL === \"undefined\") ? commonServer + \"/servers\" : DNSMON_SERVERS_DATA_API_URL;\n\n        nativeDnsResultDataUrl = (typeof DNSMON_ATLAS_DATA_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_DATA_API_URL;\n        closesttraceroutesDataUrl = (typeof DNSMON_ATLAS_TRACEROUTE_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_TRACEROUTE_API_URL;\n        closestNsidDataUrl = (typeof DNSMON_ATLAS_NSID_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_NSID_API_URL;\n\n        this.getDataUrl = function(params){\n\n            utils.log('Queried for:', env.debugMode);\n            utils.log(params, env.debugMode);\n            var url = \"\";\n\n            if (params.type == \"zone-servers\"){\n\n                utils.log(\"Data-api type: multi-server-data\", env.debugMode);\n\n                url = serversDataUrl;\n                url += (params.zone) ? \"?group=\" + params.zone : \"\";\n                url += (params.selectedRows != '') ? \"&servers=\" + params.selectedRows : \"\";\n\n                url += (!params.aggregationLevel) ? \"\" : \"&min_aggregation=\" + params.aggregationLevel;\n\n                url += (params.startTime) ? \"&start_time=\" + params.startTime : \"\";\n                url += (params.endTime) ? \"&end_time=\" + params.endTime : \"\";\n\n                url += (!params.startTime && !params.endTime && params.timeWindow) ? \"&default_time_period=\" + params.timeWindow : \"\";\n\n                url += (params.ipVersion) ? \"&ip_version=\" + params.ipVersion : \"\";\n                url += (params.isTcp) ? \"&is_tcp=\" + params.isTcp : \"\";\n\n                url += (env.maxNumberOfCellsPerRow) ? \"&max_samples_per_row=\" + env.maxNumberOfCellsPerRow : \"\";\n                url += (this.maxNumberOfCells) ? \"&max_samples=\" + this.maxNumberOfCells : \"\";\n\n            } else if(params.type == \"server-probes\"){\n\n                utils.log(\"Data-api type: single-server-data\", env.debugMode);\n\n                url = perServerDataUrl\n                    + \"?server=\" + params.server;\n\n                url += (params.zone) ? \"&group=\" + params.zone : \"\";\n\n                url += \"&filter_probes=\" + params.filterProbes;\n\n                url += (!params.aggregationLevel) ? \"\" : \"&min_aggregation=\" + params.aggregationLevel;\n\n                url += (params.selectedRows != \"\") ? \"&probes=\" + params.selectedRows : \"\";\n\n                url += (params.startTime) ? \"&start_time=\" + params.startTime : \"\";\n                url += (params.endTime) ? \"&end_time=\" + params.endTime : \"\";\n\n                url += (!params.startTime && !params.endTime && params.timeWindow) ? \"&default_time_period=\" + params.timeWindow : \"\";\n\n                url += (params.ipVersion) ? \"&ip_version=\" + params.ipVersion : \"\";\n                url += (params.isTcp) ? \"&is_tcp=\" + params.isTcp : \"\";\n\n                url += (env.maxNumberOfCellsPerRow) ? \"&max_samples_per_row=\" + env.maxNumberOfCellsPerRow : \"\";\n                url += (this.maxNumberOfCells) ? \"&max_samples=\" + this.maxNumberOfCells : \"\";\n            }\n\n            //if (env.stats) url += \"&stats=\" +  env.stats;\n            return url;\n        };\n\n        /**\n         * It is strongly dedicated to a particular data-api.\n         * From top to bottom: given some data-api valid parameters, it provides a method to connect to the data-api and query for that parameters.\n         * From bottom to top: provides the raw JSON to the received callback.\n         *\n         * @method retrieveData\n         * @param {Object} params A parameters vector valid for the data-api\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(params, callback, context){\n            var dataUrl, externalParams;\n\n            externalParams = params;\n\n            dataUrl = this.getDataUrl(externalParams);\n\n            utils.log('Ajax call: ' + dataUrl, env.debugMode);\n\n//            for (var prop in xhrEnvelop) {\n//                delete xhrEnvelop[prop];\n//            }\n\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache : false,\n                method : 'get',\n                timeout : config.connectionTimeout,\n\n                success: function(data){\n\n                    utils.log(\"Data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    data.type = params.type;\n                    env.lastDownload = new Date();\n                    callback.call(context, data);\n                },\n\n                error: function(XMLHttpRequest, textStatus, errorThrown) {\n                    var emptyDataSet;\n\n                    utils.log(\"Connection failed\", env.debugMode);\n                    emptyDataSet = {\n                        messages: [\n                            {type: \"connection-fail\", text: errorThrown}\n                        ]\n                    };\n\n                    callback.call(context, emptyDataSet);\n                }\n            });\n\n        };\n\n\n        /**\n         * Get the DNS response from the data-api\n         *\n         * @method getNativeDnsResult\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, nativeDnsResultDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n\n            utils.log('Retrieve native DNS data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"Native DNS data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve native DNS data\", env.debugMode);\n                },\n                complete: cleanXhrEnvelop\n            });\n\n        };\n\n\n        /**\n         * Get the closest traceroutes data from the data-api\n         *\n         * @method getClosestTraceroutes\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, closesttraceroutesDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n            dataUrl = utils.setParam('surrounding', config.tracerouteSurrounding, dataUrl);\n            dataUrl = utils.setParam('render', \"false\", dataUrl);\n\n            utils.log('Retrieve traceroute data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"Traceroute data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve traceroute data\", env.debugMode);\n                },\n\n                complete: cleanXhrEnvelop\n            });\n\n        };\n\n\n        /**\n         * Get the closest hostname.bind data from the data-api\n         *\n         * @method getClosestHostnameBind\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, closestNsidDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n            dataUrl = utils.setParam('surrounding', config.nsidSurrounding, dataUrl);\n            dataUrl = utils.setParam('render', \"false\", dataUrl);\n\n            utils.log('Retrieve traceroute data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"hostname.bind data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve hostname.bind data\", env.debugMode);\n                },\n\n                complete: cleanXhrEnvelop\n            });\n        };\n    };\n\n    return Connector;\n});\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:27 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('connector.atlas.error-handler',[\n    \"env.utils\",\n    \"connector.atlas.rest\"\n], function(utils, Connector){\n\n    /**\n     * ErrorsHandlerConnectorAtlas checks the validity of the JSON input and handle errors raised by the data-api.\n     *\n     * @class ErrorsHandlerConnectorAtlas\n     * @constructor\n     * @module connector.Atlas\n     */\n\n    var ErrorsHandlerConnectorAtlas = function(env){\n        var connector, errorsNomenclature, responsivenessTimer, lastRequestWorkingParams,\n            restoringAttempt, config, firstConnection;\n\n        connector = new Connector(env);\n        config = env.config;\n        firstConnection = true;\n\n        this.globalErrorState = 0; // 0 - No error\n\n        errorsNomenclature = {\n            messages: \"messages\",\n\n            message: {\n                text: \"text\",\n                type: \"type\"\n            }\n        };\n\n        /**\n         * From bottom to top: check the JSON validity and handles the error raised by the data-api.\n         *\n         * @method retrieveData\n         * @param {Object} params A params vector\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(params, callback, context){\n\n            this.globalErrorState = 0; // Reset the global error state\n\n            this._responsivenessCheck();\n\n            connector.retrieveData(params,\n                function(data){\n\n                    clearTimeout(responsivenessTimer);\n\n                    this._handleDataApiErrors(data); // This can change the global error state\n\n                    if (this.globalErrorState < 3){ // retry still active\n\n                        if (this.globalErrorState <= 1){ //If there are no blocking errors\n\n                            if (this._checkDataFormat(data)){ //If the json format is correct\n\n                                lastRequestWorkingParams = utils.lightClone(params); // Store last working request\n                                firstConnection = false;\n\n                                callback.call(context, data);\n\n                            }else{ //If the json format is malformed\n\n                                this._handle(\"error\", env.lang.malformedDataset);\n                                env.mainView.loadingImage(false);\n\n                            }\n\n                        }else { // There is at least one blocking error\n\n                            this.globalErrorState = 0; // Reset it for the next error\n\n                            if (env.isUpdatedPeriodicallyActive == false) { // Network error with auto-update disabled\n                                this._tryToReconnect(params, callback, context);\n                            } else {\n                                env.mainView.showMessage(env.lang.lastQueryFails);\n                            }\n                        }\n                    }\n\n                }, this);\n\n        };\n\n\n        /**\n         * This method tries to reconnect to the server in case of failures and provides a feedback to the user.\n         *\n         * @method _tryToReconnect\n         * @private\n         * @param {Object} params A params vector\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this._tryToReconnect = function(params, callback, context){\n            var $this;\n\n            $this = this;\n            setTimeout(function(){\n\n                env.mainView.showMessage(env.lang.waitingConnection);\n\n                utils.log('Try to reconnect', env.debugMode);\n                $this.retrieveData(params, callback, context);\n\n            }, config.reconnectionInterval);\n\n        };\n\n\n        /**\n         * This method tries to restore the previous working query in case of failures and provides a feedback to the user.\n         *\n         * @method _restorePreviousWorkingQuery\n         * @private\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this._restorePreviousWorkingQuery = function(callback, context){\n            utils.log('Try to restore the previous situation', env.debugMode);\n\n            env.params = lastRequestWorkingParams;\n            connector.retrieveData(lastRequestWorkingParams, callback, context);\n        };\n\n\n        /**\n         * This method dispatches to _handle all the data-api errors\n         *\n         * @method _handleDataApiErrors\n         * @private\n         * @param {Object} data The data blob retrieved from the data-api\n         */\n\n        this._handleDataApiErrors = function(data){\n            var errorsTmp, errorTmp, errorNomenclature;\n            errorsTmp = data[errorsNomenclature.messages];\n\n            if (errorsTmp){\n                errorNomenclature = errorsNomenclature.message;\n\n                for (var n=0,length=errorsTmp.length; n<length && this.globalErrorState <3; n++){\n                    errorTmp = errorsTmp[n];\n                    this._handle(errorTmp[errorNomenclature.type], errorTmp[errorNomenclature.text]);\n                    env.mainView.loadingImage(false);\n                }\n            }\n        };\n\n\n        /**\n         * It provides a different method to handle each error raised from the data-api.\n         *\n         * @method _handle\n         * @private\n         * @param {String} type A string representing the type of the error\n         * @param {String} text A string describing the error\n         */\n\n        this._handle = function(type, text){\n            switch(type){\n\n                case \"connection-fail\":\n                    env.mainView.showMessage(env.lang.connectionFailed);\n                    this._setGlobalErrorState(2); // 2 - Blocking error, retry\n                    break;\n\n                case \"error\":\n                    env.mainView.showMessage(text);\n                    this._setGlobalErrorState(3); // 3 - Blocking error, no retry\n                    break;\n\n                case \"info\":\n                    env.mainView.showMessage(text);\n                    this._setGlobalErrorState(1); // 1 - The show must go on\n                    break;\n            }\n        };\n\n\n        /**\n         * This method sets the global error state.\n         * A global error is a blocking error that can not be handled by other components of the tool\n         *\n         * @method _setGlobalErrorState\n         * @private\n         * @param {Number} errorLevel An integer representing the current error state\n         */\n\n        this._setGlobalErrorState = function(errorLevel){\n            this.globalErrorState = errorLevel;\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains all the mandatory fields for all the possible views.\n         *\n         * @method _checkDataFormat\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkDataFormat = function(data){\n            var requiredFields;\n\n            requiredFields = {};\n\n            requiredFields[\"zone-servers\"] = [\"start_time\", \"end_time\", \"earliest_available\", \"latest_available\", \"aggregation\", \"aggregation_levels\", \"native_available\", \"servers\", \"group\"];\n            requiredFields[\"server-probes\"] = [\"start_time\", \"end_time\", \"earliest_available\", \"latest_available\", \"aggregation\", \"aggregation_levels\", \"native_available\", \"probes\", \"group\", \"server\"];\n\n\n            return this._checkAllFields(data, requiredFields[\"zone-servers\"]) || this._checkAllFields(data, requiredFields[\"server-probes\"]);\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains all the mandatory fields.\n         *\n         * @method _checkAllFields\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkAllFields = function(data, list){\n            for (var n=0,length=list.length; n<length; n++){\n                if (!this._checkField(data, list[n])){\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains a certain mandatory field.\n         *\n         * @method _checkField\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkField = function(data, field){\n            var item, presence, emptiness, result;\n\n            item = data[field];\n\n            presence = (item != null);\n            emptiness = ($.isArray(item)) ? (item.length > 0) : (item !== \"\");\n            result = presence && emptiness;\n\n            if (!result){\n                utils.log(field + ': ' + (presence && emptiness) , env.debugMode);\n            }\n            return result;\n        };\n\n\n        /**\n         * It checks the responsiveness of the data-api to provide a feedback to the user.\n         *\n         * @method _responsivenessCheck\n         * @private\n         */\n\n        this._responsivenessCheck = function(){\n            var $this = this;\n\n            responsivenessTimer = setTimeout(function(){\n                $this._handle.call($this, \"info\", env.lang.serverSlowMessage);\n            }, 7 * 1000);\n        };\n\n\n        /**\n         * Get the human readable version of the DNS response and check errors\n         *\n         * @method getNativeDnsResult\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n        };\n\n\n        /**\n         * Get the closest traceroutes and checks errors\n         *\n         * @method getClosestTraceroutes\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n        };\n\n\n        /**\n         * Get the closest hostname.bind and checks errors\n         *\n         * @method getClosestHostnameBind\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n        };\n\n    };\n\n    return ErrorsHandlerConnectorAtlas;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:38 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine(\n    'connector.atlas.cache',[\n        \"env.utils\",\n        \"connector.atlas.error-handler\"\n    ],\n    function(utils, Connector){\n\n        /**\n         * CacheConnectorAtlas is the cache level dedicated to the atlas data-api for DNSMON.\n         * It provides a bottom-up incremental cache and top-down decremental queries.\n         *\n         * @class CacheConnectorAtlas\n         * @constructor\n         * @module connector.Atlas\n         */\n\n        var CacheConnectorAtlas = function(env){\n            var connector, dataNomenclatureMapping, minimumResultDate, maximumResultDate;\n\n            connector = new Connector(env);\n\n            env.totalSavedBytes = 0;\n            env.stats = \"\";\n\n            // The map declaring the low-level data nomenclature\n            dataNomenclatureMapping = {\n                startTime: \"start_time\",\n                endTime: \"end_time\",\n                aggregationLevel: \"aggregation\",\n                probesList: \"probes\",\n                serversList: \"servers\",\n                aggregationLevels: \"aggregation_levels\",\n                measurementStartTime: \"earliest_available\",\n                measurementEndTime: \"latest_available\",\n                aggregationLabel: \"aggregation_label\",\n                nativeAvailable: \"native_available\",\n\n                server: {\n                    id: \"id\",\n                    label: \"label\",\n                    group: \"grouping\",\n                    resultsList: \"results\",\n                    ipVersion: \"ip_version\",\n                    description: \"description\"\n                },\n\n                probe: {\n                    id: \"id\",\n                    label: \"label\",\n                    group: \"grouping\",\n                    resultsList: \"results\",\n                    description: \"description\"\n                },\n\n                result: {\n                    respondingTime: \"rtt50\",\n                    packetSent: \"queries\",\n                    packetReceived: \"replies\",\n                    time: \"time\"\n                }\n            };\n\n\n            // Initialise the cache\n            this.cache = {\n                data: null,\n                params: null,\n                aggregationLevel: null\n            };\n\n\n            /**\n             * It is strongly related to a particular JSON format.\n             * From top to bottom: tries to reduce the amount of data requested based on the available data in cache.\n             * From bottom to top: enrich the retrieved subset of data with the data already in cache.\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n                if (env.localCacheActive && this.cache.data){ // Is the cache active and available\n\n                    if (this._isCacheFilteredServerSide(params)) { // The server side is computing the diff (e.g. because the client doesn't know the time window that will be returned)\n\n                        //this._composeQueryOnUpdate(params, callback, context); // To be tested\n\n                    }else if (this._isCacheEnough(params)){ // The whole query is in cache\n\n                        utils.log(\"Query in cache\", env.debugMode);\n                        utils.log(params);\n                        this._composeQueryOnCache(params, callback, context);\n\n                    }else if (this._isCachePartiallyValid(params)){ // A portion of the query is in the cache\n\n                        utils.log(\"Query partially in cache\", env.debugMode);\n                        this._retrieveQuerySubset(params, callback, context);\n\n                    }else{\n\n                        this._retrieveWithoutCache(params, callback, context); // The cache is active and available but not related to the actual query\n\n                    }\n\n                }else{\n\n                    this._retrieveWithoutCache(params, callback, context); // The cache is not active or empty\n\n                }\n\n            };\n\n\n            /**\n             * This method retrieves from the data-api a portion of the query.\n             * It describes the available data in cache and the data-api provides the remaining parts\n             *\n             * @method _composeQueryOnUpdate\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._composeQueryOnUpdate = function(params, callback, context){\n                var totalBytes, savedBytes;\n\n                connector.retrieveData(params, function(data){\n\n                    // Set the time boundaries retrieved from the server\n                    params.startTime = data[dataNomenclatureMapping.startTime];\n                    params.endTime = data[dataNomenclatureMapping.endTime];\n\n                    data = this._mergeData(params, this.cache.data, data);\n                    data = this._filterData(params, data);\n\n                    if (env.debugMode){\n                        totalBytes = utils.objectSize(data);\n                        savedBytes = totalBytes - env.lastDownloadBytes;\n                        env.totalSavedBytes += savedBytes;\n                        env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                        utils.log('Retrieved bytes: ' + env.lastDownloadBytes + ' Total bytes: ' + totalBytes + ' Saved bytes: ' +  savedBytes, env.debugMode);\n                        utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                    }\n\n                    this._updateCache(params, data);\n\n                    callback.call(context, data);\n\n                }, this);\n            };\n\n\n            /**\n             * This method checks if the data-api should filter the data or not.\n             *\n             * @method _isCacheFilteredServerSide\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the data-api should filter the data\n             */\n\n            this._isCacheFilteredServerSide = function(params){\n                return (\n                    params.startTime == null &&\n                    params.endTime == null &&\n                    params.timeWindow != null &&\n                    params.cutFrom != null\n                    );\n            };\n\n\n            /**\n             * This method answers to the request by filtering the data in cache.\n             * It usable only when the whole query is in cache.\n             *\n             * @method _composeQueryOnCache\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the composed data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._composeQueryOnCache = function(params, callback, context){\n                var filteredCacheData, totalBytes, savedBytes;\n\n                filteredCacheData = this._filterData(params, this.cache.data);\n                this._updateCache(params, filteredCacheData);\n\n                if (env.debugMode){\n                    totalBytes = utils.objectSize(filteredCacheData);\n                    savedBytes = totalBytes;\n                    env.totalSavedBytes += savedBytes;\n                    env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                    utils.log('Retrieved bytes: 0 Total bytes: ' + totalBytes + ' Saved bytes: ' +  savedBytes, env.debugMode);\n                    utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                }\n\n                callback.call(context, this.cache.data);\n            };\n\n\n            /**\n             * This method answers to the request by composing the answer from the cache and the server.\n             * It computes the data not available in cache and asks to the server for it.\n             *\n             * @method _retrieveQuerySubset\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the composed data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._retrieveQuerySubset = function(params, callback, context){\n                var subsetParams, totalBytes, savedBytes, newAggregationLevels, oldAggregationLevels;\n\n                subsetParams = this._getParamsSubset(this.cache.params, params);\n\n                subsetParams.aggregationLevel = env.aggregationLevel; // Force the aggregation level\n\n                connector.retrieveData(subsetParams, function(data){\n\n                    oldAggregationLevels = this.cache.data[dataNomenclatureMapping.aggregationLevels];\n                    newAggregationLevels = data[dataNomenclatureMapping.aggregationLevels];\n\n                    if (newAggregationLevels.length != oldAggregationLevels.length || !utils.containsAll(newAggregationLevels, oldAggregationLevels)) { // If the aggregations list changes\n\n                        this._retrieveWithoutCache(params, callback, context);\n\n                    }else{\n\n                        data = this._mergeData(params, this.cache.data, data);\n                        data = this._filterData(params, data);\n\n                        if (env.debugMode) {\n                            totalBytes = utils.objectSize(data);\n                            savedBytes = totalBytes - env.lastDownloadBytes;\n                            env.totalSavedBytes += savedBytes;\n                            env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                            utils.log('Retrieved bytes: ' + env.lastDownloadBytes + ' Total bytes: ' + totalBytes + ' Saved bytes: ' + savedBytes, env.debugMode);\n                            utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                        }\n\n                        this._updateCache(params, data);\n\n                        callback.call(context, data);\n                    }\n\n                }, this);\n\n            };\n\n\n            /**\n             * This method computes the difference between two parameters vector\n             *\n             * @method _getParamsSubset\n             * @private\n             * @param {Object} oldParams The old parameters vector\n             * @param {Object} newParams The new parameters vector\n             * @return {Object} The resulting parameters vector\n             */\n\n            this._getParamsSubset = function(oldParams, newParams){\n                var params, timeDiff;\n\n                params = utils.lightClone(newParams); // Clone the parameters vector\n\n                //params.selectedRows = this._getRowsDiff(oldParams.selectedRows, newParams.selectedRows); // Get the new rows not included in the previous query\n\n                timeDiff = this._getTimeDiff(this.cache.data[dataNomenclatureMapping.startTime], this.cache.data[dataNomenclatureMapping.endTime], newParams.startTime, newParams.endTime); // Get the diff in time boundaries\n\n                params.startTime = timeDiff.startTime; // Set the new time boundaries\n                params.endTime = timeDiff.endTime;\n\n                return params;\n            };\n\n\n            /**\n             * This method computes the difference between two time windows\n             *\n             * @method _getTimeDiff\n             * @private\n             * @param {Date} oldStartTime The old start date\n             * @param {Date} oldEndTime The old end date\n             * @param {Date} newStartTime The new start date\n             * @param {Date} newEndTime The new end date\n             * @return {Object} The computed time window (composed of startTime and endTime)\n             */\n\n            this._getTimeDiff = function(oldStartTime, oldEndTime, newStartTime, newEndTime){\n                var startTime, endTime, consistencyOffset;\n\n                consistencyOffset = env.aggregationLevel || env.samplingFrequency;\n\n                if (newStartTime < oldStartTime){\n\n                    startTime = newStartTime;\n                    endTime = oldStartTime + consistencyOffset;\n\n                }else if (newEndTime > oldEndTime){\n\n                    startTime = oldEndTime - consistencyOffset;\n                    endTime = newEndTime;\n\n                }\n\n                return {startTime: startTime, endTime: endTime};\n            };\n\n\n            /**\n             * This method checks if the actual cache is partially valid or not.\n             *\n             * @method _isCachePartiallyValid\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the actual cache is partially valid\n             */\n\n            this._isCachePartiallyValid = function(params){\n                var oldParams, oldRows, newRows;\n\n                oldParams = this.cache.params;\n\n                oldRows = utils.split(oldParams.selectedRows, ',', true);\n                newRows = utils.split(params.selectedRows, ',', true);\n\n                return (\n                    params.startTime != null &&\n                    params.endTime != null &&\n                    this._isSameTarget(params) && // Same target\n                    this.cache.aggregationLevel == env.aggregationLevel && // Check the aggregation level\n\n                    // Same rows\n                    oldRows.length == newRows.length &&\n                    this._containsRows(oldRows, newRows) &&\n\n                    (\n                        (params.startTime >= oldParams.startTime  && params.startTime <= oldParams.endTime) || // Different time but partially valid\n                        (params.endTime >= oldParams.startTime  && params.endTime <= oldParams.endTime)\n                        )\n                    );\n            };\n\n\n            /**\n             * This method updates the cache\n             *\n             * @method _updateCache\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} data The blob of data\n             */\n\n            this._updateCache = function(params, data){\n\n\n                this.cache = {\n                    data: data,\n                    params: utils.lightClone(params),\n                    aggregationLevel: env.aggregationLevel\n                };\n\n            };\n\n\n            /**\n             * This method checks if a new row selection contains the old rows selected.\n             *\n             * @method _containsRows\n             * @private\n             * @param {Object} oldRowsSelection The old vector of selected rows\n             * @param {Object} newRowsSelection The new vector of selected rows\n             * @return {Boolean} True if the new row selection contains the old rows selected\n             */\n\n            this._containsRows = function(oldRowsSelection, newRowsSelection){\n\n                return oldRowsSelection.length == 0 || (newRowsSelection.length != 0 && newRowsSelection.length <= oldRowsSelection.length && utils.containsAll(oldRowsSelection, newRowsSelection));\n\n            };\n\n\n            /**\n             * This method rely on the layers below to answer the query\n             *\n             * @method _retrieveWithoutCache\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._retrieveWithoutCache = function(params, callback, context){\n\n                connector.retrieveData(params, function(data){\n\n                    this._updateCache(params, data);\n\n                    utils.log('Retrieved bytes: ' + env.lastDownloadBytes, env.debugMode);\n                    callback.call(context, data);\n                }, this);\n\n            };\n\n\n            /**\n             * This method checks if the actual cache is completely valid or not.\n             *\n             * @method _isCacheEnough\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the actual cache is completely valid\n             */\n\n            this._isCacheEnough = function(params){\n                var oldParams;\n\n                oldParams = this.cache.params;\n\n                return (\n                    params.startTime != null &&\n                    params.endTime != null &&\n                    this._isSameTarget(params) &&\n                    this.cache.aggregationLevel == env.aggregationLevel &&\n                    this._containsRows(utils.split(oldParams.selectedRows, ',', true), utils.split(params.selectedRows, ',', true)) &&\n                    oldParams.startTime <= params.startTime &&\n                    oldParams.endTime >= params.endTime\n                    );\n            };\n\n\n            /**\n             * This method filters the data in order to satisfy the actual parameters\n             *\n             * @method _filterData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} data The blob of data\n             * @return {Object} The filtered data\n             */\n\n            this._filterData = function(params, data){\n                minimumResultDate = null;\n                maximumResultDate = null;\n\n                this._filterRows(params, data);\n\n                // Updates the composed JSON with the actual start/end dates\n\n                if (env.aggregationLevel != 0) {\n                    data[dataNomenclatureMapping.startTime] = minimumResultDate; //( minimumResultDate >= params.startTime) ? params.startTime : minimumResultDate;\n                    data[dataNomenclatureMapping.endTime] = maximumResultDate; // ( maximumResultDate + (env.aggregationLevel)  <= params.endTime) ? params.endTime : maximumResultDate;\n                }else{\n                    data[dataNomenclatureMapping.startTime] = params.startTime;\n                    data[dataNomenclatureMapping.endTime] = params.endTime;\n                }\n\n                return data;\n            };\n\n\n            /**\n             * This method filters the rows on a blob of data in order to satisfy a vector of parameters\n             *\n             * @method _filterRows\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} data The blob of data\n             */\n\n            this._filterRows = function(params, data){\n                var rows, newResults, row, rowId, selectedRows, rowsListNomenclature;\n\n                newResults = [];\n                selectedRows = utils.split(params.selectedRows, ',', true);\n                rowsListNomenclature = this._getRowsListNomenclature(params);\n                rows = data[rowsListNomenclature];\n\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n\n                    rowId = '' + row[this._getRowNomenclature(params).id]; // Is a string\n\n                    if (selectedRows.length == 0 || utils.indexOf(rowId, selectedRows) != -1){\n                        newResults.push(row);\n\n                        this._filterResults(params, row);\n                    } else {\n                        // Force GC\n//                        delete data[rowsListNomenclature][n];\n                    }\n                }\n\n                data[rowsListNomenclature] = newResults; //Replace the filtered data\n            };\n\n\n            /**\n             * This method filters the results in a row in order to satisfy a vector of parameters\n             *\n             * @method _filterRows\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} row A row (a group of results)\n             */\n\n            this._filterResults = function(params, row){\n                var result, newResults, results, rowNomenclature, maxResultTime;\n\n                newResults = [];\n                rowNomenclature = this._getRowNomenclature(params);\n                results = row[rowNomenclature.resultsList];\n\n                for (var n=0,length=results.length; n<length; n++){\n                    result = results[n];\n\n                    // Get the new time boundaries\n                    if (result.time < params.endTime && result.time >= params.startTime){\n                        maxResultTime = result.time + env.aggregationLevel;\n                        minimumResultDate = (result.time < minimumResultDate || !minimumResultDate) ? result.time : minimumResultDate;\n                        maximumResultDate = (maxResultTime > maximumResultDate || !maximumResultDate) ? maxResultTime : maximumResultDate;\n                        newResults.push(result);\n                    } else {\n                        // Force GC\n//                        delete row[rowNomenclature.resultsList][n];\n                    }\n\n                }\n\n                row[rowNomenclature.resultsList] = newResults; //Replace the filtered data\n            };\n\n\n            /**\n             * This method checks if the provided parameters are referring to the same target/measurement/contest.\n             *\n             * @method _isSameTarget\n             * @private\n             * @param {Object} newParams The new parameters vector\n             * @return {Boolean} True if is the same target/measurement/contest\n             */\n\n            this._isSameTarget = function(newParams){\n                var oldParams, importantParams, paramTmp;\n\n                oldParams = this.cache.params;\n                importantParams = [\"root\", \"group\", \"type\", \"ipVersion\", \"isTcp\"];\n\n\n                for (var n=0,length=importantParams.length; n<length; n++){\n                    paramTmp = importantParams[n];\n\n                    if (oldParams[paramTmp] != newParams[paramTmp]){\n                        return false;\n                    }\n                }\n\n                return true;\n            };\n\n\n            /**\n             * This method merges two blob of data\n             *\n             * @method _mergeData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} oldData The old blob of data\n             * @param {Object} newData The new blob of data\n             * @return {Object} The merged blob of data\n             */\n\n            this._mergeData = function(params, oldData, newData){\n\n                return this._mergeRows(params, oldData, newData);\n\n            };\n\n\n            /**\n             * This support method merges the rows of two blob of data\n             *\n             * @method _mergeData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} oldData The old blob of data\n             * @param {Object} newData The new blob of data\n             * @return {Object} The merged blob of data\n             */\n\n            this._mergeRows = function(params, oldData, newData){\n                var dataRows, oldDataRows, row, rowId, oldRow, results, newResults, resultsListNomenclature, rowsListNomenclature;\n\n                rowsListNomenclature = this._getRowsListNomenclature(params);\n                dataRows = newData[rowsListNomenclature];\n                oldDataRows = oldData[rowsListNomenclature];\n\n\n                for (var n=0,length=dataRows.length; n<length; n++){\n                    row = dataRows[n];\n\n                    rowId = '' + row[this._getRowNomenclature(params).id];\n                    oldRow = this._getRow(params, oldData, rowId);\n\n                    if (!oldRow){\n\n                        oldDataRows.push(row);\n\n                    }else{\n                        resultsListNomenclature = this._getRowNomenclature(params).resultsList;\n                        results = oldRow[resultsListNomenclature];\n                        newResults = row[resultsListNomenclature];\n                        oldRow[resultsListNomenclature]  = results.concat(newResults);\n\n                    }\n\n                }\n\n                oldData[dataNomenclatureMapping.startTime] = Math.min(oldData[dataNomenclatureMapping.startTime], newData[dataNomenclatureMapping.startTime]);\n                oldData[dataNomenclatureMapping.endTime] = Math.max(oldData[dataNomenclatureMapping.endTime], newData[dataNomenclatureMapping.endTime]);\n\n                return oldData;\n            };\n\n\n            /**\n             * This method returns the nomenclature of a group for the given query type\n             *\n             * @method _getRowNomenclature\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {String} The nomenclature\n             */\n\n            this._getRowNomenclature = function(params){\n\n                switch (params.type){\n                    case \"zone-servers\":\n                        return dataNomenclatureMapping.server;\n                        break;\n\n                    case \"server-probes\":\n                        return dataNomenclatureMapping.probe;\n                        break;\n                }\n            };\n\n\n            /**\n             * This method returns the nomenclature of a list of groups for the given query type\n             *\n             * @method _getRowsListNomenclature\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {String} The nomenclature\n             */\n\n            this._getRowsListNomenclature = function(params){\n\n                switch (params.type){\n                    case \"zone-servers\":\n                        return dataNomenclatureMapping.serversList;\n                        break;\n\n                    case \"server-probes\":\n                        return dataNomenclatureMapping.probesList;\n                        break;\n                }\n            };\n\n\n            /**\n             * This method retrieves a row from a blob of data\n             *\n             * @method _getRow\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} data A blob of data\n             * @param {String} id The if of a row\n             * @return {Object} A row or null\n             */\n\n            this._getRow = function(params, data, id){\n                var rows, row, rowId;\n\n                rows = data[this._getRowsListNomenclature(params)];\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n                    rowId = '' + row[this._getRowNomenclature(params).id];\n\n                    if (rowId == id){\n                        return row;\n                    }\n                }\n\n                return null;\n            };\n\n\n            /**\n             * Get the human readable version of the DNS response and use cache\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest traceroutes and use cache\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return CacheConnectorAtlas;\n    });\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:35 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\n\n// Coupled with the model layer\n\ndefine(\n    'connector.atlas.isolation-level',[\n        \"env.utils\",\n        \"env.params-manager\",\n        \"model.cell\",\n        \"model.row\",\n        \"connector.atlas.cache\",\n        \"lib.atlas-traceroute-printer\"\n    ],\n    function(utils, paramsManager, Cell, Row, Connector){\n\n        /**\n         * IsolationLevelConnectorAtlas has a fundamental role providing isolation between the internal input format\n         * and the external input format. It allows to block the propagation of changes affecting the JSON format\n         * provided by the data-api. In addition it is a transposition level between a format convenient for the\n         * data-api (e.g. light data data format) and a format convenient for the tool (e.g. less computation format).\n         *\n         * @class IsolationLevelConnectorAtlas\n         * @constructor\n         * @module connector.Atlas\n         */\n\n        var IsolationLevelConnectorAtlas = function(env) {\n\n            var connector, dataNomenclatureMapping, maxUsedDate, minUsedDate, crowdestRow, config, originalTime, dataPool;\n\n            connector = new Connector(env);\n            config = env.config;\n\n            dataPool = {\n                cells: {},\n                rows: {}\n            };\n\n            dataNomenclatureMapping = {\n                startTimestamp: \"start_time\",\n                endTimestamp: \"end_time\",\n                aggregationLevel: \"aggregation\",\n                probesList: \"probes\",\n                serversList: \"servers\",\n                isOngoing: \"active\",\n\n                aggregationLevels: \"aggregation_levels\",\n                measurementStartTime: \"earliest_available\",\n                measurementEndTime: \"latest_available\",\n                aggregationLabel: \"aggregation_label\",\n                nativeAvailable: \"native_available\",\n\n                singleZone: \"group\",\n                singleServer: \"server\",\n\n                zone: {\n                    id: \"id\",\n                    label: \"label\",\n                    description: \"description\",\n                    isOngoing: \"active\"\n                },\n\n                server: {\n                    id: \"id\",\n                    hostname: \"hostname\",\n                    resultsList: \"results\",\n                    ipVersion: \"ip_version\",\n                    ipAddress: \"ip_address\",\n                    label: \"label\",\n                    description: \"description\",\n                    urlsMap: \"atlas_measurements\"\n                },\n\n                urlItem: {\n                    typeId: \"type\",\n                    label: \"type_label\",\n                    overviewUrl: \"overview_url\",\n                    dataUrl: \"result_url\",\n                    measurementId: \"msm_id\",\n                    currentDatasource: \"data_source\",\n                    samplingFrequency: \"interval\"\n                },\n\n                probe: {\n                    id: \"id\",\n                    country: \"country\",\n                    label: \"label\",\n                    description: \"description\",\n                    hostname: \"hostname\",\n                    resultsList: \"results\"\n                },\n\n                result: {\n                    respondingTime: \"rtt50\",\n                    packetSent: \"queries\",\n                    packetReceived: \"replies\",\n                    time: \"time\",\n                    endTime: \"end_time\",\n                    errors: \"errors\"\n                },\n\n                managedRcodes: [\"ServFail\", \"NXDomain\", \"Refused\"]\n            };\n\n\n            /**\n             * It is strongly related to a particular JSON format.\n             * From top to bottom: uses paramsManager to translate the internal format of the parameters in the format valid outside.\n             * From bottom to top: translates the external input data in the internal format.\n             *\n             * @method retrieveData\n             * @param {Object} params A params vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function (params, callback, context) {\n\n                params = this._parseParams(params); //Translates the internal format of the parameters in the format valid outside\n\n                //Just an indirection for now\n                connector.retrieveData(params, function (data) {\n                    this._freeMemoryOnPool();\n                    var wrappedData = this._parseData(data);\n\n//                    // Force garbage collector\n//                    for (var prop in data){\n//                        delete data[prop];\n//                    }\n//                    data = null;\n\n                    callback.call(context, wrappedData); // Back to the normal data flow\n\n                }, this); // Data callback context\n            };\n\n\n            /**\n             * This method translates parameters from the internal to the external format\n             *\n             * @method _parseParams\n             * @param {Object} params A params vector\n             * @return {Object} A params vector in the internal format\n             */\n            this._parseParams = function (params) {\n                return paramsManager.fromInternalToExternal(params);\n            };\n\n\n            /**\n             * This method translates a server from the external to the internal format\n             *\n             * @method _parseSingleServer\n             * @param {Object} server A server described in the external format\n             * @return {Object} A server described in the internal format\n             */\n\n            this._parseSingleServer = function (server) {\n                var serverNomenclature, serverObj;\n\n                serverNomenclature = dataNomenclatureMapping.server;\n                serverObj = {\n                    id: paramsManager.convertRemoteToLocalId(server[serverNomenclature.id]),\n                    label: server[serverNomenclature.label] || server[serverNomenclature.hostname] + ' ' + ((server[serverNomenclature.ipVersion] == 4) ? 'IPv4' : 'IPv6'),\n                    description: server[serverNomenclature.description],\n                    urlsMap: this._generateJsonUrls(server[serverNomenclature.urlsMap])\n                };\n\n                return serverObj;\n            };\n\n\n            /**\n             * This method translates a zone from the external to the internal format\n             *\n             * @method _parseSingleServer\n             * @param {Object} zone A zone described in the external format\n             * @return {Object} A zone described in the internal format\n             */\n\n            this._parseZone = function (zone) {\n                var zoneNomenclature, zoneObj;\n\n                zoneNomenclature = dataNomenclatureMapping.zone;\n                zoneObj = {\n                    id: paramsManager.convertRemoteToLocalId(zone[zoneNomenclature.id]),\n                    label: zone[zoneNomenclature.label]\n                };\n\n                env.isOngoing = zone[zoneNomenclature.isOngoing];\n\n                return zoneObj;\n            };\n\n\n            /**\n             * This method initialises the parsing of the input JSON\n             *\n             * @method _parseData\n             * @private\n             * @param {Object} data The external data structure\n             * @return {Object} The internal data structure\n             */\n\n            this._parseData = function (data) {\n                var envelop;\n\n                maxUsedDate = null;\n                minUsedDate = null;\n\n                crowdestRow = {cells: []};\n\n                originalTime = {\n                    start: data[dataNomenclatureMapping.startTimestamp],\n                    end: data[dataNomenclatureMapping.endTimestamp]\n                };\n\n                envelop = { // Creates the internal data structure\n                    startDate: paramsManager.convertRemoteToLocalDate(originalTime.start),\n                    endDate: paramsManager.convertRemoteToLocalDate(originalTime.end),\n                    rows: [],\n                    cells: [],\n                    group: null\n                };\n\n                // Synchronizes the internal parameters with those returned\n                env.params.startDate = envelop.startDate;\n                env.params.endDate = envelop.endDate;\n\n                env.retrievedAggregationLevel = data[dataNomenclatureMapping.aggregationLevel];\n\n                if (data.type == \"server-probes\") { // Different parser based on data.type\n\n                    envelop.group = this._parseSingleServer(data[dataNomenclatureMapping.singleServer]);\n                    envelop.root = this._parseZone(data[dataNomenclatureMapping.singleZone]);\n                    this._parseProbes(data[dataNomenclatureMapping.probesList], envelop);\n\n                } else if (data.type == \"zone-servers\") {\n\n                    envelop.group = this._parseZone(data[dataNomenclatureMapping.singleZone]);\n                    this._parseServers(data[dataNomenclatureMapping.serversList], envelop);\n\n                } else {\n                    console.log(\"Malformed json!\");\n                }\n\n                envelop.maxUsedDate = maxUsedDate;\n                envelop.minUsedDate = minUsedDate;\n\n\n                // Computes some internal parameters\n                env.aggregationLevels = data[dataNomenclatureMapping.aggregationLevels];\n                env.minAggregation = env.aggregationLevels[0];\n                env.maxAggregation = env.aggregationLevels[env.aggregationLevels.length - 1];\n                env.measurementStartTime = paramsManager.convertRemoteToLocalDate(data[dataNomenclatureMapping.measurementStartTime]);\n                env.measurementEndTime = paramsManager.convertRemoteToLocalDate(data[dataNomenclatureMapping.measurementEndTime]);\n\n                env.aggregationLabel = data[dataNomenclatureMapping.aggregationLabel];\n                env.isNativeAvailable = data[dataNomenclatureMapping.nativeAvailable];\n\n                envelop.usedTimeWindowSeconds = Math.ceil((maxUsedDate - minUsedDate) / 1000);\n                env.timeWindowSeconds = Math.ceil((env.params.endDate - env.params.startDate) / 1000);\n                envelop.crowdestRow = crowdestRow;\n\n                if (minUsedDate < env.params.startDate) {\n                    utils.log('Warning: an element retrieved is before the start date', env.debugMode);\n                }\n\n                return envelop;\n            };\n\n\n            /**\n             * Parses all the servers available in the JSON in order to create an internal compatible version of them\n             *\n             * @method _parseServers\n             * @private\n             * @param {Object} servers A list of server\n             */\n\n            this._parseServers = function (servers, envelop) {\n                var row, rowId, rowLabel, objRow, serverNomenclature, rowResults, rowGroup, rowIpVersion,\n                    rowDescription, externalId, rowHostname, rowIp, multipleLabels;\n\n                serverNomenclature = dataNomenclatureMapping.server;\n                multipleLabels = {};\n\n                for (var n = 0, length = servers.length; n < length; n++) { // For all the servers\n                    row = servers[n];\n\n                    externalId = row[serverNomenclature.id];\n                    rowId = paramsManager.convertRemoteToLocalId(externalId);\n                    rowResults = row[serverNomenclature.resultsList];\n\n                    if (!dataPool.rows[rowId]) {\n\n                        rowHostname = row[serverNomenclature.hostname];\n                        rowGroup = rowHostname; // Grouped by host name\n\n                        rowIpVersion = row[serverNomenclature.ipVersion];\n                        rowIp = row[serverNomenclature.ipAddress];\n\n                        rowDescription = row[serverNomenclature.description] || rowIp + ' (' + rowHostname + ')';\n\n                        rowLabel = row[serverNomenclature.label] || this._abbreviateLabel(rowHostname) + ' ' + ((rowIpVersion == 4) ? 'IPv4' : 'IPv6');\n\n                        if (multipleLabels[rowLabel]) {\n                            multipleLabels[rowLabel]++;\n                            rowLabel += '(' + multipleLabels[rowLabel] + ')';\n                        } else {\n                            multipleLabels[rowLabel] = 1;\n                        }\n\n                        objRow = new Row(rowId, rowLabel); // Create a row object of the model layer\n                        objRow.group = rowGroup;\n                        objRow.internalOrder = rowIpVersion;\n                        objRow.description = rowDescription;\n                        objRow.minimumResponseTime = null;\n                        objRow.___externalId___ = externalId;\n                        objRow.___type___ = \"server\";\n\n                        objRow.urlsMap = this._generateJsonUrls(row[serverNomenclature.urlsMap]); // Get additional data-api URLs\n\n                        dataPool.rows[rowId] = objRow;\n                    }\n\n                    envelop.rows.push(dataPool.rows[rowId]);\n                    dataPool.rows[rowId].minimumResponseTime = null;\n                    dataPool.rows[rowId].cells = [];\n                    dataPool.rows[rowId][\"__inuse__\"] = true;\n\n                    this._parseResults(rowResults, dataPool.rows[rowId], envelop); // Parse all the results for this row\n                }\n\n            };\n\n\n            /**\n             * This method translates the URLs of additional data-api reported in the JSON in the internal format\n             *\n             * @method _generateJsonUrls\n             * @private\n             * @param {Object} urlsMap A map of URLs\n             * @return {Object} A map of URLs translated in the internal format\n             */\n\n            this._generateJsonUrls = function (urlsMap) {\n                var jsonOverviewUrls, jsonSampleUrls, dataUrl, overviewUrl, label, nomenclatureUrlMap, mapUrlItem,\n                    current, measurementId, typeId, samplingFrequency;\n\n                jsonOverviewUrls = [];\n                jsonSampleUrls = [];\n                nomenclatureUrlMap = dataNomenclatureMapping.urlItem;\n\n                for (var n = 0, length = urlsMap.length; n < length; n++) {\n\n                    mapUrlItem = urlsMap[n];\n                    label = mapUrlItem[nomenclatureUrlMap.label];\n                    overviewUrl = mapUrlItem[nomenclatureUrlMap.overviewUrl];\n                    dataUrl = mapUrlItem[nomenclatureUrlMap.dataUrl];\n                    measurementId = mapUrlItem[nomenclatureUrlMap.measurementId];\n                    typeId = mapUrlItem[nomenclatureUrlMap.typeId];\n                    current = (mapUrlItem[nomenclatureUrlMap.currentDatasource] == true);\n\n                    samplingFrequency = mapUrlItem[nomenclatureUrlMap.samplingFrequency];\n\n                    if (current) {\n                        env.samplingFrequency = samplingFrequency;\n                    }\n\n                    if (typeId != 3) {\n                        jsonOverviewUrls.push({type: typeId, label: label, url: overviewUrl, current: current, measurementId: measurementId, samplingFrequency: samplingFrequency});\n                        jsonSampleUrls.push({type: typeId, label: label, url: dataUrl, current: current, measurementId: measurementId, samplingFrequency: samplingFrequency});\n                    }\n                }\n\n                return {sample: jsonSampleUrls, overview: jsonOverviewUrls};\n            };\n\n\n            /**\n             * This method abbreviates the labels for IPv6 addresses\n             *\n             * @method _abbreviateIPv6Label\n             * @private\n             * @param {String} label An IP address\n             */\n\n            this._abbreviateIPv6Label = function (label) {\n                var blocks, fullBlocks, blockTmp, resultBlocksHead, resultBlocksTail, labelOut;\n\n                fullBlocks = [];\n                resultBlocksHead = [];\n                resultBlocksTail = [];\n                blocks = label.split(\":\");\n\n                for (var n = 0, length = blocks.length; n < length; n++) {\n                    blockTmp = blocks[n];\n                    if (blockTmp != \"\") {\n                        fullBlocks.push(blockTmp);\n                    }\n                }\n\n                if (fullBlocks.length > 4) {\n                    resultBlocksHead.push(fullBlocks[0]);\n                    resultBlocksHead.push(fullBlocks[1]);\n\n                    resultBlocksTail.push(fullBlocks[fullBlocks.length - 2]);\n                    resultBlocksTail.push(fullBlocks[fullBlocks.length - 1]);\n\n                    labelOut = utils.join(resultBlocksHead, \":\") + \":..:\" + utils.join(resultBlocksTail, \":\");\n                } else {\n                    labelOut = label;\n                }\n\n                return labelOut;\n\n            };\n\n\n            /**\n             * This method abbreviates the labels\n             *\n             * @method _abbreviateLabel\n             * @private\n             * @param {String} label A label\n             */\n\n            this._abbreviateLabel = function (label) {\n                var stringOut, firstPart, secondPart, startSecondPart, length;\n\n                length = label.length;\n                if (length >= config.maxYLabelLength) {\n                    startSecondPart = length - 4;\n\n                    firstPart = (label.charAt(7) != '.') ? label.substring(0, 8) : label.substring(0, 7);\n                    secondPart = (label.charAt(startSecondPart) != '.') ? label.substring(startSecondPart, length) : label.substring(startSecondPart + 1, length);\n\n                    stringOut = firstPart + '...' + secondPart;\n                } else {\n                    stringOut = label;\n                }\n\n                return stringOut;\n            };\n\n            this._freeMemoryOnPool = function(){\n\n                for (var row in dataPool.rows){\n                    if (dataPool.rows[row][\"__inuse__\"] == false){\n                        delete dataPool.rows[row];\n                    } else {\n                        dataPool.rows[row][\"__inuse__\"] = false;\n                    }\n                }\n\n                for (var cell in dataPool.cells){\n                    if (dataPool.cells[cell][\"__inuse__\"] == false){\n                        delete dataPool.cells[cell];\n                    } else {\n                        dataPool.cells[cell][\"__inuse__\"] = false;\n                    }\n                }\n            };\n\n\n            /**\n             * Parses all the probes available in the JSON in order to create an internal compatible version of them\n             *\n             * @method _parseProbes\n             * @private\n             * @param {Object} probes A list of probes\n             */\n\n            this._parseProbes = function (probes, envelop) {\n                var row, rowId, rowLabel, objRow, probeNomenclature, rowResults, rowGroup,\n                    rowDescription, externalId, rowCountry, rowHostname;\n\n                probeNomenclature = dataNomenclatureMapping.probe;\n\n                for (var n = 0, length = probes.length; n < length; n++) {\n                    row = probes[n];\n\n                    externalId = row[probeNomenclature.id];\n\n                    rowId = paramsManager.convertRemoteToLocalId(externalId);\n                    rowResults = row[probeNomenclature.resultsList];\n\n                    if (!dataPool.rows[rowId]) {\n\n                        rowCountry = row[probeNomenclature.country];\n                        rowHostname = row[probeNomenclature.hostname];\n                        rowGroup = rowCountry;\n                        rowLabel = row[probeNomenclature.label] || rowHostname + ' (' + rowCountry + ')';\n                        rowDescription = row[probeNomenclature.description] || rowHostname;\n\n\n                        objRow = new Row(rowId, rowLabel);\n                        //Label modified for now\n                        objRow.group = rowGroup;\n                        objRow.internalOrder = rowId;\n                        objRow.description = rowDescription;\n                        objRow.___externalId___ = externalId;\n                        objRow.___type___ = \"probe\";\n                        objRow.urlsMap = envelop.group.urlsMap;\n\n                        dataPool.rows[rowId] = objRow;\n\n                    }\n\n                    envelop.rows.push(dataPool.rows[rowId]);\n                    dataPool.rows[rowId].minimumResponseTime = null;\n                    dataPool.rows[rowId].cells = [];\n                    dataPool.rows[rowId][\"__inuse__\"] = true;\n\n                    this._parseResults(rowResults, dataPool.rows[rowId], envelop);\n                }\n\n            };\n\n\n            /**\n             * Parses all results retrieved in the JSON for the current row\n             *\n             * @method _parseResults\n             * @private\n             * @param {Object} results A list of results\n             * @param {Object} row An object of the model layer representing the row\n             */\n\n            this._parseResults = function (results, row, envelop) {\n                var cell, objCell, cellResponseTime, cellTime, resultNomenclature, cellLoss, cellTimeEnd,\n                    startTimestamp, endTimestamp, cellKey;\n\n                resultNomenclature = dataNomenclatureMapping.result; // Get the nomenclature for a result item\n\n                for (var n = 0, length = results.length; n < length; n++) { // Iterate an all the results\n                    cell = results[n];\n\n                    startTimestamp = cell[resultNomenclature.time];\n                    endTimestamp = cell[resultNomenclature.endTime];\n\n                    cellTime = paramsManager.convertRemoteToLocalDate(startTimestamp); // The start time MUST be every time specified by the server\n\n                    if (endTimestamp) { // The end time is specified by the server\n\n                        cellTimeEnd = paramsManager.convertRemoteToLocalDate(endTimestamp);\n\n                    } else {\n\n                        if (env.retrievedAggregationLevel != 0) { // It is an aggregation, so every single cell is representing a period with start and end time\n\n                            cellTimeEnd = paramsManager.convertRemoteToLocalDate(startTimestamp + env.retrievedAggregationLevel); // Computes the end time\n\n                        } else { // It is a sample with just startTime\n\n                            cellTimeEnd = null;\n\n                        }\n                    }\n\n                    cellResponseTime = this._computeRespondingTime(cell);\n                    cellLoss = this._computePacketLoss(cell);\n\n                    if (maxUsedDate == null) {\n                        maxUsedDate = cellTime;\n                        minUsedDate = cellTime;\n                    } else {\n                        maxUsedDate = (maxUsedDate > cellTime) ? maxUsedDate : cellTime;\n                        minUsedDate = (minUsedDate < cellTime) ? minUsedDate : cellTime;\n                    }\n\n                    cellKey = row.id + '' + cellTime.getTime();\n                    if (!dataPool.cells[cellKey]) {\n                        dataPool.cells[cellKey] = new Cell(row, cellTime); // Create a new object of the model layer\n                    }\n\n                    objCell = dataPool.cells[cellKey];\n                    objCell.optional = {}; // Remove optional attributes\n                    this._parseRcodes(objCell, cell);\n                    objCell.endTime = cellTimeEnd;\n                    objCell.respondingTime = cellResponseTime;\n                    objCell.loss = cellLoss;\n                    objCell.sent = cell[dataNomenclatureMapping.result.packetSent];\n\n                    row.cells.push(dataPool.cells[cellKey]);\n                    envelop.cells.push(dataPool.cells[cellKey]);\n\n                    objCell.__inuse__ = true;\n\n                    if (cellResponseTime != null) {\n                        row.minimumResponseTime = ((row.minimumResponseTime == null || row.minimumResponseTime > cellResponseTime) ? cellResponseTime : row.minimumResponseTime);\n                    }\n                    crowdestRow = (row.cells.length > crowdestRow.cells.length) ? row : crowdestRow;\n                }\n            };\n\n            /**\n             * Enriches the cell object of the model layer with the rcodes error retrieved in the JSON for the conresponding result\n             *\n             * @method _parseRcodes\n             * @private\n             * @param {Object} cell An object of the model layer\n             * @param {Object} cellData A result/cell of the JSON input\n             */\n\n            this._parseRcodes = function (cell, cellData) {\n                var errorsData, importantErrors, others, totalNumber, cellError, numberOfErrorsOfThisType;\n\n                others = 0;\n                totalNumber = 0;\n                importantErrors = dataNomenclatureMapping.managedRcodes;\n                errorsData = cellData[dataNomenclatureMapping.result.errors];\n                cellError = {};\n\n                for (var errorName in errorsData) {\n\n                    if (utils.indexOf(errorName, importantErrors)) {\n                        numberOfErrorsOfThisType = errorsData[errorName];\n                        totalNumber += numberOfErrorsOfThisType;\n                        cellError[errorName] = numberOfErrorsOfThisType;\n                    } else {\n                        totalNumber++;\n                        others++;\n                    }\n                    cellError[\"others\"] = others;\n                }\n\n                cell.errors = cellError;\n                cell.numberCorrectResponses = this._computeNumberCorrectResponses(cellData, totalNumber);\n            };\n\n\n            /**\n             * Computes the percentage of correct responses\n             *\n             * @method _computeNumberCorrectResponses\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {Number} Returns a percentage\n             */\n\n            this._computeNumberCorrectResponses = function (cellData, numberOfErrors) {\n                var packetLoss, packetLossPercentage, packetSent, packetReceived;\n\n                packetSent = cellData[dataNomenclatureMapping.result.packetSent];\n                packetReceived = cellData[dataNomenclatureMapping.result.packetReceived];\n\n                if (packetSent != null && packetReceived != null) {\n                    packetLoss = packetSent - (packetReceived - numberOfErrors);\n                    packetLossPercentage = (100 / packetSent) * packetLoss;\n                    packetLossPercentage = packetLossPercentage.toFixed(2);\n                }\n\n                return packetLossPercentage;\n            };\n\n            /**\n             * Computes the unanswered queries of a cell/result\n             *\n             * @method _computePacketLoss\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {float} Returns a percentage\n             */\n\n            this._computePacketLoss = function (cellData) {\n                var packetLoss, packetLossPercentage, packetSent, packetReceived;\n\n                packetSent = cellData[dataNomenclatureMapping.result.packetSent];\n                packetReceived = cellData[dataNomenclatureMapping.result.packetReceived];\n\n                if (packetSent != null && packetReceived != null) {\n                    packetLoss = packetSent - packetReceived;\n                    packetLossPercentage = (100 / packetSent) * packetLoss;\n                    packetLossPercentage = packetLossPercentage.toFixed(2);\n                }\n\n                return packetLossPercentage;\n            };\n\n\n            /**\n             * Computes the RTT of a cell/result\n             *\n             * @method _computeRespondingTime\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {Number} Returns a RTT value\n             */\n            this._computeRespondingTime = function (cellData) {\n                var rtt, resultNomenclature;\n\n                resultNomenclature = dataNomenclatureMapping.result;\n                rtt = cellData[resultNomenclature.respondingTime];\n\n                return (rtt != null) ? parseFloat(rtt).toFixed(2) : null;\n            };\n\n\n            /**\n             * Get the DNS response data and translates it in an internal stable format\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function (msmId, prbId, timestamp, callback, context) {\n                var nomenclatureDnsResponse;\n\n                nomenclatureDnsResponse = {\n                    probeId: \"prb_id\",\n                    responseTime: \"rt\",\n                    nsId: \"nsid\",\n                    date: \"timestamp\",\n                    response: \"answer\",\n                    error: \"error\"\n                };\n\n                connector.getNativeDnsResult(msmId, prbId, timestamp, function (data) {\n                    var internalResponse, newData, dataItem;\n\n                    newData = [];\n\n                    for (var n = 0, length = data.length; n < length; n++) {\n                        dataItem = data[n];\n\n                        internalResponse = { // Translate to internal object\n                            probeId: dataItem[nomenclatureDnsResponse.probeId],\n                            responseTime: dataItem[nomenclatureDnsResponse.responseTime] || \"NA\",\n                            date: paramsManager.convertRemoteToLocalDate(dataItem[nomenclatureDnsResponse.date]),\n                            nsId: dataItem[nomenclatureDnsResponse.nsId],\n                            response: dataItem[nomenclatureDnsResponse.response],\n                            error: dataItem[nomenclatureDnsResponse.error]\n                        };\n\n                        newData.push(internalResponse);\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n            };\n\n\n            /**\n             * Get the closest traceroutes data and translates it in an internal stable format\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestTraceroutes = function (msmId, prbId, timestamp, callback, context) {\n                var tracerouteAtlas;\n\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, function (data) {\n                    var newData;\n\n                    newData = [];\n\n                    for (var n = 0, length = data.length; n < length; n++) {\n                        tracerouteAtlas = new AtlasTraceroute(data[n]);\n                        tracerouteAtlas.renderTimestring = function (timestamp) {\n                            return '>>> ' + utils.dateToString(utils.timestampToLocalDate(timestamp));\n                        };\n\n                        newData.push(tracerouteAtlas.render());\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function (msmId, prbId, timestamp, callback, context) { // Just indirection for now\n                var internalResponse, newData, dataItem, nomenclatureHostnameBindResponse;\n\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, function (data) {\n                    newData = [];\n                    nomenclatureHostnameBindResponse = {\n                        probeId: \"prb_id\",\n                        responseTime: \"rt\",\n                        msmId: \"msm_id\",\n                        date: \"timestamp\",\n                        response: \"answer\",\n                        error: \"error\"\n                    };\n\n                    for (var n=0,length=data.length; n<length; n++) {\n                        dataItem = data[n];\n\n                        internalResponse = { // Translate to internal object\n                            probeId: dataItem[nomenclatureHostnameBindResponse.probeId],\n                            responseTime: dataItem[nomenclatureHostnameBindResponse.responseTime] || \"NA\",\n                            date: paramsManager.convertRemoteToLocalDate(dataItem[nomenclatureHostnameBindResponse.date]),\n                            msmId: dataItem[nomenclatureHostnameBindResponse.msmId],\n                            response: dataItem[nomenclatureHostnameBindResponse.response],\n                            error: dataItem[nomenclatureHostnameBindResponse.error]\n                        };\n\n                        newData.push(internalResponse);\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n\n            };\n\n        };\n\n        return IsolationLevelConnectorAtlas;\n    });\n\n","/**\n * Created by mcandela on 17/12/13.\n */\n\ndefine('connector.aggregation-level',[\n    \"connector.atlas.isolation-level\"\n],\n    function(Connector){\n\n        /**\n         * AggregationLevelConnector introduces in the query all the information related to the aggregation level.\n         * It provides a transparent layer between the tool and the data implementing all the logic\n         * about the data aggregation.\n         *\n         * @class AggregationLevelConnector\n         * @constructor\n         * @module connector\n         */\n\n        var AggregationLevelConnector = function(env){\n\n            var connector, config;\n\n            config = env.config;\n            connector = new Connector(env);\n\n            /**\n             * From top to bottom: it injects information about the aggregation level.\n             * From bottom to top: it parse information about the aggregation level\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it will be ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n                var containerWidth;\n\n                containerWidth = env.container.chart.width();\n                env.maxNumberOfCellsPerRow = Math.floor(containerWidth / (config.cellsMinWidth + config.xCellsMargin));\n\n                if (params.startDate && params.endDate && env.aggregationLevels && env.aggregationLevels.length > 0){\n                    env.aggregationLevel = this._getAggregationLevel(params);\n                }\n\n                connector.retrieveData(params, function(data){\n                    callback.call(context, data);\n                }, this);\n            };\n\n\n            this._getBestAggregationLevel = function(params){\n                var aggregationSeconds, timeInterval;\n\n                timeInterval = Math.floor((params.endDate - params.startDate) / 1000);\n                aggregationSeconds = timeInterval / env.maxNumberOfCellsPerRow;\n\n                return  (aggregationSeconds > 0) ? aggregationSeconds.toFixed(2) : 0;\n            };\n\n\n\n            this._getAggregationLevel = function(params){\n                var bestLevel, currentLevel;\n\n                if (typeof I_WANT_TO_SHOOT_ON_MY_FOOT != 'undefined'){\n                    return 0;\n                }\n\n                bestLevel = this._getBestAggregationLevel(params);\n\n                if (env.isNativeAvailable && bestLevel <= env.samplingFrequency){ // Native resolution\n                    return 0;\n                }\n\n                for (var n=0,length=env.aggregationLevels.length; n<length; n++){\n                    currentLevel = env.aggregationLevels[n];\n                    if (currentLevel >= bestLevel){\n                        break;\n                    }\n                }\n\n                return currentLevel;\n            };\n\n\n            /**\n             * Get the DNS response\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /** Get the closest traceroutes\n            *\n            * @method getClosestTraceroutes\n            * @param {Number} msmId The id of the measurement\n            * @param {Number} prbId The id of the probe\n            * @param {Number} timestamp A UNIX timestamp\n            * @param {Function} callback A function taking the retrieved data as input when it is ready\n            * @param {Object} context The context of the callback\n            */\n\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return AggregationLevelConnector;\n    });\n","    /**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:27 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine(\n    'connector.anti-flood',[\n        \"connector.aggregation-level\"\n    ],\n    function(Connector){\n\n        /**\n         * AntiFloodConnector it is a layer implementing a client-side anti-flood system.\n         * This anti-flood layer allows cumulative query to the data-api reducing considerably the amount of\n         * interactions with the network stack.\n         *\n         * @class AntiFloodConnector\n         * @constructor\n         * @module connector\n         */\n\n        var AntiFloodConnector = function(env){\n\n            var connector, timeoutLoadingTimer, firstCall, config;\n\n            firstCall = true;\n            config = env.config;\n            connector = new Connector(env);\n\n            /**\n             * From top to bottom: it drops or aggregates queries.\n             * From bottom to top: it responds to the single query in the usual way.\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n\n                if (firstCall ==  false){\n                    clearTimeout(timeoutLoadingTimer);\n                    timeoutLoadingTimer = setTimeout(\n                        function(){\n                            connector.retrieveData(params, callback, context);\n                        },\n                        config.antiFloodTimer);\n\n                    env.antiFloodTimer = null;\n                }else{\n                    firstCall =  false;\n                    connector.retrieveData(params, callback, context);\n                }\n            };\n\n\n            /** Get the DNS response\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /** Get the closest traceroutes\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return AntiFloodConnector;\n    });\n","/**\n * Copyright 2014 - mcandela\n * Date: 06/06/14\n * Time: 17:17\n */\ndefine('connector.log-connector',[\n], function(){\n\n    /**\n     * Connector is in charge of connecting the data-apis and providing a JSON format to the layers over.\n     *\n     * @class LogRestConnector\n     * @constructor\n     * @module connector.log-connector\n     */\n\n    var LogRestConnector = function(env){\n        var logStorageUrl, errorStorageUrl, appTag;\n\n        logStorageUrl = env.config.storageLogRestApiUrl;\n        errorStorageUrl = env.config.storageErrorRestApiUrl;\n\n        appTag = env.config.logAppTag;\n\n        /**\n         * Sends logs to the servers\n         *\n         *\n         * @method log\n         * @param {String} type The type of the log\n         * @param {String} log The body of the log\n         */\n\n        this.log = function(type, log){\n            this._persist(logStorageUrl, this._createJson(type, log));\n        };\n\n\n        /**\n         * Sends errors to the servers\n         *\n         *\n         * @method error\n         * @param {String} type The type of the error\n         * @param {String} error The body of the error\n         */\n\n        this.error = function(type, error){\n            this._persist(errorStorageUrl, this._createJson(type, error));\n        };\n\n\n        /**\n         * This method creates a json version of a log entry\n         *\n         *\n         * @method _createJson\n         * @private\n         * @param {String} type The type of the error\n         * @param {String} log The body of the error\n         */\n\n        this._createJson = function(type, log){\n            return {app: appTag, type: type, log: log};\n        };\n\n\n        /**\n         * This method handles the ajax call to POST the error to the server\n         *\n         *\n         * @method _persist\n         * @private\n         * @param {String} url The type of the error\n         * @param {String} json The body of the error\n         */\n\n        this._persist = function(url, json){\n            var xhr;\n\n            try {\n\n                xhr = $.ajax({\n                    type: \"POST\",\n                    url: url,\n                    data: json,\n                    crossDomain: true,\n                    dataType: 'json'\n                });\n\n                if (xhr && xhr.readyState>3 && xhr.readyState<4) {\n                    xhr.abort();\n                }\n\n            } catch(error) {\n            }\n        };\n\n    };\n\n\n    return LogRestConnector;\n});\n","/**\n * Created by mcandela on 23/01/14.\n */\n\ndefine('connector.facade',[\n    \"env.utils\",\n    \"connector.anti-flood\",\n    \"env.params-manager\",\n    \"connector.log-connector\"\n], function(utils, Connector, paramsManager, LogRestConnector){\n\n    /**\n     * ConnectorFacade is the singleton Facade of the whole connector level.\n     * It provides high-level connectivity functions able to receive as input model objects and converting\n     * them in low-level parameters.\n     *\n     * @class ConnectorFacade\n     * @constructor\n     * @module connector\n     */\n\n    var ConnectorFacade = function(env){\n        var connector, indexedRows, logConnector;\n\n        connector = new Connector(env);\n        logConnector = new LogRestConnector(env);\n\n\n        /**\n         * From top to bottom: it provides a way to query the data-api with the current valid parameters.\n         *\n         * @method retrieveData\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(callback, context){\n\n            env.lastRequest = new Date();\n            connector.retrieveData(env.params, function(data){\n                this.rows = data.rows;\n                this.group = data.group;\n\n                env.lastUpdate = new Date();\n                if (callback){\n                    callback.call(context, data);\n                }\n            }, this);\n\n\n        };\n\n        /** Get all the rows\n         *\n         * @method getRows\n         * @return {Array} A list of rows\n         */\n\n        this.getRows = function(){\n            if (!this.rows){\n                this.retrieveData();\n            }\n\n            return this.rows;\n        };\n\n\n        /** Get a row given an id\n         *\n         * @method getRowById\n         * @param {Number} id An id\n         * @return {Object} A row of the model layer\n         */\n\n        this.getRowById = function(id){\n            var rows, row;\n\n            if (!indexedRows){\n\n                rows = this.getRows();\n                indexedRows = {};\n\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n                    indexedRows[row.id] = row;\n                }\n\n            }\n            return indexedRows[id];\n        };\n\n\n        /** Get the group of the last query\n         *\n         * @method getGroup\n         * @return {Object} A group\n         */\n\n        this.getGroup = function(){\n            return this.group;\n        };\n\n\n        /** Get additional data-api URLs given a cell\n         *\n         * @method getCellDataUrls\n         * @param {Object} cell A cell object\n         * @return {Object} A map of URLs for the selected sample\n         */\n\n        this.getCellDataUrls = function(cell){\n            var listSampleUrls, urlTmp, row;\n\n            row = cell.row;\n            listSampleUrls = row.urlsMap.sample;\n\n            for (var n=0,length=listSampleUrls.length; n<length; n++){\n                urlTmp = listSampleUrls[n];\n\n                urlTmp.url = utils.setParam('format', 'json', urlTmp.url);\n\n                if (row.___type___ == \"probe\"){\n                    urlTmp.url = utils.setParam('prb_id', paramsManager.convertLocalToRemoteId(row.id), urlTmp.url);\n                }\n\n                urlTmp.url = utils.setParam('start', paramsManager.convertLocalToRemoteDate(cell.time), urlTmp.url);\n\n                if (cell.endTime){\n                    urlTmp.url = utils.setParam('stop', paramsManager.convertLocalToRemoteDate(cell.endTime), urlTmp.url);\n                }else{\n                    urlTmp.url = utils.setParam('stop', paramsManager.convertLocalToRemoteDate(new Date(cell.time.getTime() + (env.retrievedAggregationLevel * 1000))), urlTmp.url);\n                }\n            }\n\n            return listSampleUrls;\n        };\n\n\n        /** Get the url of the probes page\n         *\n         * @method getProbesPageUrl\n         * @param {Number} probeId The id of the probe\n         * @param {Object} params A parameters vector\n         * @return {String} An URL\n         */\n\n        this.getProbesPageUrl = function(probeId, params){\n            return 'https://atlas.ripe.net/dnsmon/probes/' + paramsManager.convertLocalToRemoteId(probeId)+ '?zone=' + paramsManager.convertLocalToRemoteId(params.root);\n        };\n\n\n        /** Get additional data-api URLs given a cell\n         *\n         * @method getDataUrls\n         * @param {Object} cell A cell object\n         * @return {Object} A map of URLs for the whole time window\n         */\n\n        this.getDataUrls = function(cell){\n            var listOverviewUrls, urlTmp, row;\n\n            row = cell.row;\n            listOverviewUrls = row.urlsMap.overview;\n\n            for (var n=0,length=listOverviewUrls.length; n<length; n++){\n                urlTmp = listOverviewUrls[n];\n\n                urlTmp.url = utils.setParam('format', 'json', urlTmp.url);\n\n                if (row.___type___ == \"probe\"){\n                    urlTmp.url = utils.setParam('prb_id', paramsManager.convertLocalToRemoteId(row.id), urlTmp.url);\n                }\n            }\n\n            return listOverviewUrls;\n        };\n\n\n        /** Get the DNS response, in a human readable format, given a cell\n         *\n         * @method getNativeDnsResult\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(cell, callback, context){\n            var msmId, prbId, timestamp;\n\n            msmId = this._getMeasurementId(cell);\n            prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n            timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n\n            connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n        };\n\n\n        /** Get the closest traceroutes given a cell\n         *\n         * @method getClosestTraceroutes\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(cell, callback, context){\n            var msmId, prbId, timestamp, measurementType;\n\n            measurementType = \"traceroute\";\n\n            msmId = this._getMeasurementIdByType(cell, measurementType);\n            prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n            timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n\n            connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n        };\n\n        /**\n         * Get the closest hostname.bind and checks errors\n         *\n         * @method getClosestHostnameBind\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(cell, callback, context){\n            var msmId, prbId, timestamp, measurementType;\n\n            measurementType = \"hostname_bind\";\n\n            msmId = this._getMeasurementIdByType(cell, measurementType);\n            prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n            timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n\n            // No errors checks for now\n            connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n        };\n\n\n\n        /** Get the measurement id given a cell\n         *\n         * @method _getMeasurementId\n         * @private\n         * @param {Object} cell A cell object\n         * @return {String} The measurement id\n         */\n\n        this._getMeasurementId = function(cell){\n            var dataUrls, urlItem;\n\n            dataUrls = this.getDataUrls(cell);\n\n            for (var n=0,length=dataUrls.length; n<length; n++){\n                urlItem = dataUrls[n];\n                if (urlItem.current == true){\n                    return urlItem.measurementId;\n                }\n            }\n\n            return null;\n        };\n\n\n        /** Get the DNS response, in a human readable format, given a cell\n         *\n         * @method _getMeasurementIdByType\n         * @private\n         * @param {Object} cell A cell object\n         * @param {String} type A valid type\n         * @return {Number} The measurement id\n         */\n\n        this._getMeasurementIdByType = function(cell, type){\n            var dataUrls, urlItem;\n\n            dataUrls = this.getDataUrls(cell);\n\n            for (var n=0,length=dataUrls.length; n<length; n++){\n                urlItem = dataUrls[n];\n\n                if (urlItem.type == type){\n                    return urlItem.measurementId;\n                }\n            }\n\n            return null;\n        };\n\n\n        /** Sends logs to the servers\n         *\n         * @method persistLog\n         * @param {String} type The type of the log\n         * @param {String} log The body of the log\n         */\n\n        this.persistLog = function(type, log){\n            var browserVersion;\n\n            if (env.config.persistLog) {\n                browserVersion = utils.getBrowserVersion();\n                logConnector.log(type, log + ' (browser: ' + browserVersion.name + ' ' + browserVersion.version.toString() + ')');\n            }\n\n        };\n\n\n        /** Sends errors to the servers\n         *\n         * @method persistError\n         * @param {String} type The type of the error\n         * @param {String} log The body of the error\n         */\n\n        this.persistError = function(type, log){\n            var browserVersion;\n\n            if (env.config.persistErrors) {\n                browserVersion = utils.getBrowserVersion();\n                logConnector.error(type, log + ' (browser: ' + browserVersion.name + ' ' + browserVersion.version.toString() + ', codeVersion: ' + env.version + ')');\n            }\n\n        };\n\n    };\n\n    return ConnectorFacade;\n});\n","/*!\n * jQuery Cookie Plugin v1.4.0\n * https://github.com/carhartl/jquery-cookie\n *\n * Copyright 2013 Klaus Hartl\n * Released under the MIT license\n */\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as anonymous module.\n        define('lib.jquery.cookie',['jquery'], factory);\n    } else {\n        // Browser globals.\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var pluses = /\\+/g;\n\n    function encode(s) {\n        return config.raw ? s : encodeURIComponent(s);\n    }\n\n    function decode(s) {\n        return config.raw ? s : decodeURIComponent(s);\n    }\n\n    function stringifyCookieValue(value) {\n        return encode(config.json ? JSON.stringify(value) : String(value));\n    }\n\n    function parseCookieValue(s) {\n        if (s.indexOf('\"') === 0) {\n            // This is a quoted cookie as according to RFC2068, unescape...\n            s = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n        }\n\n        try {\n            // Replace server-side written pluses with spaces.\n            // If we can't decode the cookie, ignore it, it's unusable.\n            // If we can't parse the cookie, ignore it, it's unusable.\n            s = decodeURIComponent(s.replace(pluses, ' '));\n            return config.json ? JSON.parse(s) : s;\n        } catch(e) {}\n    }\n\n    function read(s, converter) {\n        var value = config.raw ? s : parseCookieValue(s);\n        return $.isFunction(converter) ? converter(value) : value;\n    }\n\n    var config = $.cookie = function (key, value, options) {\n\n        // Write\n\n        if (value !== undefined && !$.isFunction(value)) {\n            options = $.extend({}, config.defaults, options);\n\n            if (typeof options.expires === 'number') {\n                var days = options.expires, t = options.expires = new Date();\n                t.setTime(+t + days * 864e+5);\n            }\n\n            return (document.cookie = [\n                encode(key), '=', stringifyCookieValue(value),\n                options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n                options.path    ? '; path=' + options.path : '',\n                options.domain  ? '; domain=' + options.domain : '',\n                options.secure  ? '; secure' : ''\n            ].join(''));\n        }\n\n        // Read\n\n        var result = key ? undefined : {};\n\n        // To prevent the for loop in the first place assign an empty array\n        // in case there are no cookies at all. Also prevents odd result when\n        // calling $.cookie().\n        var cookies = document.cookie ? document.cookie.split('; ') : [];\n\n        for (var i = 0, l = cookies.length; i < l; i++) {\n            var parts = cookies[i].split('=');\n            var name = decode(parts.shift());\n            var cookie = parts.join('=');\n\n            if (key && key === name) {\n                // If second argument (value) is a function it's a converter...\n                result = read(cookie, value);\n                break;\n            }\n\n            // Prevent storing a cookie that we couldn't decode.\n            if (!key && (cookie = read(cookie)) !== undefined) {\n                result[name] = cookie;\n            }\n        }\n\n        return result;\n    };\n\n    config.defaults = {};\n\n    $.removeCookie = function (key, options) {\n        if ($.cookie(key) === undefined) {\n            return false;\n        }\n\n        // Must not alter options, thus extending a fresh object...\n        $.cookie(key, '', $.extend({}, options, { expires: -1 }));\n        return !$.cookie(key);\n    };\n\n}));\n","/**\n * Created by mcandela on 10/01/14.\n */\n\ndefine('session.facade',[\n    \"env.utils\",\n    \"lib.jquery.cookie\"\n], function(utils){\n\n    /**\n     * SessionManager is the layer providing all the functions to manage the session.\n     * It provides a transparent layer for the tool to store and retrieve parameters.\n     * The persistence can be provided (or not) by cookies or with any other possible server interaction.\n     *\n     * @class SessionManager\n     * @constructor\n     * @module session\n     */\n\n    var SessionManager = function(env){\n        var volatileValues, session, defaultSession, cookieSuffix, cookiePreSuffix, config, useLocalPersistence,\n            expireDate, localParamsChecked;\n\n        config = env.config;\n        useLocalPersistence = config.useLocalPersistenceForSettings;\n        session = {};\n        expireDate = new Date((new Date()).getTime() + (config.localPersistenceValidityTimeMinutes * 60 * 1000)); // Expiration date for the persistence\n        localParamsChecked = false;\n\n        defaultSession = { // Pre-filled session with default values\n            \"exclude-errors\": config.excludeErrorsByDefault\n        };\n\n        volatileValues = []; // Keys in this list are not stored persistently\n        cookiePreSuffix = \"dnsmon_\"; // A suffix to create a better scope for the cookies\n\n        //Compute the final suffix\n        cookieSuffix = utils.getInstanceSuffix(env.parentDom);\n        cookieSuffix = cookiePreSuffix + cookieSuffix + \"_\";\n\n\n        /**\n         * This method saves a session values if it is not in the volatileValues list\n         *\n         * @method saveValue\n         * @input {String} key A key\n         * @input {String} value A value\n         */\n\n        this.saveValue = function(key, value){\n            var keyString, valueString;\n\n            keyString = key.toString(); // Cast input to String\n            valueString = value.toString();\n\n            session[keyString] = valueString;\n\n            if (useLocalPersistence && utils.indexOf(keyString, volatileValues) == -1){ // The current item is not volatile\n                this._persistValue(keyString, valueString);\n            }\n        };\n\n\n        /**\n         * This method saves a session values if it is not in the volatileValues list\n         *\n         * @method saveValue\n         * @input {String} key A key\n         * @input {String} value A value\n         */\n\n        this._notLocalParams = function(){\n            var retrievedVersion;\n\n            for (var paramKey in session){\n\n                if (utils.indexOf(paramKey, volatileValues) == -1){\n                    retrievedVersion = this._retrieveValue(paramKey); // Do this after all the checks (it is expensive)\n\n                    if (retrievedVersion != null && retrievedVersion != '' + session[paramKey]){\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n\n        /**\n         * This method returns a session value given a key. It considers defaults, persistents and temporary (e.g. permalinks) session values\n         *\n         * @method getValue\n         * @input {String} key A key\n         * @return {String} A value\n         */\n\n        this.getValue = function(key){\n            var keyString;\n\n            keyString = key.toString();\n\n            if (useLocalPersistence && session[keyString] == null && utils.indexOf(keyString, volatileValues) == -1){ // Lazy approach && the current item is not volatile\n                session[keyString] = this._retrieveValue(keyString);\n            }\n\n            if (session[keyString] == null && defaultSession[keyString] != null){ // Lazy approach && there is a default value\n                session[keyString] = defaultSession[keyString];\n            }\n\n            if (localParamsChecked == false){\n                localParamsChecked = true;\n                if (this._notLocalParams()){\n                    env.mainView.showMessage(env.lang.notYourConfig);\n                }\n            }\n\n            return session[keyString];\n        };\n\n\n        /**\n         * This method saves a value locally\n         *\n         * @method _persistValue\n         * @private\n         * @input {String} key A key\n         * @return {Boolean} If true the value has been saved correctly\n         */\n\n        this._persistValue = function(key, value){\n            var saved;\n\n            try{\n                $.cookie(cookieSuffix + key, value, {expires: expireDate});\n                saved = true;\n            }catch(error){\n                utils.log(error, env.debugMode);\n                saved = false;\n            }\n\n            return saved;\n        };\n\n\n        /**\n         * This method reads a value saved locally\n         *\n         * @method _retrieveValue\n         * @private\n         * @input {String} key A key\n         * @return {String} A value\n         */\n\n        this._retrieveValue = function(key){\n            var value;\n\n            try{\n                value = $.cookie(cookieSuffix + key);\n            }catch(error){\n                utils.log(error, env.debugMode);\n                value = null;\n            }\n\n            return value;\n        };\n\n\n        /**\n         * This method returns the actual session\n         *\n         * @method getSession\n         * @return {Object} A vector of values describing the actual session\n         */\n\n        this.getSession = function(){\n            for (var key in defaultSession){\n                if (!session.hasOwnProperty(key)){\n                    session[key] = this.getValue(key);\n                }\n            }\n\n            return session;\n        };\n\n\n        /**\n         * This method imposes temporary a session\n         *\n         * @method setSession\n         * @input {Object} newSession A vector of values describing a session\n         */\n\n        this.setSession = function(newSession){\n            session = newSession;\n        };\n\n    };\n\n    return SessionManager;\n});\n","/**\n * Created by mcandela on 11/12/13.\n */\n\ndefine('env.history-manager',[\n    \"env.utils\",\n    \"env.params-manager\"\n], function(utils, paramsManager){\n\n    /**\n     * HistoryManager provides all the functions to manage the history and the back/forward browser interactions.\n     *\n     * @class HistoryManager\n     * @constructor\n     * @module environment\n     */\n\n    var HistoryManager = function(env){\n        var config, pushNewStatuses, keyPrefix, $this, initialisationHistory, initialisationSession, isInitialStatus,\n            isFirstAutoUpdateAction;\n\n        $this = this;\n        config = env.config;\n        pushNewStatuses = true;\n        isInitialStatus = true;\n        isFirstAutoUpdateAction = true;\n\n        keyPrefix = utils.getInstanceSuffix(env.parentDom);\n\n\n        /**\n         * This method initialises the module. It pushes in the history and updates the URL with the initialisation query\n         * and session parameters.\n         *\n         * @method init\n         */\n\n        this.init = function(){\n            if (config.historyInUrlAtInitialisation){\n                this.update();\n            }else{\n                initialisationHistory = utils.lightClone(env.params);\n                initialisationSession = utils.lightClone(env.session.getSession());\n            }\n        };\n\n\n        /**\n         * This method pushes in the history and updates the URL with the actual query and session parameters.\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            var params, currentState, session;\n\n            if (config.historyInUrl && pushNewStatuses){\n                params = env.params;\n                session = env.session.getSession();\n\n                isInitialStatus = false;\n\n                currentState = this._generateStateUrl(params, session);\n\n                if (!env.isUpdatedPeriodicallyActive || isFirstAutoUpdateAction) { // Is not an update action or is the first update action\n\n                    window.history.pushState({}, 'dnsmon_state', currentState);\n                    isFirstAutoUpdateAction = !env.isUpdatedPeriodicallyActive;\n\n                }else{\n\n                    window.history.replaceState({}, 'dnsmon_state', currentState);\n\n                }\n            }else{\n                pushNewStatuses = true;\n            }\n        };\n\n\n        /**\n         * This method pushes in the history and updates the URL with the actual query and session parameters.\n         *\n         * @method _generateStateUrl\n         * @private\n         *\n         */\n\n        this._generateStateUrl = function(params, session){\n            return '?' + this._generateParametersUrl(params, this._generateSessionUrl(session)).split('?')[1]; // Remove the host\n        };\n\n\n        /**\n         * This method creates an URL with all the session parameters.\n         *\n         * @method _generateSessionUrl\n         * @private\n         * @input {Object} session A vector of session parameters\n         * @return {String} The updated URL\n         */\n\n        this._generateSessionUrl = function(session){\n\n            var actualUrl;\n\n            actualUrl = utils.getCurrentUrl();\n\n            for (var key in session){\n                actualUrl = utils.setParam(keyPrefix + '.session.' + key, session[key], actualUrl);\n            }\n\n            return actualUrl;\n        };\n\n\n        /**\n         * This method updates the given URL with all the query parameters.\n         *\n         * @method _generateParametersUrl\n         * @private\n         * @input {Object} params A vector of query parameters\n         * @input {String} sessionUrl An URL\n         * @return {String} The updated URL\n         */\n\n        this._generateParametersUrl = function(params, sessionUrl){\n            var externalParams, actualUrl;\n\n            actualUrl = sessionUrl;\n            externalParams = paramsManager.fromInternalToExternal(params);\n\n            for (var key in externalParams){\n                actualUrl = utils.setParam(keyPrefix + '.' + key, externalParams[key], actualUrl);\n            }\n\n            return actualUrl;\n        };\n\n\n        /**\n         * This method is triggered every time there is a back/forward event in the browser. It recovers and applies\n         * the history.\n         *\n         * @method updateStatusFromUrl\n         */\n\n        this.updateStatusFromUrl = function(){\n\n            if (!isInitialStatus){ //Chrome and Safari workaround (html5 specs: onpopstate should not be triggered at initialisation time\n                pushNewStatuses = false;\n\n                if (env.isUpdatedPeriodicallyActive){// Disable the keep updated if active\n                    env.mainView.controlPanel.keepUpdatedActive(false);\n                }\n\n                if (!$this.setStatusFromUrl()){ // If the status has not been set, set the status stored at initialisation time\n\n                    env.params = initialisationHistory;\n                    env.session.setSession(initialisationSession);\n                }\n\n                env.mainView.redraw(function(){ // Redraw the scene\n                    env.mainView.breadcrumbs.pushHistory(this._createHistory(env.params));\n                }, $this);\n            }\n\n        };\n\n\n        /**\n         * This method applies the current permalink to the scene.\n         *\n         * @method setStatusFromUrl\n         */\n\n        this.setStatusFromUrl = function(){\n            var params, session, paramsAndSession;\n\n            paramsAndSession = utils.getUrlParameters(env.parentDom);\n\n            if (paramsAndSession != null && paramsAndSession.type != null){\n                session = paramsAndSession.session;\n                env.params.selectedRows = [];\n                params = paramsManager.mergeParams(env.params, paramsManager.fromExternalToInternal(paramsAndSession));\n\n                env.params = params;\n                env.session.setSession(session);\n\n                env.initialHistory = this._createHistory(params);\n\n                return true;\n            }\n\n            return false;\n        };\n\n\n        /**\n         * This method re-creates a navigation history given a vector of query parameters.\n         * So it allows the user to share also a navigation history by sharing a permalink.\n         *\n         * @method _createHistory\n         * @private\n         */\n\n        this._createHistory = function(params){\n            var history;\n\n            history = [];\n\n            switch(params.type){\n\n                case \"servers\":\n\n                    history.push({\n                        id: params.group + \"\",\n                        params: utils.lightClone(params)\n                    });\n\n                    break;\n\n                case \"probes\":\n\n                    history.push({\n                        id: params.root + \"\",\n                        params: {\n                            type: \"servers\",\n                            root: null,\n                            group: params.root + \"\",\n                            selectedRows: []\n                        }\n                    });\n\n                    history.push({\n                        id: params.group + \"\",\n                        params: utils.lightClone(params)\n                    });\n\n                    break;\n            }\n\n            return history;\n        };\n\n\n        if (config.allowPermalinks){\n            this.setStatusFromUrl();\n        }\n\n        if (config.historyInUrl){\n            window.onpopstate = this.updateStatusFromUrl;\n        }\n\n    };\n\n    return HistoryManager;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 11:01 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\n/**\n * Some require.js configurations\n */\n\nrequirejs.config({\n    paths:{\n        /* environment */\n        \"env\": DNSMON_ENVIRONMENT_URL + \"environment\",\n        \"env.utils\": DNSMON_ENVIRONMENT_URL + \"utils\",\n        \"env.config\": DNSMON_ENVIRONMENT_URL + \"config\",\n        \"env.params-manager\": DNSMON_ENVIRONMENT_URL + \"ParamsManager\",\n        \"env.history-manager\": DNSMON_ENVIRONMENT_URL + \"HistoryManager\",\n\n        \"env.languages.en\": DNSMON_ENVIRONMENT_URL + \"languages/lang-en\",\n\n        /* libs */\n        \"lib.d3\": DNSMON_LIB_URL + \"d3.v3.amd\",\n        \"lib.jquery\": (typeof DNSMON_JQUERY_GLOBAL_DECLARED_URL != 'undefined') ? DNSMON_JQUERY_GLOBAL_DECLARED_URL : DNSMON_LIB_URL + \"jquery.min\",\n\n        \"lib.jquery-ui\": (typeof DNSMON_JQUERY_UI_GLOBAL_DECLARED_URL != 'undefined') ? DNSMON_JQUERY_UI_GLOBAL_DECLARED_URL : DNSMON_LIB_URL + \"jquery-ui.min\",\n        \"lib.jquery-ui.timepicker\": DNSMON_LIB_URL + \"jquery-ui.timepicker\",\n\n        \"lib.jquery.cookie\": DNSMON_LIB_URL + \"jquery.cookie\",\n        \"lib.date-format\": DNSMON_LIB_URL + \"dateFormat\",\n        \"lib.atlas-traceroute-printer\": DNSMON_LIB_URL + \"atlas.traceroute\",\n\n\n        /* model */\n        \"model.cell\": DNSMON_MODEL_URL + \"Cell\",\n        \"model.row\": DNSMON_MODEL_URL + \"Row\",\n\n\n        /* view */\n        \"view.main\": DNSMON_VIEW_URL + \"MainView\",\n        \"view.control-panel\": DNSMON_VIEW_URL + \"ControlPanelView\",\n        \"view.full-screen\": DNSMON_VIEW_URL + \"FullScreenView\",\n        \"view.breadcrumbs\": DNSMON_VIEW_URL + \"BreadcrumbsView\",\n        \"view.ordinal-axis\": DNSMON_VIEW_URL + \"OrdinalAxisView\",\n        \"view.pop-up\": DNSMON_VIEW_URL + \"PopUpView\",\n        \"view.template-manager\": DNSMON_VIEW_URL + \"TemplateManagerView\",\n        \"view.time-axis\": DNSMON_VIEW_URL + \"TimeAxisView\",\n        \"view.time-overview\": DNSMON_VIEW_URL + \"TimeOverviewView\",\n\n\n        /* view.svg */\n        \"view.svg.chart\": DNSMON_VIEW_URL + \"svg/SvgChartView\",\n        \"view.svg.container\": DNSMON_VIEW_URL + \"svg/SvgContainerView\",\n        \"view.svg.time-axis\": DNSMON_VIEW_URL + \"svg/SvgTimeAxisView\",\n        \"view.svg.ordinal-axis\": DNSMON_VIEW_URL + \"svg/SvgOrdinalAxisView\",\n\n\n        /* controller */\n        \"controller.gesture-manager\": DNSMON_CONTROLLER_URL + \"GesturesManager\",\n        \"controller.time\": DNSMON_CONTROLLER_URL + \"TimeController\",\n\n\n        /* connector */\n        \"connector.facade\": DNSMON_CONNECTOR_URL + \"ConnectorFacade\",\n        \"connector.aggregation-level\": DNSMON_CONNECTOR_URL + \"AggregationLevelConnector\",\n        \"connector.anti-flood\": DNSMON_CONNECTOR_URL + \"AntiFloodConnector\",\n        \"connector.filter\": DNSMON_CONNECTOR_URL + \"FilterConnector\",\n        \"connector.log-connector\": DNSMON_CONNECTOR_URL + \"log/LogRestConnector\",\n\n\n        /* connector.atlas */\n        \"connector.atlas.rest\": DNSMON_CONNECTOR_URL + \"atlas/RestConnectorAtlas\",\n        \"connector.atlas.cache\": DNSMON_CONNECTOR_URL + \"atlas/CacheConnectorAtlas\",\n        \"connector.atlas.error-handler\": DNSMON_CONNECTOR_URL + \"atlas/ErrorsHandlerConnectorAtlas\",\n        \"connector.atlas.isolation-level\": DNSMON_CONNECTOR_URL + \"atlas/IsolationLevelConnectorAtlas\",\n\n\n        /* session */\n        \"session.facade\": DNSMON_SESSION_URL + \"SessionManager\"\n    },\n    shim:{\n        \"lib.jquery-ui\": {\n            deps: [\"lib.jquery\"]\n        },\n\n        \"lib.jquery.cookie\": {\n            deps: [\"lib.jquery\"]\n        },\n\n        \"lib.jquery-ui.timepicker\": {\n            deps: [\"lib.jquery-ui\"]\n        }\n    }\n});\n\n\n\ndefine('dnsmon/dnsmon-loader',[\n\n    \"env.utils\",\n    \"env.config\",\n    \"env.languages.en\",\n    \"env.params-manager\",\n    \"view.main\",\n    \"connector.facade\",\n    \"session.facade\",\n    \"env.history-manager\",\n    \"lib.jquery\",\n    \"lib.jquery-ui\"\n\n], function(\n    utils,\n    config,\n    language,\n    paramsManager,\n    MainView,\n    ConnectorFacade,\n    SessionFacade,\n    HistoryManager\n    ){\n\n    var DNSmon = function(instance){\n        var env, internalParams, mergedParams, emptyParamVector, instanceParams, queryParams, parentDom, stylesLoaded,\n            cssListenerInterval, cssListenerTimeout, cssListener;\n\n        /*\n         * Load required stylesheets\n         */\n        stylesLoaded = document.styleSheets.length;\n        utils.loadCss(DNSMON_VIEW_URL + \"css/dnsmon_style.css\");\n        utils.loadCss(\"https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css\");\n\n        /*\n         * Access to the instance\n         */\n        instanceParams = instance.instanceParams;\n        queryParams = instance.queryParams;\n        parentDom = instance.domElement;\n\n        // STUFF FOR THE DEMO\n        window.grouping = utils.getUrlParam(\"grouping\") == \"true\";\n        window.dynamicHeight = utils.getUrlParam(\"dheight\") == \"true\";\n\n        /*\n         * Convert params\n         */\n        if (queryParams){\n            emptyParamVector = paramsManager.createInternalParamVector();\n            internalParams = paramsManager.fromExternalToInternal(queryParams);\n            mergedParams = paramsManager.mergeParams(emptyParamVector, internalParams);\n        }\n\n        /*\n         * Init Dependency Injection Vector\n         */\n        env = {\n            \"version\": \"14.9.3.2\",\n            \"widgetUrl\": DNSMON_WIDGET_URL,\n            \"parentDom\": parentDom, //HASH THIS\n            \"document\": utils.encapsulateDom($(document)),\n            \"config\": config,\n            \"params\": mergedParams,\n            \"lang\": language,\n            \"maxHeight\": ((instanceParams.hasOwnProperty(\"maxHeight\")) ? instanceParams.maxHeight : Math.max($(document).height(), config.chartMaxHeight)),\n            \"minHeight\": ((instanceParams.hasOwnProperty(\"minHeight\")) ? instanceParams.minHeight : config.chartMinHeight),\n            \"callbacks\": {\n                change: ((instanceParams.hasOwnProperty(\"change\")) ? [instanceParams.change] : []),\n                load: ((instanceParams.hasOwnProperty(\"load\")) ? [instanceParams.load] : [])\n            },\n\n            \"showFilter\":  ((instanceParams.hasOwnProperty(\"showFilter\")) ? instanceParams.showFilter : config.showFilterDefaultValue),\n            \"debugMode\": ((instanceParams.hasOwnProperty(\"debugMode\")) ? instanceParams.debugMode : (utils.getUrlParam('debug_mode') == 'true')),\n            \"activeKeys\": ((instanceParams.hasOwnProperty(\"activeKeys\")) ? instanceParams.activeKeys : config.activeKeysByDefault),\n            \"activeMouseZoom\": ((instanceParams.hasOwnProperty(\"activeMouseZoom\")) ? instanceParams.activeMouseZoom : config.activeMouseZoomByDefault),\n            \"activeGestures\": ((instanceParams.hasOwnProperty(\"activeGestures\")) ? instanceParams.activeGestures : config.activeGesturesByDefault),\n            \"localCacheActive\": ((instanceParams.hasOwnProperty(\"localCacheActive\")) ? instanceParams.localCacheActive : config.localCacheActiveByDefault),\n            \"grouping\": ((instanceParams.hasOwnProperty(\"grouping\")) ? instanceParams.grouping : config.groupingByDefault),\n            \"timeEventsActive\": config.timeEventsActiveByDefault,\n            \"isUpdatedPeriodicallyActive\": ((instanceParams.hasOwnProperty(\"autoUpdate\")) ? instanceParams.autoUpdate : config.autoUpdateActiveByDefault),\n            \"fullScreenActive\": ((instanceParams.hasOwnProperty(\"fullScreen\")) ? instanceParams.fullScreen : config.fullScreenActiveByDefault)\n        };\n\n\n        /*\n         * Initialize Point of Access to Packages\n         */\n        env.mainView = new MainView(env); //Representation Facade\n        env.connector = new ConnectorFacade(env); //Connector Facade\n        env.session = new SessionFacade(env); //Session Facade\n        env.history = new HistoryManager(env); //History Manager\n\n\n        /*\n         * Check if stylesheets are loaded\n         */\n        cssListenerInterval = 50; //50 ms\n        cssListenerTimeout = 10000; // 10 secs\n        cssListener = setInterval(function(){\n\n            if(document.styleSheets.length >= stylesLoaded + 2){\n\n                clearInterval(cssListener);\n                utils.logErrors(env.connector.persistError); //Persist errors\n                env.mainView.init(parentDom, instanceParams);\n\n            }else{\n                if (cssListenerTimeout <= 0){\n                    clearInterval(cssListener);\n                    console.log(\"It is not possible to load stylesheets.\");\n                }\n                cssListenerTimeout -= cssListenerInterval;\n            }\n        }, cssListenerInterval);\n\n\n        /**\n         * A set of methods exposed outside\n         */\n        return {\n\n            setParams: function(params){\n                var newParams;\n\n                newParams = paramsManager.fromExternalToInternal(params);\n                env.params = paramsManager.mergeParams(env.params, newParams);\n                env.mainView.redraw();\n            },\n\n            on: function(type, callback){\n                if (!env.callbacks[type]){\n                    env.callbacks[type] = [];\n                }\n                env.callbacks[type].push(callback);\n            },\n\n            off: function(type){\n                env.callbacks[type] = [];\n            },\n\n            getParams: function(){\n                return paramsManager.fromInternalToExternal(env.params);\n            },\n\n            getEnvironment: function(){\n                return env;\n            }\n\n        };\n\n    };\n\n    return DNSmon;\n});\n\n\n"]}