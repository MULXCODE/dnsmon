{
    "project": {
        "name": "DNSMON",
        "description": "The RIPE NCC DNS Monitoring Service (DNSMON) provides a comprehensive, objective and up-to-date overview of the quality of the service offered by high-level Domain Name System (DNS) servers",
        "version": "14.4.15.2",
        "url": "http://atlas.ripe.net/dnsmon/"
    },
    "files": {
        "connector/atlas/CacheConnectorAtlas.js": {
            "name": "connector/atlas/CacheConnectorAtlas.js",
            "modules": {
                "connector.Atlas": 1
            },
            "classes": {
                "CacheConnectorAtlas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/atlas/ErrorsHandlerConnectorAtlas.js": {
            "name": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "modules": {},
            "classes": {
                "ErrorsHandlerConnectorAtlas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/atlas/IsolationLevelConnectorAtlas.js": {
            "name": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "modules": {},
            "classes": {
                "IsolationLevelConnectorAtlas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/atlas/RestConnectorAtlas.js": {
            "name": "connector/atlas/RestConnectorAtlas.js",
            "modules": {},
            "classes": {
                "Connector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/AggregationLevelConnector.js": {
            "name": "connector/AggregationLevelConnector.js",
            "modules": {
                "connector": 1
            },
            "classes": {
                "AggregationLevelConnector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/AntiFloodConnector.js": {
            "name": "connector/AntiFloodConnector.js",
            "modules": {},
            "classes": {
                "AntiFloodConnector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/ConnectorFacade.js": {
            "name": "connector/ConnectorFacade.js",
            "modules": {},
            "classes": {
                "ConnectorFacade": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "connector/FilterConnector.js": {
            "name": "connector/FilterConnector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "controller/removed/ControllerManager.js": {
            "name": "controller/removed/ControllerManager.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "controller/GesturesManager.js": {
            "name": "controller/GesturesManager.js",
            "modules": {
                "controller": 1
            },
            "classes": {
                "GesturesManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "controller/TimeController.js": {
            "name": "controller/TimeController.js",
            "modules": {},
            "classes": {
                "TimeController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "environment/languages/lang-en.js": {
            "name": "environment/languages/lang-en.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "environment/removed/environment.js": {
            "name": "environment/removed/environment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "environment/HistoryManager.js": {
            "name": "environment/HistoryManager.js",
            "modules": {
                "environment": 1
            },
            "classes": {
                "HistoryManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "environment/ParamsManager.js": {
            "name": "environment/ParamsManager.js",
            "modules": {},
            "classes": {
                "ParamsManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "environment/config.js": {
            "name": "environment/config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "environment/utils.js": {
            "name": "environment/utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/jquery-ui.timepicker.js": {
            "name": "lib/jquery-ui.timepicker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "model/Cell.js": {
            "name": "model/Cell.js",
            "modules": {
                "model": 1
            },
            "classes": {
                "Cell": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "model/Row.js": {
            "name": "model/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "session/SessionManager.js": {
            "name": "session/SessionManager.js",
            "modules": {
                "session": 1
            },
            "classes": {
                "SessionManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/removed/DataAccessibilityView.js": {
            "name": "view/removed/DataAccessibilityView.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "view/removed/PTimeView.js": {
            "name": "view/removed/PTimeView.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "view/svg/SvgChartView.js": {
            "name": "view/svg/SvgChartView.js",
            "modules": {
                "view.svg": 1
            },
            "classes": {
                "SvgChartView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/svg/SvgContainerView.js": {
            "name": "view/svg/SvgContainerView.js",
            "modules": {},
            "classes": {
                "SvgContainerView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/svg/SvgOrdinalAxisView.js": {
            "name": "view/svg/SvgOrdinalAxisView.js",
            "modules": {},
            "classes": {
                "SvgOrdinalAxisView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/svg/SvgTimeAxisView.js": {
            "name": "view/svg/SvgTimeAxisView.js",
            "modules": {},
            "classes": {
                "SvgTimeAxisView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/BreadcrumbsView.js": {
            "name": "view/BreadcrumbsView.js",
            "modules": {
                "view": 1
            },
            "classes": {
                "BreadcrumbsView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/ControlPanelView.js": {
            "name": "view/ControlPanelView.js",
            "modules": {},
            "classes": {
                "ControlPanelView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/FullScreenView.js": {
            "name": "view/FullScreenView.js",
            "modules": {},
            "classes": {
                "FullScreenView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/MainView.js": {
            "name": "view/MainView.js",
            "modules": {},
            "classes": {
                "MainView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/PopUpView.js": {
            "name": "view/PopUpView.js",
            "modules": {},
            "classes": {
                "PopUpView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/TemplateManagerView.js": {
            "name": "view/TemplateManagerView.js",
            "modules": {},
            "classes": {
                "TemplateManagerView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "view/TimeOverviewView.js": {
            "name": "view/TimeOverviewView.js",
            "modules": {},
            "classes": {
                "TimeOverviewView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dnsmon-loader.js": {
            "name": "dnsmon-loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "dnsmon-ripestat-loader.js": {
            "name": "dnsmon-ripestat-loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "dnsmon-widget-main.js": {
            "name": "dnsmon-widget-main.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "connector.Atlas": {
            "name": "connector.Atlas",
            "submodules": {},
            "classes": {
                "CacheConnectorAtlas": 1,
                "ErrorsHandlerConnectorAtlas": 1,
                "IsolationLevelConnectorAtlas": 1,
                "Connector": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "connector/atlas/RestConnectorAtlas.js",
            "line": 5,
            "description": "CacheConnectorAtlas is the cache level dedicated to the atlas data-api for DNSMON.\nIt provides a bottom-up incremental cache and top-down decremental queries."
        },
        "connector": {
            "name": "connector",
            "submodules": {},
            "classes": {
                "AggregationLevelConnector": 1,
                "AntiFloodConnector": 1,
                "ConnectorFacade": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "connector/ConnectorFacade.js",
            "line": 11,
            "description": "AggregationLevelConnector introduces in the query all the information related to the aggregation level.\nIt provides a transparent layer between the tool and the data implementing all the logic\nabout the data aggregation."
        },
        "controller": {
            "name": "controller",
            "submodules": {},
            "classes": {
                "GesturesManager": 1,
                "TimeController": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "controller/TimeController.js",
            "line": 14,
            "description": "GesturesManager provides all the features handling user gestures/interactions."
        },
        "environment": {
            "name": "environment",
            "submodules": {},
            "classes": {
                "HistoryManager": 1,
                "ParamsManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "environment/ParamsManager.js",
            "line": 9,
            "description": "HistoryManager provides all the functions to manage the history and the back/forward browser interactions."
        },
        "model": {
            "name": "model",
            "submodules": {},
            "classes": {
                "Cell": 1,
                "Row": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "model/Row.js",
            "line": 11,
            "description": "Cell is the model object for a cell."
        },
        "session": {
            "name": "session",
            "submodules": {},
            "classes": {
                "SessionManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "session/SessionManager.js",
            "line": 10,
            "description": "SessionManager is the layer providing all the functions to manage the session.\nIt provides a transparent layer for the tool to store and retrieve parameters.\nThe persistence can be provided (or not) by cookies or with any other possible server interaction."
        },
        "view.svg": {
            "name": "view.svg",
            "submodules": {},
            "classes": {
                "SvgChartView": 1,
                "SvgContainerView": 1,
                "SvgOrdinalAxisView": 1,
                "SvgTimeAxisView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "view/svg/SvgTimeAxisView.js",
            "line": 6,
            "description": "SvgChartView is the view component representing the chart in SVG terms"
        },
        "view": {
            "name": "view",
            "submodules": {},
            "classes": {
                "BreadcrumbsView": 1,
                "ControlPanelView": 1,
                "FullScreenView": 1,
                "MainView": 1,
                "PopUpView": 1,
                "TemplateManagerView": 1,
                "TimeOverviewView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "view/TimeOverviewView.js",
            "line": 13,
            "description": "BreadcrumbsView is the view component for the breadcrumbs function"
        }
    },
    "classes": {
        "CacheConnectorAtlas": {
            "name": "CacheConnectorAtlas",
            "shortname": "CacheConnectorAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector.Atlas",
            "file": "connector/atlas/CacheConnectorAtlas.js",
            "line": 16,
            "description": "CacheConnectorAtlas is the cache level dedicated to the atlas data-api for DNSMON.\nIt provides a bottom-up incremental cache and top-down decremental queries.",
            "is_constructor": 1
        },
        "ErrorsHandlerConnectorAtlas": {
            "name": "ErrorsHandlerConnectorAtlas",
            "shortname": "ErrorsHandlerConnectorAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector.Atlas",
            "namespace": "",
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 14,
            "description": "ErrorsHandlerConnectorAtlas checks the validity of the JSON input and handle errors raised by the data-api.",
            "is_constructor": 1
        },
        "IsolationLevelConnectorAtlas": {
            "name": "IsolationLevelConnectorAtlas",
            "shortname": "IsolationLevelConnectorAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector.Atlas",
            "namespace": "",
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 23,
            "description": "IsolationLevelConnectorAtlas has a fundamental role providing isolation between the internal input format\nand the external input format. It allows to block the propagation of changes affecting the JSON format\nprovided by the data-api. In addition it is a transposition level between a format convenient for the\ndata-api (e.g. light data data format) and a format convenient for the tool (e.g. less computation format).",
            "is_constructor": 1
        },
        "Connector": {
            "name": "Connector",
            "shortname": "Connector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector.Atlas",
            "namespace": "",
            "file": "connector/atlas/RestConnectorAtlas.js",
            "line": 5,
            "description": "Connector is in charge of connecting the data-apis and providing a JSON format to the layers over.",
            "is_constructor": 1
        },
        "AggregationLevelConnector": {
            "name": "AggregationLevelConnector",
            "shortname": "AggregationLevelConnector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector",
            "namespace": "",
            "file": "connector/AggregationLevelConnector.js",
            "line": 10,
            "description": "AggregationLevelConnector introduces in the query all the information related to the aggregation level.\nIt provides a transparent layer between the tool and the data implementing all the logic\nabout the data aggregation.",
            "is_constructor": 1
        },
        "AntiFloodConnector": {
            "name": "AntiFloodConnector",
            "shortname": "AntiFloodConnector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector",
            "namespace": "",
            "file": "connector/AntiFloodConnector.js",
            "line": 15,
            "description": "AntiFloodConnector it is a layer implementing a client-side anti-flood system.\nThis anti-flood layer allows cumulative query to the data-api reducing considerably the amount of\ninteractions with the network stack.",
            "is_constructor": 1
        },
        "ConnectorFacade": {
            "name": "ConnectorFacade",
            "shortname": "ConnectorFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "connector",
            "namespace": "",
            "file": "connector/ConnectorFacade.js",
            "line": 11,
            "description": "ConnectorFacade is the singleton Facade of the whole connector level.\nIt provides high-level connectivity functions able to receive as input model objects and converting\nthem in low-level parameters.",
            "is_constructor": 1
        },
        "GesturesManager": {
            "name": "GesturesManager",
            "shortname": "GesturesManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controller",
            "namespace": "",
            "file": "controller/GesturesManager.js",
            "line": 14,
            "description": "GesturesManager provides all the features handling user gestures/interactions.",
            "is_constructor": 1
        },
        "TimeController": {
            "name": "TimeController",
            "shortname": "TimeController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controller",
            "namespace": "",
            "file": "controller/TimeController.js",
            "line": 14,
            "description": "TimeController provides all the functions to manage the time in the tool.",
            "is_constructor": 1
        },
        "HistoryManager": {
            "name": "HistoryManager",
            "shortname": "HistoryManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "environment",
            "namespace": "",
            "file": "environment/HistoryManager.js",
            "line": 10,
            "description": "HistoryManager provides all the functions to manage the history and the back/forward browser interactions.",
            "is_constructor": 1
        },
        "ParamsManager": {
            "name": "ParamsManager",
            "shortname": "ParamsManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "environment",
            "namespace": "",
            "file": "environment/ParamsManager.js",
            "line": 9,
            "description": "ParamsManager is the only component aware about the translation between external and internal parameters.\nIt allows to have high-level internal parameters expressed as visualisation terms and external domain related\nparameters. This approach allows to easily introduce at any time new \"views\" based on different data elements\nusing the same graphic metaphor.",
            "is_constructor": 1
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "model",
            "namespace": "",
            "file": "model/Cell.js",
            "line": 14,
            "description": "Cell is the model object for a cell.",
            "is_constructor": 1
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "model",
            "namespace": "",
            "file": "model/Row.js",
            "line": 11,
            "description": "Row is the model object for a row.",
            "is_constructor": 1
        },
        "SessionManager": {
            "name": "SessionManager",
            "shortname": "SessionManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "session/SessionManager.js",
            "line": 10,
            "description": "SessionManager is the layer providing all the functions to manage the session.\nIt provides a transparent layer for the tool to store and retrieve parameters.\nThe persistence can be provided (or not) by cookies or with any other possible server interaction.",
            "is_constructor": 1
        },
        "SvgChartView": {
            "name": "SvgChartView",
            "shortname": "SvgChartView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view.svg",
            "namespace": "",
            "file": "view/svg/SvgChartView.js",
            "line": 15,
            "description": "SvgChartView is the view component representing the chart in SVG terms",
            "is_constructor": 1
        },
        "SvgContainerView": {
            "name": "SvgContainerView",
            "shortname": "SvgContainerView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view.svg",
            "namespace": "",
            "file": "view/svg/SvgContainerView.js",
            "line": 16,
            "description": "SvgContainerView is the view component representing the SVG container",
            "is_constructor": 1
        },
        "SvgOrdinalAxisView": {
            "name": "SvgOrdinalAxisView",
            "shortname": "SvgOrdinalAxisView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view.svg",
            "namespace": "",
            "file": "view/svg/SvgOrdinalAxisView.js",
            "line": 6,
            "description": "SvgOrdinalAxisView is the view component representing the y-axis in SVG terms.\nIt provides additional functions to manage interactions with the y elements.",
            "is_constructor": 1
        },
        "SvgTimeAxisView": {
            "name": "SvgTimeAxisView",
            "shortname": "SvgTimeAxisView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view.svg",
            "namespace": "",
            "file": "view/svg/SvgTimeAxisView.js",
            "line": 6,
            "description": "SvgTimeAxisView is the view component representing the x-axis in SVG terms.\nIt provides additional functions to manage interactions with the x elements.",
            "is_constructor": 1
        },
        "BreadcrumbsView": {
            "name": "BreadcrumbsView",
            "shortname": "BreadcrumbsView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/BreadcrumbsView.js",
            "line": 10,
            "description": "BreadcrumbsView is the view component for the breadcrumbs function",
            "is_constructor": 1
        },
        "ControlPanelView": {
            "name": "ControlPanelView",
            "shortname": "ControlPanelView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/ControlPanelView.js",
            "line": 12,
            "description": "ControlPanelView is the view component managing the representation of the control panel",
            "is_constructor": 1
        },
        "FullScreenView": {
            "name": "FullScreenView",
            "shortname": "FullScreenView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/FullScreenView.js",
            "line": 8,
            "description": "FullScreenView is the view component for the full screen feature",
            "is_constructor": 1
        },
        "MainView": {
            "name": "MainView",
            "shortname": "MainView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/MainView.js",
            "line": 27,
            "description": "MainView is a mandatory view component in charge of initialising and coordinating the whole\nrepresentation layer",
            "is_constructor": 1
        },
        "PopUpView": {
            "name": "PopUpView",
            "shortname": "PopUpView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/PopUpView.js",
            "line": 9,
            "description": "PopUpView is the view component for the cell's pop-up function",
            "is_constructor": 1
        },
        "TemplateManagerView": {
            "name": "TemplateManagerView",
            "shortname": "TemplateManagerView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/TemplateManagerView.js",
            "line": 10,
            "description": "TemplateManagerView is the component in charge of creating and manipulating the HTML dom elements.",
            "is_constructor": 1
        },
        "TimeOverviewView": {
            "name": "TimeOverviewView",
            "shortname": "TimeOverviewView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "",
            "file": "view/TimeOverviewView.js",
            "line": 13,
            "description": "TimeOverviewView is the view component providing the time overview bar.\nIt allows the user to easily interact with the TimeController.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "connector/atlas/CacheConnectorAtlas.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:38 PM\nTo change this template use File | Settings | File Templates.",
            "class": "CacheConnectorAtlas"
        },
        {
            "file": "connector/atlas/CacheConnectorAtlas.js",
            "line": 75,
            "description": "It is strongly related to a particular JSON format.\nFrom top to bottom: tries to reduce the amount of data requested based on the available data in cache.\nFrom bottom to top: enrich the retrieved subset of data with the data already in cache.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "CacheConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:27 PM\nTo change this template use File | Settings | File Templates.",
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 41,
            "description": "From bottom to top: check the JSON validity and handles the error raised by the data-api.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 95,
            "description": "This method tries to reconnect to the server in case of failures and provides a feedback to the user.",
            "itemtype": "method",
            "name": "_tryToReconnect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 121,
            "description": "This method tries to restore the previous working query in case of failures and provides a feedback to the user.",
            "itemtype": "method",
            "name": "_restorePreviousWorkingQuery",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 143,
            "description": "This method dispatches to _handle all the data-api errors",
            "itemtype": "method",
            "name": "_handleDataApiErrors",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The data blob retrieved from the data-api",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 167,
            "description": "It provides a different method to handle each error raised from the data-api.",
            "itemtype": "method",
            "name": "_handle",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "A string representing the type of the error",
                    "type": "String"
                }
            ],
            "return": {
                "description": "type A string describing the error",
                "type": "String"
            },
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 197,
            "description": "This method sets the global error state.\nA global error is a blocking error that can not be handled by other components of the tool",
            "itemtype": "method",
            "name": "_setGlobalErrorState",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "isError",
                    "description": "A boolean representing the current error state",
                    "type": "Boolean"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 211,
            "description": "It checks if the retrieved JSON contains all the mandatory fields for all the possible views.",
            "itemtype": "method",
            "name": "_checkDataFormat",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 232,
            "description": "It checks if the retrieved JSON contains all the mandatory fields.",
            "itemtype": "method",
            "name": "_checkAllFields",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 249,
            "description": "It checks if the retrieved JSON contains a certain mandatory field.",
            "itemtype": "method",
            "name": "_checkField",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 268,
            "description": "It checks the responsiveness of the data-api to provide a feedback to the user.",
            "itemtype": "method",
            "name": "_responsivenessCheck",
            "access": "private",
            "tagname": "",
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 284,
            "description": "Get the human readable version of the DNS response and check errors",
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/ErrorsHandlerConnectorAtlas.js",
            "line": 302,
            "description": "Get the closest traceroutes and checks errors",
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ErrorsHandlerConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:35 AM\nTo change this template use File | Settings | File Templates.",
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 108,
            "description": "It is strongly related to a particular JSON format.\nFrom top to bottom: uses paramsManager to translate the internal format of the parameters in the format valid outside.\nFrom bottom to top: translates the external input data in the internal format.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 133,
            "description": "This method translates parameters from the internal to the external format",
            "itemtype": "method",
            "name": "_parseParams",
            "params": [
                {
                    "name": "params",
                    "description": "A params vector",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A params vector in the internal format",
                "type": "Object"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 145,
            "description": "This method translates a server from the external to the internal format",
            "itemtype": "method",
            "name": "_parseSingleServer",
            "params": [
                {
                    "name": "server",
                    "description": "A server described in the external format",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A server described in the internal format",
                "type": "Object"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 168,
            "description": "This method translates a zone from the external to the internal format",
            "itemtype": "method",
            "name": "_parseSingleServer",
            "params": [
                {
                    "name": "zone",
                    "description": "A zone described in the external format",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A zone described in the internal format",
                "type": "Object"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 191,
            "description": "This method initialises the parsing of the input JSON",
            "itemtype": "method",
            "name": "_parseData",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The external data structure",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The internal data structure",
                "type": "Object"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 266,
            "description": "Parses all the servers available in the JSON in order to create an internal compatible version of them",
            "itemtype": "method",
            "name": "_parseServers",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "servers",
                    "description": "A list of server",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 323,
            "description": "This method translates the URLs of additional data-api reported in the JSON in the internal format",
            "itemtype": "method",
            "name": "_generateJsonUrls",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "urlsMap",
                    "description": "A map of URLs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A map of URLs translated in the internal format",
                "type": "Object"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 366,
            "description": "This method abbreviates the labels for IPv6 addresses",
            "itemtype": "method",
            "name": "_abbreviateIPv6Label",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "label",
                    "description": "An IP address",
                    "type": "String"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 407,
            "description": "This method abbreviates the labels",
            "itemtype": "method",
            "name": "_abbreviateLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "label",
                    "description": "A label",
                    "type": "String"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 434,
            "description": "Parses all the probes available in the JSON in order to create an internal compatible version of them",
            "itemtype": "method",
            "name": "_parseProbes",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "probes",
                    "description": "A list of probes",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 478,
            "description": "Parses all results retrieved in the JSON for the current row",
            "itemtype": "method",
            "name": "_parseResults",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "results",
                    "description": "A list of results",
                    "type": "Object"
                },
                {
                    "name": "row",
                    "description": "An object of the model layer representing the row",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 552,
            "description": "Enriches the cell object of the model layer with the rcodes error retrieved in the JSON for the conresponding result",
            "itemtype": "method",
            "name": "_parseRcodes",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cell",
                    "description": "An object of the model layer",
                    "type": "Object"
                },
                {
                    "name": "cellData",
                    "description": "A result/cell of the JSON input",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 588,
            "description": "Computes the percentage of correct responses",
            "itemtype": "method",
            "name": "_computeNumberCorrectResponses",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cellData",
                    "description": "A result/cell of the JSON input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a percentage",
                "type": "Number"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 605,
            "description": "Computes the unanswered queries of a cell/result",
            "itemtype": "method",
            "name": "_computePacketLoss",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cellData",
                    "description": "A result/cell of the JSON input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a percentage",
                "type": "Float"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 623,
            "description": "Computes the RTT of a cell/result",
            "itemtype": "method",
            "name": "_computeRespondingTime",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cellData",
                    "description": "A result/cell of the JSON input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a RTT value",
                "type": "Number"
            },
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 641,
            "description": "Get the DNS response data and translates it in an internal stable format",
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/IsolationLevelConnectorAtlas.js",
            "line": 689,
            "description": "Get the closest traceroutes data and translates it in an internal stable format",
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "IsolationLevelConnectorAtlas",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/RestConnectorAtlas.js",
            "line": 89,
            "description": "It is strongly dedicated to a particular data-api.\nFrom top to bottom: given some data-api valid parameters, it provides a method to connect to the data-api and query for that parameters.\nFrom bottom to top: provides the raw JSON to the received callback.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A parameters vector valid for the data-api",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "Connector",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/RestConnectorAtlas.js",
            "line": 143,
            "description": "Get the DNS response from the data-api",
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "Connector",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/atlas/RestConnectorAtlas.js",
            "line": 179,
            "description": "Get the closest traceroutes data from the data-api",
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "Connector",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/AggregationLevelConnector.js",
            "line": 1,
            "description": "Created by mcandela on 17/12/13.",
            "class": "AggregationLevelConnector",
            "module": "connector.Atlas"
        },
        {
            "file": "connector/AggregationLevelConnector.js",
            "line": 27,
            "description": "From top to bottom: it injects information about the aggregation level.\nFrom bottom to top: it parse information about the aggregation level",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A parameters vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it will be ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AggregationLevelConnector",
            "module": "connector"
        },
        {
            "file": "connector/AggregationLevelConnector.js",
            "line": 85,
            "description": "Get the DNS response",
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AggregationLevelConnector",
            "module": "connector"
        },
        {
            "file": "connector/AggregationLevelConnector.js",
            "line": 101,
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AggregationLevelConnector",
            "module": "connector"
        },
        {
            "file": "connector/AntiFloodConnector.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:27 PM\nTo change this template use File | Settings | File Templates.",
            "class": "AntiFloodConnector",
            "module": "connector"
        },
        {
            "file": "connector/AntiFloodConnector.js",
            "line": 33,
            "description": "From top to bottom: it drops or aggregates queries.\nFrom bottom to top: it responds to the single query in the usual way.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A parameters vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AntiFloodConnector",
            "module": "connector"
        },
        {
            "file": "connector/AntiFloodConnector.js",
            "line": 59,
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AntiFloodConnector",
            "module": "connector"
        },
        {
            "file": "connector/AntiFloodConnector.js",
            "line": 74,
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "msmId",
                    "description": "The id of the measurement",
                    "type": "Number"
                },
                {
                    "name": "prbId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "A UNIX timestamp",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "AntiFloodConnector",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 1,
            "description": "Created by mcandela on 23/01/14.",
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 27,
            "description": "From top to bottom: it provides a way to query the data-api with the current valid parameters.",
            "itemtype": "method",
            "name": "retrieveData",
            "params": [
                {
                    "name": "params",
                    "description": "A parameters vector",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 52,
            "itemtype": "method",
            "name": "getRows",
            "return": {
                "description": "A list of rows",
                "type": "Array"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 67,
            "itemtype": "method",
            "name": "getRowById",
            "params": [
                {
                    "name": "id",
                    "description": "An id",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A row of the model layer",
                "type": "Object"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 92,
            "itemtype": "method",
            "name": "getGroup",
            "return": {
                "description": "A group",
                "type": "Object"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 103,
            "itemtype": "method",
            "name": "getCellDataUrls",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A map of URLs for the selected sample",
                "type": "Object"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 138,
            "itemtype": "method",
            "name": "getProbesPageUrl",
            "params": [
                {
                    "name": "probeId",
                    "description": "The id of the probe",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "description": "A parameters vector",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An URL",
                "type": "String"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 151,
            "itemtype": "method",
            "name": "getDataUrls",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A map of URLs for the whole time window",
                "type": "Object"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 178,
            "itemtype": "method",
            "name": "getNativeDnsResult",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 197,
            "itemtype": "method",
            "name": "getClosestTraceroutes",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 218,
            "itemtype": "method",
            "name": "_getMeasurementId",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A function taking the retrieved data as input when it is ready",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/ConnectorFacade.js",
            "line": 243,
            "itemtype": "method",
            "name": "_getMeasurementIdByType",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cell",
                    "description": "A cell object",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "A valid type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The measurement id",
                "type": "Number"
            },
            "class": "ConnectorFacade",
            "module": "connector"
        },
        {
            "file": "connector/FilterConnector.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:38 PM\nTo change this template use File | Settings | File Templates.",
            "class": "GesturesManager",
            "module": "connector"
        },
        {
            "file": "controller/removed/ControllerManager.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/18/13\nTime: 9:37 AM\nTo change this template use File | Settings | File Templates.",
            "class": "GesturesManager",
            "module": "connector"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 10:59 AM\nTo change this template use File | Settings | File Templates.",
            "class": "GesturesManager",
            "module": "connector"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 39,
            "description": "Attach a callback to a gesture",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "evt",
                    "description": "An event id",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context of the callback",
                    "type": "Object"
                }
            ],
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 63,
            "description": "Initialise all the events related to the mouse wheel",
            "itemtype": "method",
            "name": "_initMouseWheel",
            "access": "private",
            "tagname": "",
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 154,
            "description": "Initialise all the events",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 170,
            "description": "Initialise labels on the y-axis",
            "itemtype": "method",
            "name": "_initializeActiveLabels",
            "access": "private",
            "tagname": "",
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 208,
            "description": "Initialise the selection tool",
            "itemtype": "method",
            "name": "_initializeSelectionTool",
            "access": "private",
            "tagname": "",
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 570,
            "description": "This function is called when an user clicks on a cell",
            "itemtype": "method",
            "name": "_clickEvent",
            "access": "private",
            "tagname": "",
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 590,
            "description": "This function computes the new sub-domain after a selection",
            "itemtype": "method",
            "name": "_computeSubDomains",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "finalStartCoords",
                    "description": "The top-left point of the selection",
                    "type": "Number"
                },
                {
                    "name": "finalEndCoords",
                    "description": "The bottom-right point of the selection",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The new domain",
                "type": "Array"
            },
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/GesturesManager.js",
            "line": 613,
            "description": "This function computes and applies the new sub-domain after a selection",
            "itemtype": "method",
            "name": "_computeSubDomainsAndApply",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "startCoords",
                    "description": "The top-left point of the selection",
                    "type": "Number"
                },
                {
                    "name": "endCoords",
                    "description": "The bottom-right point of the selection",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "True if the new domain is applied",
                "type": "Boolean"
            },
            "class": "GesturesManager",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/18/13\nTime: 9:32 AM\nTo change this template use File | Settings | File Templates.",
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 39,
            "description": "Checks if it is possible to zoom-out with the current selection",
            "itemtype": "method",
            "name": "_isZoomableOut",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selection",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "True if the zoom-out is applicable",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 56,
            "description": "Checks if it is possible to zoom-in with the current selection",
            "itemtype": "method",
            "name": "_isZoomableIn",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selection",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "True if the zoom-in is applicable",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 77,
            "description": "Checks if it is possible to shift left the time window",
            "itemtype": "method",
            "name": "_isTranslableLeft",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "True if the shift is applicable",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 91,
            "description": "Checks if it is possible to shift right the time window",
            "itemtype": "method",
            "name": "_isTranslableRight",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "True if the shift is applicable",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 120,
            "description": "Zoom in the chart",
            "itemtype": "method",
            "name": "zoomIn",
            "params": [
                {
                    "name": "zoomLevel",
                    "description": "A value to be applied at the current zoom",
                    "type": "Number"
                }
            ],
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 150,
            "description": "Zoom out the chart",
            "itemtype": "method",
            "name": "zoomOut",
            "params": [
                {
                    "name": "zoomLevel",
                    "description": "A value to be applied at the current zoom",
                    "type": "Number"
                }
            ],
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 182,
            "description": "Shift left the time window",
            "itemtype": "method",
            "name": "shiftLeft",
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 211,
            "description": "Shift right the time window",
            "itemtype": "method",
            "name": "shiftRight",
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 240,
            "description": "Check if the new selection is a sub-selection of the previous one",
            "itemtype": "method",
            "name": "isSelectionReduced",
            "params": [
                {
                    "name": "selectedRows",
                    "description": "The new list of selected rows",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True if the new selection is a sub-selection of the previous one",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 257,
            "description": "Check if the new selection can be applied",
            "itemtype": "method",
            "name": "isSubSelectable",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selections",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                },
                {
                    "name": "selectedRows",
                    "description": "The new list of selected rows",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True if the new selection can be applied",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 281,
            "description": "Check if the new selection can be reduced",
            "itemtype": "method",
            "name": "isReducible",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selections",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "True if the new selection can be reduced",
                "type": "Boolean"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 304,
            "description": "Update the status of the controller parameters of the whole widget.",
            "itemtype": "method",
            "name": "updateStatus",
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 333,
            "description": "Update the chart with the latest available data",
            "itemtype": "method",
            "name": "getNewData",
            "params": [
                {
                    "name": "timeWindow",
                    "description": "A time window express as seconds if null the current one will be used",
                    "type": "Integer"
                }
            ],
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 352,
            "description": "Given a time interval, this function checks if it is valid otherwise it returns the closer valid selection",
            "itemtype": "method",
            "name": "getZoomableWindow",
            "params": [
                {
                    "name": "startDate",
                    "description": "The start date of the new selections",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The end date of the new selection",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Returns start and end time (two Date Objects)",
                "type": "Object"
            },
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "controller/TimeController.js",
            "line": 387,
            "description": "This function starts the auto-update feature.",
            "itemtype": "method",
            "name": "keepUpdated",
            "params": [
                {
                    "name": "keepUpdate",
                    "description": "If true the auto-update feature starts",
                    "type": "Boolean"
                }
            ],
            "class": "TimeController",
            "module": "controller"
        },
        {
            "file": "environment/languages/lang-en.js",
            "line": 1,
            "description": "Created by mcandela on 23/01/14.",
            "class": "HistoryManager",
            "module": "controller"
        },
        {
            "file": "environment/removed/environment.js",
            "line": 1,
            "description": "Created by mcandela on 23/01/14.",
            "class": "HistoryManager",
            "module": "controller"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 1,
            "description": "Created by mcandela on 11/12/13.",
            "class": "HistoryManager",
            "module": "controller"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 29,
            "description": "This method initis the module. It pushes in the history and updates the URL with the initialisation query\nand session parameters.",
            "itemtype": "method",
            "name": "init",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 46,
            "description": "This method pushes in the history and updates the URL with the actual query and session parameters.",
            "itemtype": "method",
            "name": "update",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 70,
            "description": "This method pushes in the history and updates the URL with the actual query and session parameters.",
            "itemtype": "method",
            "name": "_generateStateUrl",
            "access": "private",
            "tagname": "",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 83,
            "description": "This method creates an URL with all the session parameters.",
            "itemtype": "method",
            "name": "_generateSessionUrl",
            "access": "private",
            "tagname": "",
            "input": "{Object} session A vector of session parameters",
            "return": {
                "description": "The updated URL",
                "type": "String"
            },
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 106,
            "description": "This method updates the given URL with all the query parameters.",
            "itemtype": "method",
            "name": "_generateParametersUrl",
            "access": "private",
            "tagname": "",
            "input": "{String} sessionUrl An URL",
            "return": {
                "description": "The updated URL",
                "type": "String"
            },
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 130,
            "description": "This method is triggered every time there is a back/forward event in the browser. It recovers and applies\nthe history.",
            "itemtype": "method",
            "name": "updateStatusFromUrl",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 160,
            "description": "This method applies the current permalink to the scene.",
            "itemtype": "method",
            "name": "setStatusFromUrl",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/HistoryManager.js",
            "line": 187,
            "description": "This method re-creates a navigation history given a vector of query parameters.\nSo it allows the user to share also a navigation history by sharing a permalink.",
            "itemtype": "method",
            "name": "_createHistory",
            "access": "private",
            "tagname": "",
            "class": "HistoryManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 1,
            "description": "Created by mcandela on 11/12/13.",
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 23,
            "description": "This method merges two parameters vectors",
            "itemtype": "method",
            "name": "mergeParams",
            "input": "{Object} newParams A vector of parameters",
            "return": {
                "description": "A vector of parameters",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 41,
            "description": "This method converts the parameters vector from the external to the internal format.\nIt is an indirection layer able to converts parameters from an external domain to a graphical domain\nstopping at the same time the propagation of changes involving the external parameters.",
            "itemtype": "method",
            "name": "fromExternalToInternal",
            "input": "{Object} params A vector of parameters",
            "return": {
                "description": "A vector of parameters",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 164,
            "description": "This method converts the parameters vector from the internal to the external format.\nIt is the opposite of fromExternalToInternal.",
            "itemtype": "method",
            "name": "fromInternalToExternal",
            "input": "{Object} params A vector of parameters",
            "return": {
                "description": "A vector of parameters",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 231,
            "description": "This method is an input checker for the external parameters.",
            "itemtype": "method",
            "name": "_helper",
            "access": "private",
            "tagname": "",
            "input": "{Object} parameters A vector of parameters",
            "return": {
                "description": "A vector of parameters cased with the cast functions described in the validationMap",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 278,
            "description": "This method initializes an empty/default vector of parameters",
            "itemtype": "method",
            "name": "createInternalParamVector",
            "return": {
                "description": "A vector of parameters",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 301,
            "description": "This method converts IDs from the external to the internal format",
            "itemtype": "method",
            "name": "convertRemoteToLocalId",
            "input": "{String} remoteId An ID in the external format",
            "return": {
                "description": "An ID in the internal format",
                "type": "String"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 316,
            "description": "This method converts IDs from the internal to the external format",
            "itemtype": "method",
            "name": "convertLocalToRemoteId",
            "input": "{String} remoteId An ID in the internal format",
            "return": {
                "description": "An ID in the external format",
                "type": "String"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 331,
            "description": "This method converts Dates from the internal to the external format",
            "itemtype": "method",
            "name": "convertLocalToRemoteDate",
            "input": "{Date} local A Date object",
            "return": {
                "description": "A Unix timestamp",
                "type": "Number"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 344,
            "description": "This method converts Dates from the external to the internal format",
            "itemtype": "method",
            "name": "convertRemoteToLocalDate",
            "input": "{Date} remote A date object in the external format",
            "return": {
                "description": "A Unix timestamp",
                "type": "Number"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 357,
            "description": "This method converts Types from the external to the internal format",
            "itemtype": "method",
            "name": "convertRemoteToLocalType",
            "input": "{String} remote A Type in the external format",
            "return": {
                "description": "A Type in the internal format",
                "type": "String"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 382,
            "description": "This method converts types from the internal to the external format",
            "itemtype": "method",
            "name": "convertLocalToRemoteType",
            "input": "{String} local A Type in the internal format",
            "return": {
                "description": "A Type in the external format",
                "type": "String"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 407,
            "description": "This method converts time windows from the external to the internal format",
            "itemtype": "method",
            "name": "convertRemoteToLocalTimeWindow",
            "input": "{Object} remote A time window can be expressed as a string (i.e. \"5h\", \"1d\", \"1w\", \"1m\") or as an amount of seconds",
            "return": {
                "description": "A time window expressed in seconds",
                "type": "Number"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/ParamsManager.js",
            "line": 446,
            "description": "This method converts time windows from the internal to the external format",
            "itemtype": "method",
            "name": "convertLocalToRemoteTimeWindow",
            "input": "{Number} local A time window expressed in seconds",
            "return": {
                "description": "A time window expressed in seconds, in future also strings can be used",
                "type": "Object"
            },
            "class": "ParamsManager",
            "module": "environment"
        },
        {
            "file": "environment/config.js",
            "line": 4,
            "description": "Configuration file",
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "environment/utils.js",
            "line": 5,
            "description": "A collection of utilities",
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1267,
            "description": "Public utility to format the time",
            "params": [
                {
                    "name": "format",
                    "description": "format of the time",
                    "type": "String"
                },
                {
                    "name": "time",
                    "description": "Object not a Date for timezones",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "essentially the regional[].. amNames, pmNames, ampm",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "the formatted time",
                "type": "String"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1921,
            "description": "Get the timezone offset as string from a date object (eg '+0530' for UTC+5.5)",
            "params": [
                {
                    "name": "tzMinutes",
                    "description": "if not a number, less than -720 (-1200), or greater than 840 (+1400) this value is returned",
                    "type": "Number"
                },
                {
                    "name": "iso8601",
                    "description": "if true formats in accordance to iso8601 \"+12:45\"",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1944,
            "description": "Get the number in minutes that represents a timezone string",
            "params": [
                {
                    "name": "tzString",
                    "description": "formatted like \"+0500\", \"-1245\", \"Z\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the offset minutes or the original string if it doesn't match expectations",
                "type": "Number"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1965,
            "description": "No way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "toTimezone",
                    "description": "formatted like \"+0500\", \"-1245\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1979,
            "description": "Calls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.\nn.b. The input value must be correctly formatted (reformatting is not supported)",
            "params": [
                {
                    "name": "startTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "endTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "options",
                    "description": "Options for the timepicker() call",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 1992,
            "description": "Calls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "params": [
                {
                    "name": "startTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "endTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "options",
                    "description": "Options for the `timepicker()` call. Also supports `reformat`,\n  a boolean value that can be used to reformat the input values to the `dateFormat`.",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "Can be used to specify the type of picker to be added",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 2006,
            "description": "Calls `datepicker` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "params": [
                {
                    "name": "startTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "endTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "options",
                    "description": "Options for the `timepicker()` call. Also supports `reformat`,\n  a boolean value that can be used to reformat the input values to the `dateFormat`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 2019,
            "description": "Calls `method` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "params": [
                {
                    "name": "method",
                    "description": "Can be used to specify the type of picker to be added",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "endTime",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "options",
                    "description": "Options for the `timepicker()` call. Also supports `reformat`,\n  a boolean value that can be used to reformat the input values to the `dateFormat`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "lib/jquery-ui.timepicker.js",
            "line": 2102,
            "description": "Log error or data to the console during error or debugging",
            "params": [
                {
                    "name": "err",
                    "description": "pass any type object to log to the console during error or debugging",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "model/Cell.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:45 AM\nTo change this template use File | Settings | File Templates.",
            "class": "Cell",
            "module": "environment"
        },
        {
            "file": "model/Cell.js",
            "line": 33,
            "description": "This method returns the packet loss of this cell",
            "itemtype": "method",
            "name": "getPacketLoss",
            "return": {
                "description": "A percentage",
                "type": "Number"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 45,
            "description": "This method returns the errors of the dns response of this cell",
            "itemtype": "method",
            "name": "getErrors",
            "return": {
                "description": "A Map of errors",
                "type": "Object"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 57,
            "description": "This method returns the number of the correct dns responses of this cell",
            "itemtype": "method",
            "name": "getNumberCorrectResponses",
            "return": {
                "description": "The number of the correct responses",
                "type": "Number"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 69,
            "description": "This method returns the response time of this cell",
            "itemtype": "method",
            "name": "getResponseTime",
            "return": {
                "description": "An amount of milliseconds",
                "type": "Number"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 81,
            "description": "This method returns the relative response time of this cell.\nThe relative response time is the percentage of increase from the minimum response time of the cell's row.",
            "itemtype": "method",
            "name": "getRelativeResponseTime",
            "return": {
                "description": "A percentage",
                "type": "Number"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 94,
            "description": "This method returns the unique ID of this cell",
            "itemtype": "method",
            "name": "getId",
            "return": {
                "description": "A unique ID",
                "type": "String"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 106,
            "description": "This method returns a string describing this cell",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "A string describing this cell",
                "type": "String"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Cell.js",
            "line": 126,
            "description": "This method returns an array of strings describing this cell in a multi-line way",
            "itemtype": "method",
            "name": "toArrayString",
            "return": {
                "description": "An array of strings",
                "type": "Array"
            },
            "class": "Cell",
            "module": "model"
        },
        {
            "file": "model/Row.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:45 AM\nTo change this template use File | Settings | File Templates.",
            "class": "Row",
            "module": "model"
        },
        {
            "file": "session/SessionManager.js",
            "line": 1,
            "description": "Created by mcandela on 10/01/14.",
            "class": "SessionManager",
            "module": "model"
        },
        {
            "file": "session/SessionManager.js",
            "line": 43,
            "description": "This method saves a session values if it is not in the volatileValues list",
            "itemtype": "method",
            "name": "saveValue",
            "input": "{String} value A value",
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 65,
            "description": "This method saves a session values if it is not in the volatileValues list",
            "itemtype": "method",
            "name": "saveValue",
            "input": "{String} value A value",
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 90,
            "description": "This method returns a session value given a key. It considers defaults, persistents and temporary (e.g. permalinks) session values",
            "itemtype": "method",
            "name": "getValue",
            "input": "{String} key A key",
            "return": {
                "description": "A value",
                "type": "String"
            },
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 122,
            "description": "This method saves a value locally",
            "itemtype": "method",
            "name": "_persistValue",
            "access": "private",
            "tagname": "",
            "input": "{String} key A key",
            "return": {
                "description": "If true the value has been saved correctly",
                "type": "Boolean"
            },
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 146,
            "description": "This method reads a value saved locally",
            "itemtype": "method",
            "name": "_retrieveValue",
            "access": "private",
            "tagname": "",
            "input": "{String} key A key",
            "return": {
                "description": "A value",
                "type": "String"
            },
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 169,
            "description": "This method returns the actual session",
            "itemtype": "method",
            "name": "getSession",
            "return": {
                "description": "A vector of values describing the actual session",
                "type": "Object"
            },
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "session/SessionManager.js",
            "line": 187,
            "description": "This method imposes temporary a session",
            "itemtype": "method",
            "name": "setSession",
            "input": "{Object} newSession A vector of values describing a session",
            "class": "SessionManager",
            "module": "session"
        },
        {
            "file": "view/removed/DataAccessibilityView.js",
            "line": 1,
            "description": "Created by mcandela on 03/02/14.",
            "class": "SvgChartView",
            "module": "session"
        },
        {
            "file": "view/removed/DataAccessibilityView.js",
            "line": 11,
            "description": "This method renders a dialog box with all the information related to a cell",
            "itemtype": "method",
            "name": "showExtraInfoDialog",
            "input": "{Object} cell A cell object",
            "class": "SvgChartView",
            "module": "session"
        },
        {
            "file": "view/removed/PTimeView.js",
            "line": 1,
            "description": "Created by mcandela on 21/01/14.",
            "class": "SvgChartView",
            "module": "session"
        },
        {
            "file": "view/removed/PTimeView.js",
            "line": 4,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/2/13\nTime: 10:42 AM\nTo change this template use File | Settings | File Templates.",
            "class": "SvgChartView",
            "module": "session"
        },
        {
            "file": "view/svg/SvgChartView.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:25 PM\nTo change this template use File | Settings | File Templates.",
            "class": "SvgChartView",
            "module": "session"
        },
        {
            "file": "view/svg/SvgContainerView.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:24 PM\nTo change this template use File | Settings | File Templates.",
            "class": "SvgContainerView",
            "module": "view.svg"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 1,
            "description": "Created by mcandela on 28/11/13.",
            "class": "BreadcrumbsView",
            "module": "view.svg"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 32,
            "description": "This method updates the html representing the breadcrumbs",
            "itemtype": "method",
            "name": "update",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 65,
            "description": "This method removes the last entry of the breadcrumbs",
            "itemtype": "method",
            "name": "removeLastLevel",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 83,
            "description": "This method removes all the entries of the breadcrumbs",
            "itemtype": "method",
            "name": "resetLevels",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 98,
            "description": "This method initialises the breadcrumbs",
            "itemtype": "method",
            "name": "init",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 113,
            "description": "This method pushes a new entry in the breadcrumbs based on the actual query parameters",
            "itemtype": "method",
            "name": "addLevel",
            "input": "{String} levelString A string describing the new state",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 126,
            "description": "This method pushes a new entries and a vector of query parameters fot that entry",
            "itemtype": "method",
            "name": "_addLevelWithParams",
            "access": "private",
            "tagname": "",
            "input": "{Object} levelString A vector of query parameters",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 151,
            "description": "This method returns the actual html representation for the breadcrumbs",
            "itemtype": "method",
            "name": "_getTitle",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "A set of DOM elements",
                "type": "Array"
            },
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 173,
            "description": "This method imposes a set of items based on a given history object",
            "itemtype": "method",
            "name": "pushHistory",
            "input": "{Object} history A history object",
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/BreadcrumbsView.js",
            "line": 198,
            "description": "This method returns the introducing label of an entry based on its type",
            "itemtype": "method",
            "name": "_getLabelPrefix",
            "access": "private",
            "tagname": "",
            "input": "{String} type An entry type",
            "return": {
                "description": "A label",
                "type": "String"
            },
            "class": "BreadcrumbsView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 1,
            "description": "Created by mcandela on 20/11/13.",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 36,
            "description": "This method updates the width of this view",
            "itemtype": "method",
            "name": "updateWidth",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 50,
            "description": "This method renders this view",
            "itemtype": "method",
            "name": "render",
            "input": "{Object} parentDom The parent DOM where this view should be drawn",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 160,
            "description": "This method creates sliding menus",
            "itemtype": "method",
            "name": "bindSlidingMenu",
            "input": "{Function} callback The callback to be called on click",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 237,
            "description": "This method populates the view selectbox with all the options",
            "itemtype": "method",
            "name": "loadPossibleView",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 271,
            "description": "This method manages the auto-update function. It is an indirection for keepUpdated in MainView but it manages\nthe menu and the feedback for the user",
            "itemtype": "method",
            "name": "keepUpdatedActive",
            "input": "{Boolean} active If true the auto-update function will be activated",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 295,
            "description": "This method manages all the auto-start functions",
            "itemtype": "method",
            "name": "_initAutoStartFunctions",
            "access": "private",
            "tagname": "",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 321,
            "description": "This method creates all the listeners for the controllers",
            "itemtype": "method",
            "name": "initButtonEventHandlers",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 642,
            "description": "This method returns the ranges for the colors thresholds",
            "itemtype": "method",
            "name": "_getThresholdsRanges",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "An array composed of two integers",
                "type": "Array"
            },
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 674,
            "description": "This method manages the full screen mode. It is an indirection for fullScreenMode in FullScreenView\nbut it manages the menu and the feedback for the user",
            "itemtype": "method",
            "name": "setFullScreen",
            "return": {
                "description": "fullScreen If true the full screen will be activated",
                "type": "Boolean"
            },
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 692,
            "description": "This method updates the status of all the items in the menu (e.g. if a button is clickable or not)",
            "itemtype": "method",
            "name": "update",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 716,
            "description": "This method updates the color thresholds with the new values",
            "itemtype": "method",
            "name": "updateLegend",
            "input": "{Number} secondValue An integer for the second threshold",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 788,
            "description": "This method updates the data resolution legend",
            "itemtype": "method",
            "name": "updateAggregationLevelLegend",
            "input": "{String} newLabel The new legend",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 813,
            "description": "This method appends an option for the selectobox fo the views",
            "itemtype": "method",
            "name": "addPossibleView",
            "input": "{String} value The value/key of the view",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 831,
            "description": "This method removes all the options of the selectobox fo the views",
            "itemtype": "method",
            "name": "removeAllViews",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/ControlPanelView.js",
            "line": 842,
            "description": "This method renders a dialog box with all the information related to a cell",
            "itemtype": "method",
            "name": "showExtraInfoDialog",
            "input": "{Object} cell A cell object",
            "class": "ControlPanelView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 1,
            "description": "Created by mcandela on 19/11/13.",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 32,
            "description": "This method manages the full screen mode",
            "itemtype": "method",
            "name": "fullScreenMode",
            "input": "{Boolean} fullScreen If true the full screen will be enabled",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 48,
            "description": "This method shows the time overview",
            "itemtype": "method",
            "name": "openTimeOverviewPanel",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 68,
            "description": "This method hides the time overview",
            "itemtype": "method",
            "name": "closeTimeOverviewPanel",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 102,
            "description": "This method starts the full screen mode",
            "itemtype": "method",
            "name": "_openFullScreen",
            "access": "private",
            "tagname": "",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/FullScreenView.js",
            "line": 149,
            "description": "This method closes the full screen mode",
            "itemtype": "method",
            "name": "_closeFullScreen",
            "access": "private",
            "tagname": "",
            "class": "FullScreenView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 10:59 AM\nTo change this template use File | Settings | File Templates.",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 43,
            "description": "This method initializes the representation layer",
            "itemtype": "method",
            "name": "init",
            "input": "{Object} instanceParam A vector of parameter to initialise the widget",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 153,
            "description": "This method computes the best height, related to the number of rows, for the chart",
            "itemtype": "method",
            "name": "_computeWidgetBestHeight",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The height",
                "type": "Number"
            },
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 169,
            "description": "This method draws the chart",
            "itemtype": "method",
            "name": "firstDraw",
            "input": "{Object} A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 204,
            "description": "This method computes and applies the actual color scale",
            "itemtype": "method",
            "name": "updateColorScales",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 246,
            "description": "This method introduces some offsets in the ranges in order to preserve the consistency with the legend",
            "itemtype": "method",
            "name": "_addOffsetToColorScale",
            "access": "private",
            "tagname": "",
            "input": "{Array} colorScale A color scale expressed as an array of values",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 259,
            "description": "This method applies a new range to the color scales",
            "itemtype": "method",
            "name": "_applyRange",
            "access": "private",
            "tagname": "",
            "input": "{Array} newValuesRange A color range expressed as an array of values",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 276,
            "description": "This method changes the color of the cells without executing a complete redraw",
            "itemtype": "method",
            "name": "updateOnlyColors",
            "input": "{Array} newValuesRange A color range expressed as an array of values",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 308,
            "description": "This method initialises the svg axis of the chart",
            "itemtype": "method",
            "name": "_initAxis",
            "access": "private",
            "tagname": "",
            "input": "{Object} data A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 365,
            "description": "This method allows to register listeners",
            "itemtype": "method",
            "name": "on",
            "input": "{Function} callback A callback",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 378,
            "description": "This method redraws completely the chart",
            "itemtype": "method",
            "name": "redraw",
            "input": "{Object} context The context of the callback",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 407,
            "description": "This method selects a column of the chart",
            "itemtype": "method",
            "name": "selectColumn",
            "input": "{Number} width The width of the selection",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 450,
            "description": "This method selects a row of the chart starting from a label",
            "itemtype": "method",
            "name": "_selectLabel",
            "access": "private",
            "tagname": "",
            "input": "{String} rowId The ID of a row",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 486,
            "description": "This method selects a row of the chart",
            "itemtype": "method",
            "name": "selectRow",
            "input": "{String} rowId The ID of a row",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 571,
            "description": "This method returns the values of the selected cell related to the current type of visualisation",
            "itemtype": "method",
            "name": "getCellValue",
            "input": "{Object} cellData The d3 cell data object",
            "return": {
                "description": "The value",
                "type": "String"
            },
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 603,
            "description": "This method shows or hides the throbber image",
            "itemtype": "method",
            "name": "loadingImage",
            "input": "{Boolean} isVisible True if visible",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 632,
            "description": "This method moves the throbber image in order to follow the cursor",
            "itemtype": "method",
            "name": "_moveLoadingImage",
            "access": "private",
            "tagname": "",
            "input": "{Object} evt A JavaScript event",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 653,
            "description": "This method moves the throbber image in order to follow the cursor",
            "itemtype": "method",
            "name": "updateXDomain",
            "input": "{Object} pullData If true a new data-set will be requested",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 721,
            "description": "This support method lists all the steps for a complete redraw",
            "itemtype": "method",
            "name": "_render",
            "access": "private",
            "tagname": "",
            "input": "{Object} data A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 739,
            "description": "This support method draws all the cell",
            "itemtype": "method",
            "name": "_renderCells",
            "access": "private",
            "tagname": "",
            "input": "{Object} data A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 904,
            "description": "This method computes the color of a given cell",
            "itemtype": "method",
            "name": "getCellColor",
            "input": "{Object} cell A cell object",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 926,
            "description": "This method computes the color of a given cell when it is selected",
            "itemtype": "method",
            "name": "getSelectedCellColor",
            "input": "{Object} cell A cell object",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 948,
            "description": "This method updates the chart applying the new data-set",
            "itemtype": "method",
            "name": "update",
            "input": "{Object} data A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 1004,
            "description": "This method sets the right profile mode related to the data-set dimension",
            "itemtype": "method",
            "name": "_setLowProfile",
            "access": "private",
            "tagname": "",
            "input": "{Object} data A data-set",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 1020,
            "description": "This method computes all the information of the y-axis items",
            "itemtype": "method",
            "name": "rowsCharacterization",
            "input": "{Object} data A data-set of rows",
            "return": {
                "description": "A map of characterizations (i.e. domain, magnets, descriptions, groups)",
                "type": "Object"
            },
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 1067,
            "description": "This method shows a textual message to the user",
            "itemtype": "method",
            "name": "showMessage",
            "input": "{String} text The message",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/MainView.js",
            "line": 1083,
            "description": "This method applies new margins to the current time window",
            "itemtype": "method",
            "name": "setTimeMargins",
            "input": "{Date} end The end date",
            "class": "MainView",
            "module": "view"
        },
        {
            "file": "view/PopUpView.js",
            "line": 1,
            "description": "Created by mcandela on 19/11/13.",
            "class": "PopUpView",
            "module": "view"
        },
        {
            "file": "view/PopUpView.js",
            "line": 23,
            "description": "This method hides the pop-up describing a cell",
            "itemtype": "method",
            "name": "hide",
            "class": "PopUpView",
            "module": "view"
        },
        {
            "file": "view/PopUpView.js",
            "line": 41,
            "description": "This method shows the pop-up describing a cell",
            "itemtype": "method",
            "name": "show",
            "input": "{Object} mouseCoords The coordinates of the mouse cursor",
            "class": "PopUpView",
            "module": "view"
        },
        {
            "file": "view/TemplateManagerView.js",
            "line": 1,
            "description": "Created by mcandela on 05/11/13.",
            "class": "TemplateManagerView",
            "module": "view"
        },
        {
            "file": "view/TemplateManagerView.js",
            "line": 167,
            "description": "This method creates all the basic DOM elements needed to the widget",
            "itemtype": "method",
            "name": "createDom",
            "input": "{Object} instanceParams A vector of initialisation parameter",
            "class": "TemplateManagerView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 10/2/13\nTime: 10:42 AM\nTo change this template use File | Settings | File Templates.",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 44,
            "description": "This method initialises the time overview",
            "itemtype": "method",
            "name": "init",
            "input": "{Array} currentSelection An array composed of two Date object and describing the actual selection",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 69,
            "description": "This is a callback triggered after the interaction with the time overview",
            "itemtype": "method",
            "name": "_afterInteraction",
            "access": "private",
            "tagname": "",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 124,
            "description": "This is a callback triggered during the interaction with the time overview",
            "itemtype": "method",
            "name": "_duringInteraction",
            "access": "private",
            "tagname": "",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 144,
            "description": "This method renders the time overview",
            "itemtype": "method",
            "name": "render",
            "input": "{Array} currentSelection An array composed of two Date object and describing the actual selection",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 262,
            "description": "This method updates the time overview. If the domainRange changes, a complete redraw is triggered.",
            "itemtype": "method",
            "name": "update",
            "input": "{Array} currentSelection An array composed of two Date object and describing the actual selection",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 289,
            "description": "This method redraws the time overview imposing a different width",
            "itemtype": "method",
            "name": "width",
            "input": "{Number} newWidth The new width in pixels",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "view/TimeOverviewView.js",
            "line": 313,
            "description": "This method updates the selection on the time overview",
            "itemtype": "method",
            "name": "updateSelection",
            "input": "{Array} currentSelection An array composed of two Date object and describing the actual selection",
            "class": "TimeOverviewView",
            "module": "view"
        },
        {
            "file": "dnsmon-loader.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 11:01 AM\nTo change this template use File | Settings | File Templates.",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-loader.js",
            "line": 10,
            "description": "Some require.js configurations",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-loader.js",
            "line": 206,
            "description": "A set of methods exposed outside",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-ripestat-loader.js",
            "line": 1,
            "description": "Some require.js configurations",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-widget-main.js",
            "line": 1,
            "description": "Created by mcandela on 23/01/14.",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-widget-main.js",
            "line": 6,
            "description": "Some path configurations",
            "class": "",
            "module": "view"
        },
        {
            "file": "dnsmon-widget-main.js",
            "line": 35,
            "description": "This is the code of the widget system",
            "class": "",
            "module": "view"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: input",
            "line": " environment/HistoryManager.js:83"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/HistoryManager.js:106"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/HistoryManager.js:106"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:23"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:23"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:41"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:164"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:231"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:231"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:301"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:316"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:331"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:344"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:357"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:382"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:407"
        },
        {
            "message": "unknown tag: input",
            "line": " environment/ParamsManager.js:446"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/jquery-ui.timepicker.js:1267"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:43"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:43"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:65"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:65"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:90"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:122"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:146"
        },
        {
            "message": "unknown tag: input",
            "line": " session/SessionManager.js:187"
        },
        {
            "message": "unknown tag: input",
            "line": " view/removed/DataAccessibilityView.js:11"
        },
        {
            "message": "unknown tag: input",
            "line": " view/BreadcrumbsView.js:113"
        },
        {
            "message": "unknown tag: input",
            "line": " view/BreadcrumbsView.js:126"
        },
        {
            "message": "unknown tag: input",
            "line": " view/BreadcrumbsView.js:126"
        },
        {
            "message": "unknown tag: input",
            "line": " view/BreadcrumbsView.js:173"
        },
        {
            "message": "unknown tag: input",
            "line": " view/BreadcrumbsView.js:198"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:50"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:160"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:160"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:160"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:160"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:160"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:271"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:716"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:716"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:788"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:813"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:813"
        },
        {
            "message": "unknown tag: input",
            "line": " view/ControlPanelView.js:842"
        },
        {
            "message": "unknown tag: input",
            "line": " view/FullScreenView.js:32"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:43"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:43"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:169"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:246"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:259"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:276"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:308"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:365"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:365"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:378"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:378"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:407"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:407"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:407"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:450"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:450"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:486"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:486"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:571"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:603"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:632"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:653"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:721"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:739"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:904"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:926"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:948"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:1004"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:1020"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:1067"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:1083"
        },
        {
            "message": "unknown tag: input",
            "line": " view/MainView.js:1083"
        },
        {
            "message": "unknown tag: input",
            "line": " view/PopUpView.js:41"
        },
        {
            "message": "unknown tag: input",
            "line": " view/PopUpView.js:41"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TemplateManagerView.js:167"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TemplateManagerView.js:167"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:44"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:44"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:44"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:144"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:144"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:262"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:262"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:289"
        },
        {
            "message": "unknown tag: input",
            "line": " view/TimeOverviewView.js:313"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:38 PM\nTo change this template use File | Settings | File Templates.",
            "line": " connector/atlas/CacheConnectorAtlas.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:27 PM\nTo change this template use File | Settings | File Templates.",
            "line": " connector/atlas/ErrorsHandlerConnectorAtlas.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:35 AM\nTo change this template use File | Settings | File Templates.",
            "line": " connector/atlas/IsolationLevelConnectorAtlas.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 17/12/13.",
            "line": " connector/AggregationLevelConnector.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:27 PM\nTo change this template use File | Settings | File Templates.",
            "line": " connector/AntiFloodConnector.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 23/01/14.",
            "line": " connector/ConnectorFacade.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:38 PM\nTo change this template use File | Settings | File Templates.",
            "line": " connector/FilterConnector.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/18/13\nTime: 9:37 AM\nTo change this template use File | Settings | File Templates.",
            "line": " controller/removed/ControllerManager.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 10:59 AM\nTo change this template use File | Settings | File Templates.",
            "line": " controller/GesturesManager.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/18/13\nTime: 9:32 AM\nTo change this template use File | Settings | File Templates.",
            "line": " controller/TimeController.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 23/01/14.",
            "line": " environment/languages/lang-en.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 23/01/14.",
            "line": " environment/removed/environment.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 11/12/13.",
            "line": " environment/HistoryManager.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 11/12/13.",
            "line": " environment/ParamsManager.js:1"
        },
        {
            "message": "Missing item type\nConfiguration file",
            "line": " environment/config.js:4"
        },
        {
            "message": "Missing item type\nA collection of utilities",
            "line": " environment/utils.js:5"
        },
        {
            "message": "Missing item type\nPublic utility to format the time",
            "line": " lib/jquery-ui.timepicker.js:1267"
        },
        {
            "message": "Missing item type\nGet the timezone offset as string from a date object (eg '+0530' for UTC+5.5)",
            "line": " lib/jquery-ui.timepicker.js:1921"
        },
        {
            "message": "Missing item type\nGet the number in minutes that represents a timezone string",
            "line": " lib/jquery-ui.timepicker.js:1944"
        },
        {
            "message": "Missing item type\nNo way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)",
            "line": " lib/jquery-ui.timepicker.js:1965"
        },
        {
            "message": "Missing item type\nCalls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.\nn.b. The input value must be correctly formatted (reformatting is not supported)",
            "line": " lib/jquery-ui.timepicker.js:1979"
        },
        {
            "message": "Missing item type\nCalls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "line": " lib/jquery-ui.timepicker.js:1992"
        },
        {
            "message": "Missing item type\nCalls `datepicker` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "line": " lib/jquery-ui.timepicker.js:2006"
        },
        {
            "message": "Missing item type\nCalls `method` on the `startTime` and `endTime` elements, and configures them to\nenforce date range limits.",
            "line": " lib/jquery-ui.timepicker.js:2019"
        },
        {
            "message": "Missing item type\nLog error or data to the console during error or debugging",
            "line": " lib/jquery-ui.timepicker.js:2102"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:45 AM\nTo change this template use File | Settings | File Templates.",
            "line": " model/Cell.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/17/13\nTime: 11:45 AM\nTo change this template use File | Settings | File Templates.",
            "line": " model/Row.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 10/01/14.",
            "line": " session/SessionManager.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 03/02/14.",
            "line": " view/removed/DataAccessibilityView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 21/01/14.",
            "line": " view/removed/PTimeView.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/2/13\nTime: 10:42 AM\nTo change this template use File | Settings | File Templates.",
            "line": " view/removed/PTimeView.js:4"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:25 PM\nTo change this template use File | Settings | File Templates.",
            "line": " view/svg/SvgChartView.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/16/13\nTime: 4:24 PM\nTo change this template use File | Settings | File Templates.",
            "line": " view/svg/SvgContainerView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 28/11/13.",
            "line": " view/BreadcrumbsView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 20/11/13.",
            "line": " view/ControlPanelView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 19/11/13.",
            "line": " view/FullScreenView.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 10:59 AM\nTo change this template use File | Settings | File Templates.",
            "line": " view/MainView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 19/11/13.",
            "line": " view/PopUpView.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 05/11/13.",
            "line": " view/TemplateManagerView.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 10/2/13\nTime: 10:42 AM\nTo change this template use File | Settings | File Templates.",
            "line": " view/TimeOverviewView.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: mcandela\nDate: 9/20/13\nTime: 11:01 AM\nTo change this template use File | Settings | File Templates.",
            "line": " dnsmon-loader.js:1"
        },
        {
            "message": "Missing item type\nSome require.js configurations",
            "line": " dnsmon-loader.js:10"
        },
        {
            "message": "Missing item type\nA set of methods exposed outside",
            "line": " dnsmon-loader.js:206"
        },
        {
            "message": "Missing item type\nSome require.js configurations",
            "line": " dnsmon-ripestat-loader.js:1"
        },
        {
            "message": "Missing item type\nCreated by mcandela on 23/01/14.",
            "line": " dnsmon-widget-main.js:1"
        },
        {
            "message": "Missing item type\nSome path configurations",
            "line": " dnsmon-widget-main.js:6"
        },
        {
            "message": "Missing item type\nThis is the code of the widget system",
            "line": " dnsmon-widget-main.js:35"
        }
    ]
}